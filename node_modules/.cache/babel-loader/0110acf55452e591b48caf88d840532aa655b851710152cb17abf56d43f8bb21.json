{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE_SOLUTIONS\\\\Desktop\\\\bolt\\\\bolt codesandbox\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40]\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5]\n});\n\n// ZipOverlay Component to display ZIP codes\nfunction ZipOverlay() {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    const url = \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\";\n    fetch(url).then(res => res.json()).then(geoData => {\n      const layer = L.geoJSON(geoData, {\n        style: {\n          color: \"#ff7800\",\n          weight: 1,\n          fillColor: \"#ffeda0\",\n          fillOpacity: 0.4\n        },\n        onEachFeature: (feature, layerInstance) => {\n          const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n          layerInstance.bindPopup(\"ZIP Code: \".concat(zip));\n        }\n      });\n      layer.addTo(map);\n    }).catch(err => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n  }, [map]);\n  return null;\n}\n\n// DrawHandler Component to handle shape drawings\n_s(ZipOverlay, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = ZipOverlay;\nfunction DrawHandler(_ref) {\n  _s2();\n  let {\n    setShapeFilteredData,\n    pricingDataRef,\n    locationsRef\n  } = _ref;\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n  const handleShapeDrawn = layer => {\n    const pricingData = pricingDataRef.current;\n    const locations = locationsRef.current;\n    const filteredPricing = pricingData.filter(p => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const filteredComps = locations.filter(loc => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const combinedData = [...filteredPricing.map(item => ({\n      type: \"pricing\",\n      apn: item.apn,\n      lotAcreage: item.lotAcreage,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    })), ...filteredComps.map(item => ({\n      type: \"comps\",\n      price: item.details.PRICE,\n      acres: item.details.ACRES,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    }))];\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: {\n            shapeOptions: {\n              color: \"#ff0000\"\n            },\n            showRadius: true\n          },\n          // circlemarker: { shapeOptions: { color: \"#ff0000\" } },\n          polygon: {\n            shapeOptions: {\n              color: \"#0000ff\"\n            },\n            showArea: true\n          },\n          rectangle: {\n            shapeOptions: {\n              color: \"#00ff00\"\n            }\n          }\n        },\n        edit: {\n          featureGroup: drawnItems\n        }\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n      map.on(\"draw:created\", e => {\n        const {\n          layer\n        } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n    }\n  }, [map, controlAdded, pricingDataRef, locationsRef, setShapeFilteredData]);\n  return null;\n}\n\n// Main App Component\n_s2(DrawHandler, \"hwbgWOkN5teoty/Wul8Dw6LkzlM=\", false, function () {\n  return [useMap];\n});\n_c2 = DrawHandler;\nfunction App() {\n  _s3();\n  // Master data lists\n  const [locations, setLocations] = useState([]);\n  const [pricingData, setPricingData] = useState([]);\n\n  // Refs for latest data\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n\n  // State for shape filtered data used only for download\n  const [shapeFilteredData, setShapeFilteredData] = useState([]);\n\n  // Acreage filter states\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n  const mapRef = useRef(null);\n  const handleMainCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        const parsedData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng);\n        }).map(row => ({\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          details: row\n        }));\n        setLocations(parsedData);\n      },\n      error: err => console.error(\"PapaParse Error (Main CSV):\", err)\n    });\n  };\n  const handlePricingCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 500,\n      chunk: results => {\n        const chunkData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng) && row[\"APN - FORMATTED\"];\n        }).map(row => ({\n          apn: row[\"APN - FORMATTED\"],\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          lotAcreage: row[\"LOT ACREAGE\"] ? parseFloat(row[\"LOT ACREAGE\"]) : null\n        }));\n        setPricingData(prev => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: err => console.error(\"PapaParse Error (Pricing CSV):\", err)\n    });\n  };\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter(pd => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(item => item.type === \"pricing\");\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n    const pricingDataTab = filteredPricingData.map(item => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude\n    }));\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n    const exportedAPNs = new Set(filteredPricingData.map(item => item.apn));\n    setLocations(prev => prev.filter(loc => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"])));\n    setPricingData(prev => prev.filter(pt => !exportedAPNs.has(pt.apn)));\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  // Determine markers to display based on acreage filter\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 1000,\n        top: 10,\n        right: 10,\n        background: \"#f8f9fa\",\n        padding: \"12px 15px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n        width: \"280px\",\n        fontFamily: \"Arial, sans-serif\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0,\n          marginBottom: \"10px\"\n        },\n        children: \"Data Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Main CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleMainCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Pricing CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handlePricingCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"6px\",\n          padding: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Acreage Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Min Acreage:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: minAcreage,\n            onChange: e => setMinAcreage(e.target.value),\n            style: {\n              width: \"60px\",\n              marginLeft: \"10px\",\n              marginRight: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Max Acreage:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: maxAcreage,\n            onChange: e => setMaxAcreage(e.target.value),\n            style: {\n              width: \"60px\",\n              marginLeft: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: applyAcreageFilter,\n          style: {\n            marginTop: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#17a2b8\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Apply Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilters,\n          style: {\n            marginTop: \"10px\",\n            marginLeft: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#6c757d\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Clear Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadFilteredDataToExcel,\n        style: {\n          marginTop: \"5px\",\n          padding: \"8px 12px\",\n          background: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"Download Filtered Data (Excel)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [41.2033, -77.1945],\n      zoom: 7,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZipOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawHandler, {\n        setShapeFilteredData: setShapeFilteredData,\n        pricingDataRef: pricingDataRef,\n        locationsRef: locationsRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), locations.filter(loc => Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1])).map((loc, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: loc.coords,\n        icon: CustomMarkerIcon,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          direction: \"top\",\n          offset: [0, -10],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PRICE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this), \" \", loc.details.PRICE, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ACRES:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), \" \", loc.details.ACRES]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }, this)\n      }, \"main-\".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this)), markersToDisplay.filter(item => item.coords && Number.isFinite(item.coords[0]) && Number.isFinite(item.coords[1]) || Number.isFinite(item.latitude) && Number.isFinite(item.longitude)).map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: point.coords && Number.isFinite(point.coords[0]) && Number.isFinite(point.coords[1]) ? point.coords : [point.latitude, point.longitude],\n        icon: DotIcon,\n        children: point.lotAcreage !== null && /*#__PURE__*/_jsxDEV(Tooltip, {\n          direction: \"top\",\n          offset: [0, -10],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"LOT ACREAGE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 21\n            }, this), \" \", point.lotAcreage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 17\n        }, this)\n      }, \"pricing-\".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"pDmKh3sufBFDZx8J3Q+4CqoNG14=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ZipOverlay\");\n$RefreshReg$(_c2, \"DrawHandler\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Tooltip","useMap","Papa","L","booleanPointInPolygon","point","polygon","XLSX","CustomMarkerIconImage","DotIconImage","jsxDEV","_jsxDEV","CustomMarkerIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","DotIcon","ZipOverlay","_s","map","url","fetch","then","res","json","geoData","layer","geoJSON","style","color","weight","fillColor","fillOpacity","onEachFeature","feature","layerInstance","zip","properties","ZCTA5CE10","bindPopup","concat","addTo","catch","err","console","error","_c","DrawHandler","_ref","_s2","setShapeFilteredData","pricingDataRef","locationsRef","controlAdded","setControlAdded","isPointInShape","lat","lng","Circle","center","getLatLng","radius","getRadius","distance","latLng","shapeGeoJSON","toGeoJSON","polygonGeometry","geometry","coordinates","handleShapeDrawn","pricingData","current","locations","filteredPricing","filter","p","coords","filteredComps","loc","combinedData","item","type","apn","lotAcreage","latitude","longitude","price","details","PRICE","acres","ACRES","log","drawnItems","FeatureGroup","addLayer","drawControl","Control","Draw","draw","marker","polyline","circle","shapeOptions","showRadius","showArea","rectangle","edit","featureGroup","addControl","on","e","_c2","App","_s3","setLocations","setPricingData","shapeFilteredData","acreageFilteredData","setAcreageFilteredData","minAcreage","setMinAcreage","maxAcreage","setMaxAcreage","mapRef","handleMainCSVUpload","event","file","target","files","parse","header","skipEmptyLines","complete","results","parsedData","data","row","parseFloat","LATITUDE","LONGITUDE","Number","isFinite","handlePricingCSVUpload","chunkSize","chunk","chunkData","prev","applyAcreageFilter","minVal","maxVal","isNaN","alert","filtered","pd","clearFilters","downloadFilteredDataToExcel","filteredPricingData","length","pricingDataTab","APN","Latitude","Longitude","workbook","utils","book_new","pricingSheet","json_to_sheet","book_append_sheet","writeFile","exportedAPNs","Set","has","pt","markersToDisplay","height","width","position","children","zIndex","top","right","background","padding","borderRadius","boxShadow","fontFamily","marginTop","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","fontWeight","accept","onChange","border","value","marginLeft","marginRight","onClick","cursor","zoom","ref","attribution","index","direction","offset","textAlign","_c3","$RefreshReg$"],"sources":["C:/Users/CREATIVE_SOLUTIONS/Desktop/bolt/bolt codesandbox/src/App.js"],"sourcesContent":["// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Tooltip,\n  useMap,\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40],\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5],\n});\n\n// ZipOverlay Component to display ZIP codes\nfunction ZipOverlay() {\n  const map = useMap();\n  useEffect(() => {\n    const url =\n      \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\";\n    fetch(url)\n      .then((res) => res.json())\n      .then((geoData) => {\n        const layer = L.geoJSON(geoData, {\n          style: {\n            color: \"#ff7800\",\n            weight: 1,\n            fillColor: \"#ffeda0\",\n            fillOpacity: 0.4,\n          },\n          onEachFeature: (feature, layerInstance) => {\n            const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n            layerInstance.bindPopup(`ZIP Code: ${zip}`);\n          },\n        });\n        layer.addTo(map);\n      })\n      .catch((err) => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n  }, [map]);\n  return null;\n}\n\n// DrawHandler Component to handle shape drawings\nfunction DrawHandler({ setShapeFilteredData, pricingDataRef, locationsRef }) {\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle ) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n\n  const handleShapeDrawn = (layer) => {\n    const pricingData = pricingDataRef.current;\n    const locations = locationsRef.current;\n\n    const filteredPricing = pricingData.filter((p) => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const filteredComps = locations.filter((loc) => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const combinedData = [\n      ...filteredPricing.map((item) => ({\n        type: \"pricing\",\n        apn: item.apn,\n        lotAcreage: item.lotAcreage,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n      ...filteredComps.map((item) => ({\n        type: \"comps\",\n        price: item.details.PRICE,\n        acres: item.details.ACRES,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n    ];\n\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: { shapeOptions: { color: \"#ff0000\" }, showRadius: true },\n          // circlemarker: { shapeOptions: { color: \"#ff0000\" } },\n          polygon: { shapeOptions: { color: \"#0000ff\" }, showArea: true },\n          rectangle: { shapeOptions: { color: \"#00ff00\" } },\n        },\n        edit: { featureGroup: drawnItems },\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n\n      map.on(\"draw:created\", (e) => {\n        const { layer } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n    }\n  }, [map, controlAdded, pricingDataRef, locationsRef, setShapeFilteredData]);\n\n  return null;\n}\n\n// Main App Component\nfunction App() {\n  // Master data lists\n  const [locations, setLocations] = useState([]); \n  const [pricingData, setPricingData] = useState([]); \n\n  // Refs for latest data\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n\n  // State for shape filtered data used only for download\n  const [shapeFilteredData, setShapeFilteredData] = useState([]); \n\n  // Acreage filter states\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n\n  const mapRef = useRef(null);\n\n  const handleMainCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        const parsedData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return Number.isFinite(lat) && Number.isFinite(lng);\n          })\n          .map((row) => ({\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            details: row,\n          }));\n        setLocations(parsedData);\n      },\n      error: (err) => console.error(\"PapaParse Error (Main CSV):\", err),\n    });\n  };\n\n  const handlePricingCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 500,\n      chunk: (results) => {\n        const chunkData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return (\n              Number.isFinite(lat) &&\n              Number.isFinite(lng) &&\n              row[\"APN - FORMATTED\"]\n            );\n          })\n          .map((row) => ({\n            apn: row[\"APN - FORMATTED\"],\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            lotAcreage: row[\"LOT ACREAGE\"]\n              ? parseFloat(row[\"LOT ACREAGE\"])\n              : null,\n          }));\n        setPricingData((prev) => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: (err) => console.error(\"PapaParse Error (Pricing CSV):\", err),\n    });\n  };\n\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter((pd) => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(\n      (item) => item.type === \"pricing\"\n    );\n\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n\n    const pricingDataTab = filteredPricingData.map((item) => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude,\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n\n    const exportedAPNs = new Set(filteredPricingData.map((item) => item.apn));\n    setLocations((prev) =>\n      prev.filter((loc) => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"]))\n    );\n    setPricingData((prev) => prev.filter((pt) => !exportedAPNs.has(pt.apn)));\n\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  // Determine markers to display based on acreage filter\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n      {/* Control Panel */}\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1000,\n          top: 10,\n          right: 10,\n          background: \"#f8f9fa\",\n          padding: \"12px 15px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n          width: \"280px\",\n          fontFamily: \"Arial, sans-serif\",\n        }}\n      >\n        <h3 style={{ marginTop: 0, marginBottom: \"10px\" }}>Data Controls</h3>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Main CSV:\n          </label>\n          <input type=\"file\" accept=\".csv\" onChange={handleMainCSVUpload} style={{ width: \"100%\", marginTop: \"5px\" }} />\n        </div>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Pricing CSV:\n          </label>\n          <input type=\"file\" accept=\".csv\" onChange={handlePricingCSVUpload} style={{ width: \"100%\", marginTop: \"5px\" }} />\n        </div>\n        <div style={{ marginBottom: \"15px\", border: \"1px solid #ccc\", borderRadius: \"6px\", padding: \"8px\" }}>\n          <label style={{ fontWeight: \"bold\" }}>Acreage Filter</label>\n          <div style={{ marginTop: \"8px\" }}>\n            <label>Min Acreage:</label>\n            <input type=\"number\" value={minAcreage} onChange={(e) => setMinAcreage(e.target.value)} style={{ width: \"60px\", marginLeft: \"10px\", marginRight: \"20px\" }} />\n            <label>Max Acreage:</label>\n            <input type=\"number\" value={maxAcreage} onChange={(e) => setMaxAcreage(e.target.value)} style={{ width: \"60px\", marginLeft: \"10px\" }} />\n          </div>\n          <button onClick={applyAcreageFilter} style={{ marginTop: \"10px\", padding: \"6px 12px\", background: \"#17a2b8\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\" }}>\n            Apply Filter\n          </button>\n          <button onClick={clearFilters} style={{ marginTop: \"10px\", marginLeft: \"10px\", padding: \"6px 12px\", background: \"#6c757d\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\" }}>\n            Clear Filter\n          </button>\n        </div>\n        <button onClick={downloadFilteredDataToExcel} style={{ marginTop: \"5px\", padding: \"8px 12px\", background: \"#007bff\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", width: \"100%\" }}>\n          Download Filtered Data (Excel)\n        </button>\n      </div>\n      <MapContainer center={[41.2033, -77.1945]} zoom={7} style={{ height: \"100%\", width: \"100%\" }} ref={mapRef}>\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; OpenStreetMap contributors\" />\n        <ZipOverlay />\n        <DrawHandler setShapeFilteredData={setShapeFilteredData} pricingDataRef={pricingDataRef} locationsRef={locationsRef} />\n\n        {/* Markers from Main CSV */}\n        {locations\n          .filter((loc) => Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1]))\n          .map((loc, index) => (\n            <Marker key={`main-${index}`} position={loc.coords} icon={CustomMarkerIcon}>\n              <Tooltip direction=\"top\" offset={[0, -10]}>\n                <div style={{ textAlign: \"left\" }}>\n                  <strong>PRICE:</strong> {loc.details.PRICE}\n                  <br />\n                  <strong>ACRES:</strong> {loc.details.ACRES}\n                </div>\n              </Tooltip>\n            </Marker>\n          ))}\n\n        {/* Markers from Pricing CSV */}\n        {markersToDisplay\n          .filter(\n            (item) =>\n              (item.coords && Number.isFinite(item.coords[0]) && Number.isFinite(item.coords[1])) ||\n              (Number.isFinite(item.latitude) && Number.isFinite(item.longitude))\n          )\n          .map((point, index) => (\n            <Marker\n              key={`pricing-${index}`}\n              position={\n                point.coords && Number.isFinite(point.coords[0]) && Number.isFinite(point.coords[1])\n                  ? point.coords\n                  : [point.latitude, point.longitude]\n              }\n              icon={DotIcon}\n            >\n              {point.lotAcreage !== null && (\n                <Tooltip direction=\"top\" offset={[0, -10]}>\n                  <div>\n                    <strong>LOT ACREAGE:</strong> {point.lotAcreage}\n                  </div>\n                </Tooltip>\n              )}\n            </Marker>\n          ))}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}