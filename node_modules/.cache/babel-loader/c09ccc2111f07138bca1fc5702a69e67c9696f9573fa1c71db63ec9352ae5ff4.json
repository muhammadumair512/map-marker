{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE_SOLUTIONS\\\\Desktop\\\\bolt\\\\bolt codesandbox\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40]\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5]\n});\nconst states = [{\n  name: \"Pennsylvania\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\"\n}, {\n  name: \"Alabama\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\"\n}, {\n  name: \"Alaska\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ak_alaska_zip_codes_geo.min.json\"\n}, {\n  name: \"Arizona\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/az_arizona_zip_codes_geo.min.json\"\n}, {\n  name: \"Arkansas\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ar_arkansas_zip_codes_geo.min.json\"\n}, {\n  name: \"California\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ca_california_zip_codes_geo.min.json\"\n}, {\n  name: \"Colorado\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/co_colorado_zip_codes_geo.min.json\"\n}, {\n  name: \"Connecticut\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ct_connecticut_zip_codes_geo.min.json\"\n}, {\n  name: \"Delaware\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/de_delaware_zip_codes_geo.min.json\"\n}, {\n  name: \"District of Columbia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/dc_district_of_columbia_zip_codes_geo.min.json\"\n}, {\n  name: \"Florida\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/fl_florida_zip_codes_geo.min.json\"\n}, {\n  name: \"Georgia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ga_georgia_zip_codes_geo.min.json\"\n}, {\n  name: \"Hawaii\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/hi_hawaii_zip_codes_geo.min.json\"\n}\n// ... include other states as needed ...\n];\nfunction ZipOverlay(_ref) {\n  _s();\n  let {\n    zipUrl\n  } = _ref;\n  const map = useMap();\n  const layersCache = useRef({});\n  useEffect(() => {\n    if (!zipUrl) return;\n\n    // Remove existing layers\n    Object.values(layersCache.current).forEach(layer => map.removeLayer(layer));\n    let currentLayer;\n    if (layersCache.current[zipUrl]) {\n      currentLayer = layersCache.current[zipUrl];\n      currentLayer.addTo(map);\n    } else {\n      fetch(zipUrl).then(res => res.json()).then(geoData => {\n        currentLayer = L.geoJSON(geoData, {\n          style: {\n            color: \"#ff7800\",\n            weight: 1,\n            fillColor: \"#ffeda0\",\n            fillOpacity: 0.4\n          },\n          onEachFeature: (feature, layerInstance) => {\n            const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n            layerInstance.bindPopup(\"ZIP Code: \".concat(zip));\n          }\n        });\n        layersCache.current[zipUrl] = currentLayer;\n        currentLayer.addTo(map);\n      }).catch(err => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n    }\n    return () => {\n      if (currentLayer) map.removeLayer(currentLayer);\n    };\n  }, [map, zipUrl]);\n  return null;\n}\n_s(ZipOverlay, \"RJbtr0yo5/9yZFwpq+M4DEOqAUc=\", false, function () {\n  return [useMap];\n});\n_c = ZipOverlay;\nfunction DrawHandler(_ref2) {\n  _s2();\n  let {\n    setShapeFilteredData,\n    pricingDataRef,\n    locationsRef,\n    setDeleteFunction\n  } = _ref2;\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n  const handleShapeDrawn = layer => {\n    shapesArrayRef.current.push(layer);\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n    const pricingData = pricingDataRef.current;\n    const locations = locationsRef.current;\n    const filteredPricing = pricingData.filter(p => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const filteredComps = locations.filter(loc => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const combinedData = [...filteredPricing.map(item => ({\n      type: \"pricing\",\n      apn: item.apn,\n      lotAcreage: item.lotAcreage,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    })), ...filteredComps.map(item => ({\n      type: \"comps\",\n      price: item.details.PRICE,\n      acres: item.details.ACRES,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    }))];\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: {\n            shapeOptions: {\n              color: \"#ff0000\"\n            },\n            showRadius: true\n          },\n          circlemarker: false,\n          polygon: {\n            shapeOptions: {\n              color: \"#0000ff\"\n            },\n            showArea: true\n          },\n          rectangle: {\n            shapeOptions: {\n              color: \"#00ff00\"\n            }\n          }\n        },\n        edit: {\n          featureGroup: drawnItems\n        }\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n      map.on(\"draw:created\", e => {\n        const {\n          layer\n        } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n      setDeleteFunction(() => {\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(shape => shape !== selectedShapeRef.current);\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [map, controlAdded, pricingDataRef, locationsRef, setShapeFilteredData, setDeleteFunction]);\n  return null;\n}\n_s2(DrawHandler, \"0Vjk56DwBpY3/aOwBBcB/RsDvz4=\", false, function () {\n  return [useMap];\n});\n_c2 = DrawHandler;\nfunction App() {\n  _s3();\n  const [selectedStateUrl, setSelectedStateUrl] = useState(states[0].url);\n  const [stateSearch, setStateSearch] = useState(\"\");\n  const [locations, setLocations] = useState([]);\n  const [pricingData, setPricingData] = useState([]);\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]);\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n  const handleMainCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        const parsedData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng);\n        }).map(row => ({\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          details: row\n        }));\n        setLocations(parsedData);\n      },\n      error: err => console.error(\"PapaParse Error (Main CSV):\", err)\n    });\n  };\n  const handlePricingCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 500,\n      chunk: results => {\n        const chunkData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng) && row[\"APN - FORMATTED\"];\n        }).map(row => ({\n          apn: row[\"APN - FORMATTED\"],\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          lotAcreage: row[\"LOT ACREAGE\"] ? parseFloat(row[\"LOT ACREAGE\"]) : null\n        }));\n        setPricingData(prev => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: err => console.error(\"PapaParse Error (Pricing CSV):\", err)\n    });\n  };\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter(pd => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(item => item.type === \"pricing\");\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n    const pricingDataTab = filteredPricingData.map(item => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude\n    }));\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n    const exportedAPNs = new Set(filteredPricingData.map(item => item.apn));\n    setLocations(prev => prev.filter(loc => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"])));\n    setPricingData(prev => prev.filter(pt => !exportedAPNs.has(pt.apn)));\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 1000,\n        top: 10,\n        right: 10,\n        background: \"#f8f9fa\",\n        padding: \"12px 15px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n        width: \"250px\",\n        fontFamily: \"Arial, sans-serif\",\n        maxHeight: \"90vh\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: \"Select State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search state...\",\n        value: stateSearch,\n        onChange: e => setStateSearch(e.target.value),\n        style: {\n          width: \"100%\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedStateUrl,\n        onChange: e => setSelectedStateUrl(e.target.value),\n        style: {\n          width: \"100%\",\n          marginBottom: \"10px\"\n        },\n        children: states.filter(st => st.name.toLowerCase().includes(stateSearch.toLowerCase())).map(st => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: st.url,\n          children: st.name\n        }, st.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0,\n          marginBottom: \"10px\"\n        },\n        children: \"Data Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Main CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleMainCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Pricing CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handlePricingCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"6px\",\n          padding: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Acreage Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"4px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Min Acreage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: minAcreage,\n              onChange: e => setMinAcreage(e.target.value),\n              style: {\n                width: \"60px\",\n                marginLeft: \"15px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Max Acreage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxAcreage,\n              onChange: e => setMaxAcreage(e.target.value),\n              style: {\n                width: \"60px\",\n                marginLeft: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: applyAcreageFilter,\n          style: {\n            marginTop: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#17a2b8\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Apply Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilters,\n          style: {\n            marginTop: \"10px\",\n            marginLeft: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#6c757d\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Clear Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadFilteredDataToExcel,\n        style: {\n          marginTop: \"5px\",\n          padding: \"8px 12px\",\n          background: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"Download Filtered Data (Excel)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteLastShapeRef.current(),\n        style: {\n          marginTop: \"10px\",\n          padding: \"8px 12px\",\n          background: \"#dc3545\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"\\uD83D\\uDDD1\\uFE0F Delete Selected Shape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [41.2033, -77.1945],\n      zoom: 7,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZipOverlay, {\n        zipUrl: selectedStateUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawHandler, {\n        setShapeFilteredData: setShapeFilteredData,\n        pricingDataRef: pricingDataRef,\n        locationsRef: locationsRef,\n        setDeleteFunction: fn => {\n          deleteLastShapeRef.current = fn;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), locations.filter(loc => Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1])).map((loc, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: loc.coords,\n        icon: CustomMarkerIcon,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          direction: \"top\",\n          offset: [0, -10],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PRICE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }, this), \" \", loc.details.PRICE, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ACRES:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 19\n            }, this), \" \", loc.details.ACRES]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 15\n        }, this)\n      }, \"main-\".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 13\n      }, this)), markersToDisplay.filter(item => item.coords && Number.isFinite(item.coords[0]) && Number.isFinite(item.coords[1]) || Number.isFinite(item.latitude) && Number.isFinite(item.longitude)).map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: point.coords && Number.isFinite(point.coords[0]) && Number.isFinite(point.coords[1]) ? point.coords : [point.latitude, point.longitude],\n        icon: DotIcon,\n        children: point.lotAcreage !== null && /*#__PURE__*/_jsxDEV(Tooltip, {\n          direction: \"top\",\n          offset: [0, -10],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"LOT ACREAGE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 21\n            }, this), \" \", point.lotAcreage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 17\n        }, this)\n      }, \"pricing-\".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"Vb/VddgEdkbmLcr0N65L7ht74cI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ZipOverlay\");\n$RefreshReg$(_c2, \"DrawHandler\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Tooltip","useMap","Papa","L","booleanPointInPolygon","point","polygon","XLSX","CustomMarkerIconImage","DotIconImage","jsxDEV","_jsxDEV","CustomMarkerIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","DotIcon","states","name","url","ZipOverlay","_ref","_s","zipUrl","map","layersCache","Object","values","current","forEach","layer","removeLayer","currentLayer","addTo","fetch","then","res","json","geoData","geoJSON","style","color","weight","fillColor","fillOpacity","onEachFeature","feature","layerInstance","zip","properties","ZCTA5CE10","bindPopup","concat","catch","err","console","error","_c","DrawHandler","_ref2","_s2","setShapeFilteredData","pricingDataRef","locationsRef","setDeleteFunction","controlAdded","setControlAdded","drawnItemsRef","shapesArrayRef","selectedShapeRef","isPointInShape","lat","lng","Circle","CircleMarker","center","getLatLng","radius","getRadius","distance","latLng","shapeGeoJSON","toGeoJSON","polygonGeometry","geometry","coordinates","handleShapeDrawn","push","on","pricingData","locations","filteredPricing","filter","p","coords","filteredComps","loc","combinedData","item","type","apn","lotAcreage","latitude","longitude","price","details","PRICE","acres","ACRES","log","drawnItems","FeatureGroup","addLayer","drawControl","Control","Draw","draw","marker","polyline","circle","shapeOptions","showRadius","circlemarker","showArea","rectangle","edit","featureGroup","addControl","e","shape","length","lastShape","pop","_c2","App","_s3","selectedStateUrl","setSelectedStateUrl","stateSearch","setStateSearch","setLocations","setPricingData","shapeFilteredData","acreageFilteredData","setAcreageFilteredData","minAcreage","setMinAcreage","maxAcreage","setMaxAcreage","mapRef","deleteLastShapeRef","handleMainCSVUpload","event","file","target","files","parse","header","skipEmptyLines","complete","results","parsedData","data","row","parseFloat","LATITUDE","LONGITUDE","Number","isFinite","handlePricingCSVUpload","chunkSize","chunk","chunkData","prev","applyAcreageFilter","minVal","maxVal","isNaN","alert","filtered","pd","clearFilters","downloadFilteredDataToExcel","filteredPricingData","pricingDataTab","APN","Latitude","Longitude","workbook","utils","book_new","pricingSheet","json_to_sheet","book_append_sheet","writeFile","exportedAPNs","Set","has","pt","markersToDisplay","height","width","position","children","zIndex","top","right","background","padding","borderRadius","boxShadow","fontFamily","maxHeight","overflowY","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","marginBottom","st","toLowerCase","includes","marginTop","display","accept","border","marginLeft","onClick","cursor","zoom","ref","attribution","fn","index","direction","offset","textAlign","_c3","$RefreshReg$"],"sources":["C:/Users/CREATIVE_SOLUTIONS/Desktop/bolt/bolt codesandbox/src/App.js"],"sourcesContent":["// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Tooltip,\n  useMap,\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40],\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5],\n});\n\nconst states = [\n  { name: \"Pennsylvania\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\" },\n  { name: \"Alabama\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\" },\n  { name: \"Alaska\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ak_alaska_zip_codes_geo.min.json\" },\n  { name: \"Arizona\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/az_arizona_zip_codes_geo.min.json\" },\n  { name: \"Arkansas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ar_arkansas_zip_codes_geo.min.json\" },\n  { name: \"California\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ca_california_zip_codes_geo.min.json\" },\n  { name: \"Colorado\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/co_colorado_zip_codes_geo.min.json\" },\n  { name: \"Connecticut\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ct_connecticut_zip_codes_geo.min.json\" },\n  { name: \"Delaware\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/de_delaware_zip_codes_geo.min.json\" },\n  { name: \"District of Columbia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/dc_district_of_columbia_zip_codes_geo.min.json\" },\n  { name: \"Florida\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/fl_florida_zip_codes_geo.min.json\" },\n  { name: \"Georgia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ga_georgia_zip_codes_geo.min.json\" },\n  { name: \"Hawaii\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/hi_hawaii_zip_codes_geo.min.json\" },\n  // ... include other states as needed ...\n];\n\nfunction ZipOverlay({ zipUrl }) {\n  const map = useMap();\n  const layersCache = useRef({});\n  \n  useEffect(() => {\n    if (!zipUrl) return;\n    \n    // Remove existing layers\n    Object.values(layersCache.current).forEach(layer => map.removeLayer(layer));\n    let currentLayer;\n    \n    if (layersCache.current[zipUrl]) {\n      currentLayer = layersCache.current[zipUrl];\n      currentLayer.addTo(map);\n    } else {\n      fetch(zipUrl)\n        .then((res) => res.json())\n        .then((geoData) => {\n          currentLayer = L.geoJSON(geoData, {\n            style: {\n              color: \"#ff7800\",\n              weight: 1,\n              fillColor: \"#ffeda0\",\n              fillOpacity: 0.4,\n            },\n            onEachFeature: (feature, layerInstance) => {\n              const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n              layerInstance.bindPopup(`ZIP Code: ${zip}`);\n            },\n          });\n          layersCache.current[zipUrl] = currentLayer;\n          currentLayer.addTo(map);\n        })\n        .catch((err) => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n    }\n    \n    return () => {\n      if (currentLayer) map.removeLayer(currentLayer);\n    };\n  }, [map, zipUrl]);\n  \n  return null;\n}\n\nfunction DrawHandler({ setShapeFilteredData, pricingDataRef, locationsRef, setDeleteFunction }) {\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n\n  const handleShapeDrawn = (layer) => {\n    shapesArrayRef.current.push(layer);\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n\n    const pricingData = pricingDataRef.current;\n    const locations = locationsRef.current;\n\n    const filteredPricing = pricingData.filter((p) => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const filteredComps = locations.filter((loc) => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const combinedData = [\n      ...filteredPricing.map((item) => ({\n        type: \"pricing\",\n        apn: item.apn,\n        lotAcreage: item.lotAcreage,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n      ...filteredComps.map((item) => ({\n        type: \"comps\",\n        price: item.details.PRICE,\n        acres: item.details.ACRES,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n    ];\n\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: { shapeOptions: { color: \"#ff0000\" }, showRadius: true },\n          circlemarker: false,\n          polygon: { shapeOptions: { color: \"#0000ff\" }, showArea: true },\n          rectangle: { shapeOptions: { color: \"#00ff00\" } },\n        },\n        edit: { featureGroup: drawnItems },\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n\n      map.on(\"draw:created\", (e) => {\n        const { layer } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n\n      setDeleteFunction(() => {\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(\n            (shape) => shape !== selectedShapeRef.current\n          );\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [\n    map,\n    controlAdded,\n    pricingDataRef,\n    locationsRef,\n    setShapeFilteredData,\n    setDeleteFunction,\n  ]);\n\n  return null;\n}\n\nfunction App() {\n  const [selectedStateUrl, setSelectedStateUrl] = useState(states[0].url);\n  const [stateSearch, setStateSearch] = useState(\"\");\n  const [locations, setLocations] = useState([]); \n  const [pricingData, setPricingData] = useState([]); \n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]); \n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n\n  useEffect(() => { pricingDataRef.current = pricingData; }, [pricingData]);\n  useEffect(() => { locationsRef.current = locations; }, [locations]);\n\n  const handleMainCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        const parsedData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return Number.isFinite(lat) && Number.isFinite(lng);\n          })\n          .map((row) => ({\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            details: row,\n          }));\n        setLocations(parsedData);\n      },\n      error: (err) => console.error(\"PapaParse Error (Main CSV):\", err),\n    });\n  };\n\n  const handlePricingCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 500,\n      chunk: (results) => {\n        const chunkData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return (\n              Number.isFinite(lat) &&\n              Number.isFinite(lng) &&\n              row[\"APN - FORMATTED\"]\n            );\n          })\n          .map((row) => ({\n            apn: row[\"APN - FORMATTED\"],\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            lotAcreage: row[\"LOT ACREAGE\"]\n              ? parseFloat(row[\"LOT ACREAGE\"])\n              : null,\n          }));\n        setPricingData((prev) => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: (err) => console.error(\"PapaParse Error (Pricing CSV):\", err),\n    });\n  };\n\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter((pd) => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(\n      (item) => item.type === \"pricing\"\n    );\n\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n\n    const pricingDataTab = filteredPricingData.map((item) => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude,\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n\n    const exportedAPNs = new Set(filteredPricingData.map((item) => item.apn));\n    setLocations((prev) =>\n      prev.filter((loc) => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"]))\n    );\n    setPricingData((prev) => prev.filter((pt) => !exportedAPNs.has(pt.apn)));\n\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n      {/* Control Panel */}\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1000,\n          top: 10,\n          right: 10,\n          background: \"#f8f9fa\",\n          padding: \"12px 15px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n          width: \"250px\",\n          fontFamily: \"Arial, sans-serif\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n        }}\n      >\n        <label style={{ fontWeight: \"bold\" }}>Select State:</label>\n        <input\n          type=\"text\"\n          placeholder=\"Search state...\"\n          value={stateSearch}\n          onChange={(e) => setStateSearch(e.target.value)}\n          style={{ width: \"100%\", marginBottom: \"10px\" }}\n        />\n        <select\n          value={selectedStateUrl}\n          onChange={(e) => setSelectedStateUrl(e.target.value)}\n          style={{ width: \"100%\", marginBottom: \"10px\" }}\n        >\n          {states\n            .filter((st) =>\n              st.name.toLowerCase().includes(stateSearch.toLowerCase())\n            )\n            .map((st) => (\n              <option key={st.name} value={st.url}>\n                {st.name}\n              </option>\n            ))}\n        </select>\n        <h3 style={{ marginTop: 0, marginBottom: \"10px\" }}>Data Controls</h3>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Main CSV:\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleMainCSVUpload}\n            style={{ width: \"100%\", marginTop: \"5px\" }}\n          />\n        </div>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Pricing CSV:\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handlePricingCSVUpload}\n            style={{ width: \"100%\", marginTop: \"5px\" }}\n          />\n        </div>\n        <div style={{ marginBottom: \"15px\", border: \"1px solid #ccc\", borderRadius: \"6px\", padding: \"8px\" }}>\n          <label style={{ fontWeight: \"bold\" }}>Acreage Filter</label>\n          <div style={{ marginTop: \"8px\" }}>\n            <div style={{ marginBottom: \"4px\" }}>\n              <label>Min Acreage:</label>\n              <input\n                type=\"number\"\n                value={minAcreage}\n                onChange={(e) => setMinAcreage(e.target.value)}\n                style={{ width: \"60px\", marginLeft: \"15px\" }}\n              />\n            </div>\n            <div style={{ marginBottom: \"15px\" }}>\n              <label>Max Acreage:</label>\n              <input\n                type=\"number\"\n                value={maxAcreage}\n                onChange={(e) => setMaxAcreage(e.target.value)}\n                style={{ width: \"60px\", marginLeft: \"10px\" }}\n              />\n            </div>\n          </div>\n          <button onClick={applyAcreageFilter} style={{ marginTop: \"10px\", padding: \"6px 12px\", background: \"#17a2b8\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\" }}>\n            Apply Filter\n          </button>\n          <button onClick={clearFilters} style={{ marginTop: \"10px\", marginLeft: \"10px\", padding: \"6px 12px\", background: \"#6c757d\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\" }}>\n            Clear Filter\n          </button>\n        </div>\n        <button onClick={downloadFilteredDataToExcel} style={{ marginTop: \"5px\", padding: \"8px 12px\", background: \"#007bff\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", width: \"100%\" }}>\n          Download Filtered Data (Excel)\n        </button>\n        <button onClick={() => deleteLastShapeRef.current()} style={{ marginTop: \"10px\", padding: \"8px 12px\", background: \"#dc3545\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", width: \"100%\" }}>\n          🗑️ Delete Selected Shape\n        </button>\n      </div>\n      <MapContainer center={[41.2033, -77.1945]} zoom={7} style={{ height: \"100%\", width: \"100%\" }} ref={mapRef}>\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; OpenStreetMap contributors\" />\n        <ZipOverlay zipUrl={selectedStateUrl} />\n        <DrawHandler\n          setShapeFilteredData={setShapeFilteredData}\n          pricingDataRef={pricingDataRef}\n          locationsRef={locationsRef}\n          setDeleteFunction={(fn) => { deleteLastShapeRef.current = fn; }}\n        />\n        {locations\n          .filter((loc) => Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1]))\n          .map((loc, index) => (\n            <Marker key={`main-${index}`} position={loc.coords} icon={CustomMarkerIcon}>\n              <Tooltip direction=\"top\" offset={[0, -10]}>\n                <div style={{ textAlign: \"left\" }}>\n                  <strong>PRICE:</strong> {loc.details.PRICE}\n                  <br />\n                  <strong>ACRES:</strong> {loc.details.ACRES}\n                </div>\n              </Tooltip>\n            </Marker>\n          ))}\n        {markersToDisplay\n          .filter(\n            (item) =>\n              (item.coords &&\n                Number.isFinite(item.coords[0]) &&\n                Number.isFinite(item.coords[1])) ||\n              (Number.isFinite(item.latitude) && Number.isFinite(item.longitude))\n          )\n          .map((point, index) => (\n            <Marker\n              key={`pricing-${index}`}\n              position={\n                point.coords &&\n                Number.isFinite(point.coords[0]) &&\n                Number.isFinite(point.coords[1])\n                  ? point.coords\n                  : [point.latitude, point.longitude]\n              }\n              icon={DotIcon}\n            >\n              {point.lotAcreage !== null && (\n                <Tooltip direction=\"top\" offset={[0, -10]}>\n                  <div>\n                    <strong>LOT ACREAGE:</strong> {point.lotAcreage}\n                  </div>\n                </Tooltip>\n              )}\n            </Marker>\n          ))}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SACEC,YAAY,EACZC,SAAS,EACTC,MAAM,EACNC,OAAO,EACPC,MAAM,QACD,eAAe;AACtB,OAAO,0BAA0B;AACjC,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,oCAAoC;AAC3C,OAAO,cAAc;AACrB,OAAOC,qBAAqB,MAAM,gCAAgC;AAClE,SAASC,KAAK,EAAEC,OAAO,QAAQ,eAAe;AAC9C,OAAO,KAAKC,IAAI,MAAM,MAAM;;AAE5B;AACA,OAAOC,qBAAqB,MAAM,qBAAqB;AACvD,OAAOC,YAAY,MAAM,iBAAiB;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAGT,CAAC,CAACU,IAAI,CAAC;EAC9BC,OAAO,EAAEN,qBAAqB;EAC9BO,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;AACF,MAAMC,OAAO,GAAGf,CAAC,CAACU,IAAI,CAAC;EACrBC,OAAO,EAAEL,YAAY;EACrBM,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC;AACnB,CAAC,CAAC;AAEF,MAAMG,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,cAAc;EAAEC,GAAG,EAAE;AAAoH,CAAC,EAClJ;EAAED,IAAI,EAAE,SAAS;EAAEC,GAAG,EAAE;AAA0H,CAAC,EACnJ;EAAED,IAAI,EAAE,QAAQ;EAAEC,GAAG,EAAE;AAAyH,CAAC,EACjJ;EAAED,IAAI,EAAE,SAAS;EAAEC,GAAG,EAAE;AAA0H,CAAC,EACnJ;EAAED,IAAI,EAAE,UAAU;EAAEC,GAAG,EAAE;AAA2H,CAAC,EACrJ;EAAED,IAAI,EAAE,YAAY;EAAEC,GAAG,EAAE;AAA6H,CAAC,EACzJ;EAAED,IAAI,EAAE,UAAU;EAAEC,GAAG,EAAE;AAA2H,CAAC,EACrJ;EAAED,IAAI,EAAE,aAAa;EAAEC,GAAG,EAAE;AAA8H,CAAC,EAC3J;EAAED,IAAI,EAAE,UAAU;EAAEC,GAAG,EAAE;AAA2H,CAAC,EACrJ;EAAED,IAAI,EAAE,sBAAsB;EAAEC,GAAG,EAAE;AAAuI,CAAC,EAC7K;EAAED,IAAI,EAAE,SAAS;EAAEC,GAAG,EAAE;AAA0H,CAAC,EACnJ;EAAED,IAAI,EAAE,SAAS;EAAEC,GAAG,EAAE;AAA0H,CAAC,EACnJ;EAAED,IAAI,EAAE,QAAQ;EAAEC,GAAG,EAAE;AAAyH;AAChJ;AAAA,CACD;AAED,SAASC,UAAUA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC5B,MAAMG,GAAG,GAAGzB,MAAM,CAAC,CAAC;EACpB,MAAM0B,WAAW,GAAGhC,MAAM,CAAC,CAAC,CAAC,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,IAAI,CAAC6B,MAAM,EAAE;;IAEb;IACAG,MAAM,CAACC,MAAM,CAACF,WAAW,CAACG,OAAO,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIN,GAAG,CAACO,WAAW,CAACD,KAAK,CAAC,CAAC;IAC3E,IAAIE,YAAY;IAEhB,IAAIP,WAAW,CAACG,OAAO,CAACL,MAAM,CAAC,EAAE;MAC/BS,YAAY,GAAGP,WAAW,CAACG,OAAO,CAACL,MAAM,CAAC;MAC1CS,YAAY,CAACC,KAAK,CAACT,GAAG,CAAC;IACzB,CAAC,MAAM;MACLU,KAAK,CAACX,MAAM,CAAC,CACVY,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,OAAO,IAAK;QACjBN,YAAY,GAAG/B,CAAC,CAACsC,OAAO,CAACD,OAAO,EAAE;UAChCE,KAAK,EAAE;YACLC,KAAK,EAAE,SAAS;YAChBC,MAAM,EAAE,CAAC;YACTC,SAAS,EAAE,SAAS;YACpBC,WAAW,EAAE;UACf,CAAC;UACDC,aAAa,EAAEA,CAACC,OAAO,EAAEC,aAAa,KAAK;YACzC,MAAMC,GAAG,GAAGF,OAAO,CAACG,UAAU,CAACC,SAAS,IAAI,aAAa;YACzDH,aAAa,CAACI,SAAS,cAAAC,MAAA,CAAcJ,GAAG,CAAE,CAAC;UAC7C;QACF,CAAC,CAAC;QACFvB,WAAW,CAACG,OAAO,CAACL,MAAM,CAAC,GAAGS,YAAY;QAC1CA,YAAY,CAACC,KAAK,CAACT,GAAG,CAAC;MACzB,CAAC,CAAC,CACD6B,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,GAAG,CAAC,CAAC;IAC3E;IAEA,OAAO,MAAM;MACX,IAAItB,YAAY,EAAER,GAAG,CAACO,WAAW,CAACC,YAAY,CAAC;IACjD,CAAC;EACH,CAAC,EAAE,CAACR,GAAG,EAAED,MAAM,CAAC,CAAC;EAEjB,OAAO,IAAI;AACb;AAACD,EAAA,CA1CQF,UAAU;EAAA,QACLrB,MAAM;AAAA;AAAA0D,EAAA,GADXrC,UAAU;AA4CnB,SAASsC,WAAWA,CAAAC,KAAA,EAA4E;EAAAC,GAAA;EAAA,IAA3E;IAAEC,oBAAoB;IAAEC,cAAc;IAAEC,YAAY;IAAEC;EAAkB,CAAC,GAAAL,KAAA;EAC5F,MAAMnC,GAAG,GAAGzB,MAAM,CAAC,CAAC;EACpB,MAAM,CAACkE,YAAY,EAAEC,eAAe,CAAC,GAAG1E,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM2E,aAAa,GAAG1E,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM2E,cAAc,GAAG3E,MAAM,CAAC,EAAE,CAAC;EACjC,MAAM4E,gBAAgB,GAAG5E,MAAM,CAAC,IAAI,CAAC;EAErC,MAAM6E,cAAc,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAE1C,KAAK,KAAK;IAC1C,IAAIA,KAAK,YAAY7B,CAAC,CAACwE,MAAM,IAAI3C,KAAK,YAAY7B,CAAC,CAACyE,YAAY,EAAE;MAChE,MAAMC,MAAM,GAAG7C,KAAK,CAAC8C,SAAS,CAAC,CAAC;MAChC,MAAMC,MAAM,GAAG/C,KAAK,CAACgD,SAAS,CAAC,CAAC;MAChC,OAAOtD,GAAG,CAACuD,QAAQ,CAACJ,MAAM,EAAE1E,CAAC,CAAC+E,MAAM,CAACT,GAAG,EAAEC,GAAG,CAAC,CAAC,IAAIK,MAAM;IAC3D;IACA,MAAMI,YAAY,GAAGnD,KAAK,CAACoD,SAAS,CAAC,CAAC;IACtC,MAAMC,eAAe,GAAG/E,OAAO,CAAC6E,YAAY,CAACG,QAAQ,CAACC,WAAW,CAAC;IAClE,OAAOnF,qBAAqB,CAACC,KAAK,CAAC,CAACqE,GAAG,EAAED,GAAG,CAAC,CAAC,EAAEY,eAAe,CAAC;EAClE,CAAC;EAED,MAAMG,gBAAgB,GAAIxD,KAAK,IAAK;IAClCsC,cAAc,CAACxC,OAAO,CAAC2D,IAAI,CAACzD,KAAK,CAAC;IAClCA,KAAK,CAAC0D,EAAE,CAAC,OAAO,EAAE,MAAM;MACtBnB,gBAAgB,CAACzC,OAAO,GAAGE,KAAK;IAClC,CAAC,CAAC;IAEF,MAAM2D,WAAW,GAAG3B,cAAc,CAAClC,OAAO;IAC1C,MAAM8D,SAAS,GAAG3B,YAAY,CAACnC,OAAO;IAEtC,MAAM+D,eAAe,GAAGF,WAAW,CAACG,MAAM,CAAEC,CAAC,IAAK;MAChD,MAAM,CAACtB,GAAG,EAAEC,GAAG,CAAC,GAAGqB,CAAC,CAACC,MAAM;MAC3B,OAAOxB,cAAc,CAACC,GAAG,EAAEC,GAAG,EAAE1C,KAAK,CAAC;IACxC,CAAC,CAAC;IAEF,MAAMiE,aAAa,GAAGL,SAAS,CAACE,MAAM,CAAEI,GAAG,IAAK;MAC9C,MAAM,CAACzB,GAAG,EAAEC,GAAG,CAAC,GAAGwB,GAAG,CAACF,MAAM;MAC7B,OAAOxB,cAAc,CAACC,GAAG,EAAEC,GAAG,EAAE1C,KAAK,CAAC;IACxC,CAAC,CAAC;IAEF,MAAMmE,YAAY,GAAG,CACnB,GAAGN,eAAe,CAACnE,GAAG,CAAE0E,IAAI,KAAM;MAChCC,IAAI,EAAE,SAAS;MACfC,GAAG,EAAEF,IAAI,CAACE,GAAG;MACbC,UAAU,EAAEH,IAAI,CAACG,UAAU;MAC3BC,QAAQ,EAAEJ,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC;MACxBS,SAAS,EAAEL,IAAI,CAACJ,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,EACH,GAAGC,aAAa,CAACvE,GAAG,CAAE0E,IAAI,KAAM;MAC9BC,IAAI,EAAE,OAAO;MACbK,KAAK,EAAEN,IAAI,CAACO,OAAO,CAACC,KAAK;MACzBC,KAAK,EAAET,IAAI,CAACO,OAAO,CAACG,KAAK;MACzBN,QAAQ,EAAEJ,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC;MACxBS,SAAS,EAAEL,IAAI,CAACJ,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,CACJ;IAEDjC,oBAAoB,CAACoC,YAAY,CAAC;IAClC1C,OAAO,CAACsD,GAAG,CAAC,sBAAsB,EAAEZ,YAAY,CAAC;EACnD,CAAC;EAEDvG,SAAS,CAAC,MAAM;IACd,IAAI,CAACuE,YAAY,EAAE;MACjB,MAAM6C,UAAU,GAAG,IAAI7G,CAAC,CAAC8G,YAAY,CAAC,CAAC;MACvC5C,aAAa,CAACvC,OAAO,GAAGkF,UAAU;MAClCtF,GAAG,CAACwF,QAAQ,CAACF,UAAU,CAAC;MACxB,MAAMG,WAAW,GAAG,IAAIhH,CAAC,CAACiH,OAAO,CAACC,IAAI,CAAC;QACrCC,IAAI,EAAE;UACJC,MAAM,EAAE,KAAK;UACbC,QAAQ,EAAE,KAAK;UACfC,MAAM,EAAE;YAAEC,YAAY,EAAE;cAAE/E,KAAK,EAAE;YAAU,CAAC;YAAEgF,UAAU,EAAE;UAAK,CAAC;UAChEC,YAAY,EAAE,KAAK;UACnBtH,OAAO,EAAE;YAAEoH,YAAY,EAAE;cAAE/E,KAAK,EAAE;YAAU,CAAC;YAAEkF,QAAQ,EAAE;UAAK,CAAC;UAC/DC,SAAS,EAAE;YAAEJ,YAAY,EAAE;cAAE/E,KAAK,EAAE;YAAU;UAAE;QAClD,CAAC;QACDoF,IAAI,EAAE;UAAEC,YAAY,EAAEhB;QAAW;MACnC,CAAC,CAAC;MACFtF,GAAG,CAACuG,UAAU,CAACd,WAAW,CAAC;MAC3B/C,eAAe,CAAC,IAAI,CAAC;MAErB1C,GAAG,CAACgE,EAAE,CAAC,cAAc,EAAGwC,CAAC,IAAK;QAC5B,MAAM;UAAElG;QAAM,CAAC,GAAGkG,CAAC;QACnBlB,UAAU,CAACE,QAAQ,CAAClF,KAAK,CAAC;QAC1BwD,gBAAgB,CAACxD,KAAK,CAAC;MACzB,CAAC,CAAC;MAEFkC,iBAAiB,CAAC,MAAM;QACtB,IAAIK,gBAAgB,CAACzC,OAAO,IAAIuC,aAAa,CAACvC,OAAO,EAAE;UACrDuC,aAAa,CAACvC,OAAO,CAACG,WAAW,CAACsC,gBAAgB,CAACzC,OAAO,CAAC;UAC3DwC,cAAc,CAACxC,OAAO,GAAGwC,cAAc,CAACxC,OAAO,CAACgE,MAAM,CACnDqC,KAAK,IAAKA,KAAK,KAAK5D,gBAAgB,CAACzC,OACxC,CAAC;UACDyC,gBAAgB,CAACzC,OAAO,GAAG,IAAI;QACjC,CAAC,MAAM,IAAIwC,cAAc,CAACxC,OAAO,CAACsG,MAAM,GAAG,CAAC,EAAE;UAC5C,MAAMC,SAAS,GAAG/D,cAAc,CAACxC,OAAO,CAACwG,GAAG,CAAC,CAAC;UAC9C,IAAID,SAAS,IAAIhE,aAAa,CAACvC,OAAO,EAAE;YACtCuC,aAAa,CAACvC,OAAO,CAACG,WAAW,CAACoG,SAAS,CAAC;UAC9C;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CACD3G,GAAG,EACHyC,YAAY,EACZH,cAAc,EACdC,YAAY,EACZF,oBAAoB,EACpBG,iBAAiB,CAClB,CAAC;EAEF,OAAO,IAAI;AACb;AAACJ,GAAA,CA5GQF,WAAW;EAAA,QACN3D,MAAM;AAAA;AAAAsI,GAAA,GADX3E,WAAW;AA8GpB,SAAS4E,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjJ,QAAQ,CAACyB,MAAM,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC;EACvE,MAAM,CAACuH,WAAW,EAAEC,cAAc,CAAC,GAAGnJ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkG,SAAS,EAAEkD,YAAY,CAAC,GAAGpJ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiG,WAAW,EAAEoD,cAAc,CAAC,GAAGrJ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMsE,cAAc,GAAGrE,MAAM,CAACgG,WAAW,CAAC;EAC1C,MAAM1B,YAAY,GAAGtE,MAAM,CAACiG,SAAS,CAAC;EACtC,MAAM,CAACoD,iBAAiB,EAAEjF,oBAAoB,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACuJ,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGxJ,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACyJ,UAAU,EAAEC,aAAa,CAAC,GAAG1J,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2J,UAAU,EAAEC,aAAa,CAAC,GAAG5J,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM6J,MAAM,GAAG5J,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM6J,kBAAkB,GAAG7J,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IAAEoE,cAAc,CAAClC,OAAO,GAAG6D,WAAW;EAAE,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACzE/F,SAAS,CAAC,MAAM;IAAEqE,YAAY,CAACnC,OAAO,GAAG8D,SAAS;EAAE,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEnE,MAAM6D,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IACXzJ,IAAI,CAAC4J,KAAK,CAACH,IAAI,EAAE;MACfI,MAAM,EAAE,IAAI;MACZC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAGC,OAAO,IAAK;QACrB,MAAMC,UAAU,GAAGD,OAAO,CAACE,IAAI,CAC5BtE,MAAM,CAAEuE,GAAG,IAAK;UACf,MAAM5F,GAAG,GAAG6F,UAAU,CAACD,GAAG,CAACE,QAAQ,CAAC;UACpC,MAAM7F,GAAG,GAAG4F,UAAU,CAACD,GAAG,CAACG,SAAS,CAAC;UACrC,OAAOC,MAAM,CAACC,QAAQ,CAACjG,GAAG,CAAC,IAAIgG,MAAM,CAACC,QAAQ,CAAChG,GAAG,CAAC;QACrD,CAAC,CAAC,CACDhD,GAAG,CAAE2I,GAAG,KAAM;UACbrE,MAAM,EAAE,CAACsE,UAAU,CAACD,GAAG,CAACE,QAAQ,CAAC,EAAED,UAAU,CAACD,GAAG,CAACG,SAAS,CAAC,CAAC;UAC7D7D,OAAO,EAAE0D;QACX,CAAC,CAAC,CAAC;QACLvB,YAAY,CAACqB,UAAU,CAAC;MAC1B,CAAC;MACDzG,KAAK,EAAGF,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG;IAClE,CAAC,CAAC;EACJ,CAAC;EAED,MAAMmH,sBAAsB,GAAIjB,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IACXzJ,IAAI,CAAC4J,KAAK,CAACH,IAAI,EAAE;MACfI,MAAM,EAAE,IAAI;MACZC,cAAc,EAAE,IAAI;MACpBY,SAAS,EAAE,GAAG;MACdC,KAAK,EAAGX,OAAO,IAAK;QAClB,MAAMY,SAAS,GAAGZ,OAAO,CAACE,IAAI,CAC3BtE,MAAM,CAAEuE,GAAG,IAAK;UACf,MAAM5F,GAAG,GAAG6F,UAAU,CAACD,GAAG,CAACE,QAAQ,CAAC;UACpC,MAAM7F,GAAG,GAAG4F,UAAU,CAACD,GAAG,CAACG,SAAS,CAAC;UACrC,OACEC,MAAM,CAACC,QAAQ,CAACjG,GAAG,CAAC,IACpBgG,MAAM,CAACC,QAAQ,CAAChG,GAAG,CAAC,IACpB2F,GAAG,CAAC,iBAAiB,CAAC;QAE1B,CAAC,CAAC,CACD3I,GAAG,CAAE2I,GAAG,KAAM;UACb/D,GAAG,EAAE+D,GAAG,CAAC,iBAAiB,CAAC;UAC3BrE,MAAM,EAAE,CAACsE,UAAU,CAACD,GAAG,CAACE,QAAQ,CAAC,EAAED,UAAU,CAACD,GAAG,CAACG,SAAS,CAAC,CAAC;UAC7DjE,UAAU,EAAE8D,GAAG,CAAC,aAAa,CAAC,GAC1BC,UAAU,CAACD,GAAG,CAAC,aAAa,CAAC,CAAC,GAC9B;QACN,CAAC,CAAC,CAAC;QACLtB,cAAc,CAAEgC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGD,SAAS,CAAC,CAAC;MACnD,CAAC;MACDb,QAAQ,EAAEA,CAAA,KAAMxG,OAAO,CAACsD,GAAG,CAAC,+BAA+B,CAAC;MAC5DrD,KAAK,EAAGF,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG;IACrE,CAAC,CAAC;EACJ,CAAC;EAED,MAAMwH,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,MAAM,GAAGX,UAAU,CAACnB,UAAU,CAAC;IACrC,MAAM+B,MAAM,GAAGZ,UAAU,CAACjB,UAAU,CAAC;IACrC,IAAI8B,KAAK,CAACF,MAAM,CAAC,IAAIE,KAAK,CAACD,MAAM,CAAC,EAAE;MAClCE,KAAK,CAAC,iEAAiE,CAAC;MACxE;IACF;IACA,MAAMC,QAAQ,GAAG1F,WAAW,CAACG,MAAM,CAAEwF,EAAE,IAAK;MAC1C,IAAIA,EAAE,CAAC/E,UAAU,IAAI,IAAI,EAAE,OAAO,KAAK;MACvC,OAAO+E,EAAE,CAAC/E,UAAU,IAAI0E,MAAM,IAAIK,EAAE,CAAC/E,UAAU,IAAI2E,MAAM;IAC3D,CAAC,CAAC;IACFhC,sBAAsB,CAACmC,QAAQ,CAAC;EAClC,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBxH,oBAAoB,CAAC,EAAE,CAAC;IACxBmF,sBAAsB,CAAC,EAAE,CAAC;IAC1BE,aAAa,CAAC,EAAE,CAAC;IACjBE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMkC,2BAA2B,GAAGA,CAAA,KAAM;IACxC,MAAMC,mBAAmB,GAAGzC,iBAAiB,CAAClD,MAAM,CACjDM,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,SAC1B,CAAC;IAED,IAAIoF,mBAAmB,CAACrD,MAAM,KAAK,CAAC,EAAE;MACpCgD,KAAK,CAAC,oDAAoD,CAAC;MAC3D;IACF;IAEA,MAAMM,cAAc,GAAGD,mBAAmB,CAAC/J,GAAG,CAAE0E,IAAI,KAAM;MACxDuF,GAAG,EAAEvF,IAAI,CAACE,GAAG;MACb,aAAa,EAAEF,IAAI,CAACG,UAAU;MAC9BqF,QAAQ,EAAExF,IAAI,CAACI,QAAQ;MACvBqF,SAAS,EAAEzF,IAAI,CAACK;IAClB,CAAC,CAAC,CAAC;IAEH,MAAMqF,QAAQ,GAAGvL,IAAI,CAACwL,KAAK,CAACC,QAAQ,CAAC,CAAC;IACtC,MAAMC,YAAY,GAAG1L,IAAI,CAACwL,KAAK,CAACG,aAAa,CAACR,cAAc,CAAC;IAC7DnL,IAAI,CAACwL,KAAK,CAACI,iBAAiB,CAACL,QAAQ,EAAEG,YAAY,EAAE,cAAc,CAAC;IACpE1L,IAAI,CAAC6L,SAAS,CAACN,QAAQ,EAAE,oBAAoB,CAAC;IAE9C,MAAMO,YAAY,GAAG,IAAIC,GAAG,CAACb,mBAAmB,CAAC/J,GAAG,CAAE0E,IAAI,IAAKA,IAAI,CAACE,GAAG,CAAC,CAAC;IACzEwC,YAAY,CAAEiC,IAAI,IAChBA,IAAI,CAACjF,MAAM,CAAEI,GAAG,IAAK,CAACmG,YAAY,CAACE,GAAG,CAACrG,GAAG,CAACS,OAAO,CAAC,iBAAiB,CAAC,CAAC,CACxE,CAAC;IACDoC,cAAc,CAAEgC,IAAI,IAAKA,IAAI,CAACjF,MAAM,CAAE0G,EAAE,IAAK,CAACH,YAAY,CAACE,GAAG,CAACC,EAAE,CAAClG,GAAG,CAAC,CAAC,CAAC;IAExEvC,oBAAoB,CAAC,EAAE,CAAC;IACxBmF,sBAAsB,CAAC,EAAE,CAAC;IAE1BkC,KAAK,CAAC,oDAAoD,CAAC;EAC7D,CAAC;EAED,MAAMqB,gBAAgB,GAAGxD,mBAAmB,CAACb,MAAM,GAAGa,mBAAmB,GAAGtD,WAAW;EAEvF,oBACEhF,OAAA;IAAK+B,KAAK,EAAE;MAAEgK,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBAEnElM,OAAA;MACE+B,KAAK,EAAE;QACLkK,QAAQ,EAAE,UAAU;QACpBE,MAAM,EAAE,IAAI;QACZC,GAAG,EAAE,EAAE;QACPC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE,SAAS;QACrBC,OAAO,EAAE,WAAW;QACpBC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE,4BAA4B;QACvCT,KAAK,EAAE,OAAO;QACdU,UAAU,EAAE,mBAAmB;QAC/BC,SAAS,EAAE,MAAM;QACjBC,SAAS,EAAE;MACb,CAAE;MAAAV,QAAA,gBAEFlM,OAAA;QAAO+B,KAAK,EAAE;UAAE8K,UAAU,EAAE;QAAO,CAAE;QAAAX,QAAA,EAAC;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3DjN,OAAA;QACE0F,IAAI,EAAC,MAAM;QACXwH,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAElF,WAAY;QACnBmF,QAAQ,EAAG7F,CAAC,IAAKW,cAAc,CAACX,CAAC,CAAC0B,MAAM,CAACkE,KAAK,CAAE;QAChDpL,KAAK,EAAE;UAAEiK,KAAK,EAAE,MAAM;UAAEqB,YAAY,EAAE;QAAO;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFjN,OAAA;QACEmN,KAAK,EAAEpF,gBAAiB;QACxBqF,QAAQ,EAAG7F,CAAC,IAAKS,mBAAmB,CAACT,CAAC,CAAC0B,MAAM,CAACkE,KAAK,CAAE;QACrDpL,KAAK,EAAE;UAAEiK,KAAK,EAAE,MAAM;UAAEqB,YAAY,EAAE;QAAO,CAAE;QAAAnB,QAAA,EAE9C1L,MAAM,CACJ2E,MAAM,CAAEmI,EAAE,IACTA,EAAE,CAAC7M,IAAI,CAAC8M,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACvF,WAAW,CAACsF,WAAW,CAAC,CAAC,CAC1D,CAAC,CACAxM,GAAG,CAAEuM,EAAE,iBACNtN,OAAA;UAAsBmN,KAAK,EAAEG,EAAE,CAAC5M,GAAI;UAAAwL,QAAA,EACjCoB,EAAE,CAAC7M;QAAI,GADG6M,EAAE,CAAC7M,IAAI;UAAAqM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACTjN,OAAA;QAAI+B,KAAK,EAAE;UAAE0L,SAAS,EAAE,CAAC;UAAEJ,YAAY,EAAE;QAAO,CAAE;QAAAnB,QAAA,EAAC;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrEjN,OAAA;QAAK+B,KAAK,EAAE;UAAEsL,YAAY,EAAE;QAAO,CAAE;QAAAnB,QAAA,gBACnClM,OAAA;UAAO+B,KAAK,EAAE;YAAE2L,OAAO,EAAE,OAAO;YAAEb,UAAU,EAAE;UAAO,CAAE;UAAAX,QAAA,EAAC;QAExD;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRjN,OAAA;UACE0F,IAAI,EAAC,MAAM;UACXiI,MAAM,EAAC,MAAM;UACbP,QAAQ,EAAEtE,mBAAoB;UAC9B/G,KAAK,EAAE;YAAEiK,KAAK,EAAE,MAAM;YAAEyB,SAAS,EAAE;UAAM;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjN,OAAA;QAAK+B,KAAK,EAAE;UAAEsL,YAAY,EAAE;QAAO,CAAE;QAAAnB,QAAA,gBACnClM,OAAA;UAAO+B,KAAK,EAAE;YAAE2L,OAAO,EAAE,OAAO;YAAEb,UAAU,EAAE;UAAO,CAAE;UAAAX,QAAA,EAAC;QAExD;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRjN,OAAA;UACE0F,IAAI,EAAC,MAAM;UACXiI,MAAM,EAAC,MAAM;UACbP,QAAQ,EAAEpD,sBAAuB;UACjCjI,KAAK,EAAE;YAAEiK,KAAK,EAAE,MAAM;YAAEyB,SAAS,EAAE;UAAM;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjN,OAAA;QAAK+B,KAAK,EAAE;UAAEsL,YAAY,EAAE,MAAM;UAAEO,MAAM,EAAE,gBAAgB;UAAEpB,YAAY,EAAE,KAAK;UAAED,OAAO,EAAE;QAAM,CAAE;QAAAL,QAAA,gBAClGlM,OAAA;UAAO+B,KAAK,EAAE;YAAE8K,UAAU,EAAE;UAAO,CAAE;UAAAX,QAAA,EAAC;QAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5DjN,OAAA;UAAK+B,KAAK,EAAE;YAAE0L,SAAS,EAAE;UAAM,CAAE;UAAAvB,QAAA,gBAC/BlM,OAAA;YAAK+B,KAAK,EAAE;cAAEsL,YAAY,EAAE;YAAM,CAAE;YAAAnB,QAAA,gBAClClM,OAAA;cAAAkM,QAAA,EAAO;YAAY;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3BjN,OAAA;cACE0F,IAAI,EAAC,QAAQ;cACbyH,KAAK,EAAE3E,UAAW;cAClB4E,QAAQ,EAAG7F,CAAC,IAAKkB,aAAa,CAAClB,CAAC,CAAC0B,MAAM,CAACkE,KAAK,CAAE;cAC/CpL,KAAK,EAAE;gBAAEiK,KAAK,EAAE,MAAM;gBAAE6B,UAAU,EAAE;cAAO;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNjN,OAAA;YAAK+B,KAAK,EAAE;cAAEsL,YAAY,EAAE;YAAO,CAAE;YAAAnB,QAAA,gBACnClM,OAAA;cAAAkM,QAAA,EAAO;YAAY;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3BjN,OAAA;cACE0F,IAAI,EAAC,QAAQ;cACbyH,KAAK,EAAEzE,UAAW;cAClB0E,QAAQ,EAAG7F,CAAC,IAAKoB,aAAa,CAACpB,CAAC,CAAC0B,MAAM,CAACkE,KAAK,CAAE;cAC/CpL,KAAK,EAAE;gBAAEiK,KAAK,EAAE,MAAM;gBAAE6B,UAAU,EAAE;cAAO;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNjN,OAAA;UAAQ8N,OAAO,EAAEzD,kBAAmB;UAACtI,KAAK,EAAE;YAAE0L,SAAS,EAAE,MAAM;YAAElB,OAAO,EAAE,UAAU;YAAED,UAAU,EAAE,SAAS;YAAEtK,KAAK,EAAE,OAAO;YAAE4L,MAAM,EAAE,MAAM;YAAEpB,YAAY,EAAE,KAAK;YAAEuB,MAAM,EAAE;UAAU,CAAE;UAAA7B,QAAA,EAAC;QAEvL;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjN,OAAA;UAAQ8N,OAAO,EAAElD,YAAa;UAAC7I,KAAK,EAAE;YAAE0L,SAAS,EAAE,MAAM;YAAEI,UAAU,EAAE,MAAM;YAAEtB,OAAO,EAAE,UAAU;YAAED,UAAU,EAAE,SAAS;YAAEtK,KAAK,EAAE,OAAO;YAAE4L,MAAM,EAAE,MAAM;YAAEpB,YAAY,EAAE,KAAK;YAAEuB,MAAM,EAAE;UAAU,CAAE;UAAA7B,QAAA,EAAC;QAErM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNjN,OAAA;QAAQ8N,OAAO,EAAEjD,2BAA4B;QAAC9I,KAAK,EAAE;UAAE0L,SAAS,EAAE,KAAK;UAAElB,OAAO,EAAE,UAAU;UAAED,UAAU,EAAE,SAAS;UAAEtK,KAAK,EAAE,OAAO;UAAE4L,MAAM,EAAE,MAAM;UAAEpB,YAAY,EAAE,KAAK;UAAEuB,MAAM,EAAE,SAAS;UAAE/B,KAAK,EAAE;QAAO,CAAE;QAAAE,QAAA,EAAC;MAE9M;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjN,OAAA;QAAQ8N,OAAO,EAAEA,CAAA,KAAMjF,kBAAkB,CAAC1H,OAAO,CAAC,CAAE;QAACY,KAAK,EAAE;UAAE0L,SAAS,EAAE,MAAM;UAAElB,OAAO,EAAE,UAAU;UAAED,UAAU,EAAE,SAAS;UAAEtK,KAAK,EAAE,OAAO;UAAE4L,MAAM,EAAE,MAAM;UAAEpB,YAAY,EAAE,KAAK;UAAEuB,MAAM,EAAE,SAAS;UAAE/B,KAAK,EAAE;QAAO,CAAE;QAAAE,QAAA,EAAC;MAEtN;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNjN,OAAA,CAACd,YAAY;MAACgF,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAE;MAAC8J,IAAI,EAAE,CAAE;MAACjM,KAAK,EAAE;QAAEgK,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAE;MAACiC,GAAG,EAAErF,MAAO;MAAAsD,QAAA,gBACxGlM,OAAA,CAACb,SAAS;QAACuB,GAAG,EAAC,oDAAoD;QAACwN,WAAW,EAAC;MAAmC;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtHjN,OAAA,CAACW,UAAU;QAACG,MAAM,EAAEiH;MAAiB;QAAA+E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCjN,OAAA,CAACiD,WAAW;QACVG,oBAAoB,EAAEA,oBAAqB;QAC3CC,cAAc,EAAEA,cAAe;QAC/BC,YAAY,EAAEA,YAAa;QAC3BC,iBAAiB,EAAG4K,EAAE,IAAK;UAAEtF,kBAAkB,CAAC1H,OAAO,GAAGgN,EAAE;QAAE;MAAE;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,EACDhI,SAAS,CACPE,MAAM,CAAEI,GAAG,IAAKuE,MAAM,CAACC,QAAQ,CAACxE,GAAG,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC,IAAIyE,MAAM,CAACC,QAAQ,CAACxE,GAAG,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CACjFtE,GAAG,CAAC,CAACwE,GAAG,EAAE6I,KAAK,kBACdpO,OAAA,CAACZ,MAAM;QAAuB6M,QAAQ,EAAE1G,GAAG,CAACF,MAAO;QAACnF,IAAI,EAAED,gBAAiB;QAAAiM,QAAA,eACzElM,OAAA,CAACX,OAAO;UAACgP,SAAS,EAAC,KAAK;UAACC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE;UAAApC,QAAA,eACxClM,OAAA;YAAK+B,KAAK,EAAE;cAAEwM,SAAS,EAAE;YAAO,CAAE;YAAArC,QAAA,gBAChClM,OAAA;cAAAkM,QAAA,EAAQ;YAAM;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC1H,GAAG,CAACS,OAAO,CAACC,KAAK,eAC1CjG,OAAA;cAAA8M,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNjN,OAAA;cAAAkM,QAAA,EAAQ;YAAM;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC1H,GAAG,CAACS,OAAO,CAACG,KAAK;UAAA;YAAA2G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC,WAAAtK,MAAA,CAPSyL,KAAK;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQlB,CACT,CAAC,EACHnB,gBAAgB,CACd3G,MAAM,CACJM,IAAI,IACFA,IAAI,CAACJ,MAAM,IACVyE,MAAM,CAACC,QAAQ,CAACtE,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,IAC/ByE,MAAM,CAACC,QAAQ,CAACtE,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,IAChCyE,MAAM,CAACC,QAAQ,CAACtE,IAAI,CAACI,QAAQ,CAAC,IAAIiE,MAAM,CAACC,QAAQ,CAACtE,IAAI,CAACK,SAAS,CACrE,CAAC,CACA/E,GAAG,CAAC,CAACrB,KAAK,EAAE0O,KAAK,kBAChBpO,OAAA,CAACZ,MAAM;QAEL6M,QAAQ,EACNvM,KAAK,CAAC2F,MAAM,IACZyE,MAAM,CAACC,QAAQ,CAACrK,KAAK,CAAC2F,MAAM,CAAC,CAAC,CAAC,CAAC,IAChCyE,MAAM,CAACC,QAAQ,CAACrK,KAAK,CAAC2F,MAAM,CAAC,CAAC,CAAC,CAAC,GAC5B3F,KAAK,CAAC2F,MAAM,GACZ,CAAC3F,KAAK,CAACmG,QAAQ,EAAEnG,KAAK,CAACoG,SAAS,CACrC;QACD5F,IAAI,EAAEK,OAAQ;QAAA2L,QAAA,EAEbxM,KAAK,CAACkG,UAAU,KAAK,IAAI,iBACxB5F,OAAA,CAACX,OAAO;UAACgP,SAAS,EAAC,KAAK;UAACC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE;UAAApC,QAAA,eACxClM,OAAA;YAAAkM,QAAA,gBACElM,OAAA;cAAAkM,QAAA,EAAQ;YAAY;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACvN,KAAK,CAACkG,UAAU;UAAA;YAAAkH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MACV,cAAAtK,MAAA,CAhBeyL,KAAK;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBf,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACnF,GAAA,CA5RQD,GAAG;AAAA2G,GAAA,GAAH3G,GAAG;AA8RZ,eAAeA,GAAG;AAAC,IAAA7E,EAAA,EAAA4E,GAAA,EAAA4G,GAAA;AAAAC,YAAA,CAAAzL,EAAA;AAAAyL,YAAA,CAAA7G,GAAA;AAAA6G,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}