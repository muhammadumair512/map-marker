{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE_SOLUTIONS\\\\Desktop\\\\bolt\\\\bolt codesandbox\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\n// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// 1) Import the MarkerClusterGroup component\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40]\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5]\n});\nconst states = [{\n  name: \"Pennsylvania\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\"\n}, {\n  name: \"Alabama\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\"\n}, {\n  name: \"Alaska\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ak_alaska_zip_codes_geo.min.json\"\n}, {\n  name: \"Arizona\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/az_arizona_zip_codes_geo.min.json\"\n}, {\n  name: \"Arkansas\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ar_arkansas_zip_codes_geo.min.json\"\n}, {\n  name: \"California\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ca_california_zip_codes_geo.min.json\"\n}, {\n  name: \"Colorado\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/co_colorado_zip_codes_geo.min.json\"\n}, {\n  name: \"Connecticut\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ct_connecticut_zip_codes_geo.min.json\"\n}, {\n  name: \"Delaware\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/de_delaware_zip_codes_geo.min.json\"\n}, {\n  name: \"District of Columbia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/dc_district_of_columbia_zip_codes_geo.min.json\"\n}, {\n  name: \"Florida\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/fl_florida_zip_codes_geo.min.json\"\n}, {\n  name: \"Georgia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ga_georgia_zip_codes_geo.min.json\"\n}, {\n  name: \"Hawaii\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/hi_hawaii_zip_codes_geo.min.json\"\n}, {\n  name: \"Idaho\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/id_idaho_zip_codes_geo.min.json\"\n}, {\n  name: \"Illinois\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/il_illinois_zip_codes_geo.min.json\"\n}, {\n  name: \"Indiana\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/in_indiana_zip_codes_geo.min.json\"\n}, {\n  name: \"Iowa\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ia_iowa_zip_codes_geo.min.json\"\n}, {\n  name: \"Kansas\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ks_kansas_zip_codes_geo.min.json\"\n}, {\n  name: \"Kentucky\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ky_kentucky_zip_codes_geo.min.json\"\n}, {\n  name: \"Louisiana\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/la_louisiana_zip_codes_geo.min.json\"\n}, {\n  name: \"Maine\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/me_maine_zip_codes_geo.min.json\"\n}, {\n  name: \"Maryland\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/md_maryland_zip_codes_geo.min.json\"\n}, {\n  name: \"Massachusetts\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ma_massachusetts_zip_codes_geo.min.json\"\n}, {\n  name: \"Michigan\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mi_michigan_zip_codes_geo.min.json\"\n}, {\n  name: \"Minnesota\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mn_minnesota_zip_codes_geo.min.json\"\n}, {\n  name: \"Mississippi\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ms_mississippi_zip_codes_geo.min.json\"\n}, {\n  name: \"Missouri\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mo_missouri_zip_codes_geo.min.json\"\n}, {\n  name: \"Montana\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mt_montana_zip_codes_geo.min.json\"\n}, {\n  name: \"Nebraska\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ne_nebraska_zip_codes_geo.min.json\"\n}, {\n  name: \"Nevada\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nv_nevada_zip_codes_geo.min.json\"\n}, {\n  name: \"New Hampshire\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nh_new_hampshire_zip_codes_geo.min.json\"\n}, {\n  name: \"New Jersey\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nj_new_jersey_zip_codes_geo.min.json\"\n}, {\n  name: \"New Mexico\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nm_new_mexico_zip_codes_geo.min.json\"\n}, {\n  name: \"New York\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ny_new_york_zip_codes_geo.min.json\"\n}, {\n  name: \"North Carolina\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nc_north_carolina_zip_codes_geo.min.json\"\n}, {\n  name: \"North Dakota\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nd_north_dakota_zip_codes_geo.min.json\"\n}, {\n  name: \"Ohio\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/oh_ohio_zip_codes_geo.min.json\"\n}, {\n  name: \"Oklahoma\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ok_oklahoma_zip_codes_geo.min.json\"\n}, {\n  name: \"Oregon\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/or_oregon_zip_codes_geo.min.json\"\n}, {\n  name: \"Rhode Island\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ri_rhode_island_zip_codes_geo.min.json\"\n}, {\n  name: \"South Carolina\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sc_south_carolina_zip_codes_geo.min.json\"\n}, {\n  name: \"South Dakota\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sd_south_dakota_zip_codes_geo.min.json\"\n}, {\n  name: \"Tennessee\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tn_tennessee_zip_codes_geo.min.json\"\n}, {\n  name: \"Texas\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tx_texas_zip_codes_geo.min.json\"\n}, {\n  name: \"Utah\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ut_utah_zip_codes_geo.min.json\"\n}, {\n  name: \"Vermont\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/vt_vermont_zip_codes_geo.min.json\"\n}, {\n  name: \"Virginia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/va_virginia_zip_codes_geo.min.json\"\n}, {\n  name: \"Washington\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wa_washington_zip_codes_geo.min.json\"\n}, {\n  name: \"West Virginia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wv_west_virginia_zip_codes_geo.min.json\"\n}, {\n  name: \"Wisconsin\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wi_wisconsin_zip_codes_geo.min.json\"\n}, {\n  name: \"Wyoming\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wy_wyoming_zip_codes_geo.min.json\"\n}];\n\n// ----- ZipOverlay remains unchanged -----\nfunction ZipOverlay(_ref) {\n  _s();\n  let {\n    zipUrl\n  } = _ref;\n  const map = useMap();\n  const layersCache = useRef({});\n  useEffect(() => {\n    if (!zipUrl) return;\n\n    // Remove existing layers from the map\n    Object.values(layersCache.current).forEach(layer => map.removeLayer(layer));\n    let currentLayer;\n    if (layersCache.current[zipUrl]) {\n      currentLayer = layersCache.current[zipUrl];\n      currentLayer.addTo(map);\n    } else {\n      fetch(zipUrl).then(res => res.json()).then(geoData => {\n        currentLayer = L.geoJSON(geoData, {\n          style: {\n            color: \"#ff7800\",\n            weight: 1,\n            fillColor: \"#ffeda0\",\n            fillOpacity: 0.4\n          },\n          onEachFeature: (feature, layerInstance) => {\n            const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n            layerInstance.bindPopup(\"ZIP Code: \".concat(zip));\n          }\n        });\n        layersCache.current[zipUrl] = currentLayer;\n        currentLayer.addTo(map);\n      }).catch(err => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n    }\n    return () => {\n      if (currentLayer) map.removeLayer(currentLayer);\n    };\n  }, [map, zipUrl]);\n  return null;\n}\n\n// ----- DrawHandler remains largely unchanged -----\n_s(ZipOverlay, \"RJbtr0yo5/9yZFwpq+M4DEOqAUc=\", false, function () {\n  return [useMap];\n});\n_c = ZipOverlay;\nfunction DrawHandler(_ref2) {\n  _s2();\n  let {\n    setShapeFilteredData,\n    pricingDataRef,\n    locationsRef,\n    setDeleteFunction,\n    acreageFilteredDataRef\n  } = _ref2;\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n  const handleShapeDrawn = layer => {\n    shapesArrayRef.current.push(layer);\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n\n    // Use acreageFilteredData if it exists, otherwise use the full pricingData:\n    const currentPricingData = acreageFilteredDataRef.current.length ? acreageFilteredDataRef.current : pricingDataRef.current;\n    const filteredPricing = currentPricingData.filter(p => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const filteredComps = locationsRef.current.filter(loc => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const combinedData = [...filteredPricing.map(item => ({\n      type: \"pricing\",\n      apn: item.apn,\n      lotAcreage: item.lotAcreage,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    })), ...filteredComps.map(item => ({\n      type: \"comps\",\n      price: item.details.PRICE,\n      acres: item.details.ACRES,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    }))];\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: {\n            shapeOptions: {\n              color: \"#ff0000\"\n            },\n            showRadius: true\n          },\n          circlemarker: false,\n          polygon: {\n            shapeOptions: {\n              color: \"#0000ff\"\n            },\n            showArea: true\n          },\n          rectangle: {\n            shapeOptions: {\n              color: \"#00ff00\"\n            }\n          }\n        },\n        edit: {\n          featureGroup: drawnItems\n        }\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n      map.on(\"draw:created\", e => {\n        const {\n          layer\n        } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n      setDeleteFunction(() => {\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(shape => shape !== selectedShapeRef.current);\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [map, controlAdded, pricingDataRef, locationsRef, setShapeFilteredData, setDeleteFunction, acreageFilteredDataRef]);\n  return null;\n}\n_s2(DrawHandler, \"0Vjk56DwBpY3/aOwBBcB/RsDvz4=\", false, function () {\n  return [useMap];\n});\n_c2 = DrawHandler;\nfunction App() {\n  _s3();\n  const [selectedStateUrl, setSelectedStateUrl] = useState(states[0].url);\n  const [locations, setLocations] = useState([]);\n  const [pricingData, setPricingData] = useState([]);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]);\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n\n  // Refs\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  const acreageFilteredDataRef = useRef(acreageFilteredData);\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n\n  // Keep references in sync\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n  useEffect(() => {\n    acreageFilteredDataRef.current = acreageFilteredData;\n  }, [acreageFilteredData]);\n  const handleMainCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        const parsedData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng);\n        }).map(row => ({\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          details: row\n        }));\n        setLocations(parsedData);\n      },\n      error: err => console.error(\"PapaParse Error (Main CSV):\", err)\n    });\n  };\n  const handlePricingCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // If loading is truly huge (several hundred thousand rows),\n    // consider removing chunking. Or keep smaller chunks to prevent\n    // freezing the main thread. Both strategies can help performance.\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 15000,\n      // Adjust chunk size as needed\n      chunk: results => {\n        const chunkData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng) && row[\"APN - FORMATTED\"];\n        }).map(row => ({\n          apn: row[\"APN - FORMATTED\"],\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          lotAcreage: row[\"LOT ACREAGE\"] ? parseFloat(row[\"LOT ACREAGE\"]) : null\n        }));\n        setPricingData(prev => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: err => console.error(\"PapaParse Error (Pricing CSV):\", err)\n    });\n  };\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter(pd => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(item => item.type === \"pricing\");\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n    const pricingDataTab = filteredPricingData.map(item => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude\n    }));\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n\n    // Remove exported APNs from the map data\n    const exportedAPNs = new Set(filteredPricingData.map(item => item.apn));\n    setLocations(prev => prev.filter(loc => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"])));\n    setPricingData(prev => prev.filter(pt => !exportedAPNs.has(pt.apn)));\n\n    // Clear shape and acreage filters\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  // Decide which pricing markers to display: acreage-filtered or all\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 1000,\n        top: 10,\n        right: 10,\n        background: \"#f8f9fa\",\n        padding: \"12px 15px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n        width: \"250px\",\n        fontFamily: \"Arial, sans-serif\",\n        maxHeight: \"90vh\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(StateDropdown, {\n        states: states,\n        selectedStateUrl: selectedStateUrl,\n        onSelect: url => setSelectedStateUrl(url)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0,\n          marginBottom: \"10px\"\n        },\n        children: \"Data Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Main CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleMainCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Pricing CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handlePricingCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"6px\",\n          padding: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Acreage Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"4px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Min Acreage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: minAcreage,\n              onChange: e => setMinAcreage(e.target.value),\n              style: {\n                width: \"60px\",\n                marginLeft: \"15px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Max Acreage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxAcreage,\n              onChange: e => setMaxAcreage(e.target.value),\n              style: {\n                width: \"60px\",\n                marginLeft: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: applyAcreageFilter,\n          style: {\n            marginTop: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#17a2b8\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Apply Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilters,\n          style: {\n            marginTop: \"10px\",\n            marginLeft: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#6c757d\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Clear Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadFilteredDataToExcel,\n        style: {\n          marginTop: \"5px\",\n          padding: \"8px 12px\",\n          background: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"Download Filtered Data (Excel)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteLastShapeRef.current(),\n        style: {\n          marginTop: \"10px\",\n          padding: \"8px 12px\",\n          background: \"#dc3545\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"\\uD83D\\uDDD1\\uFE0F Delete Selected Shape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [41.2033, -77.1945],\n      zoom: 7,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZipOverlay, {\n        zipUrl: selectedStateUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawHandler, {\n        setShapeFilteredData: setShapeFilteredData,\n        pricingDataRef: pricingDataRef,\n        locationsRef: locationsRef,\n        acreageFilteredDataRef: acreageFilteredDataRef,\n        setDeleteFunction: fn => {\n          deleteLastShapeRef.current = fn;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        chunkedLoading: true,\n        children: locations.filter(loc => Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1])).map((loc, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: loc.coords,\n          icon: CustomMarkerIcon,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            direction: \"top\",\n            offset: [0, -10],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"left\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"PRICE:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 21\n              }, this), \" \", loc.details.PRICE, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ACRES:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 21\n              }, this), \" \", loc.details.ACRES]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 17\n          }, this)\n        }, \"main-\".concat(index), false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        chunkedLoading: true,\n        children: markersToDisplay.filter(item => {\n          const [lat, lng] = item.coords || [item.latitude, item.longitude];\n          return Number.isFinite(lat) && Number.isFinite(lng);\n        }).map((point, index) => {\n          const [lat, lng] = point.coords || [point.latitude, point.longitude];\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [lat, lng],\n            icon: DotIcon,\n            children: point.lotAcreage !== null && /*#__PURE__*/_jsxDEV(Tooltip, {\n              direction: \"top\",\n              offset: [0, -10],\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"LOT ACREAGE:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 25\n                }, this), \" \", point.lotAcreage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 21\n            }, this)\n          }, \"pricing-\".concat(index), false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"4DdS+vyMG1TQCEOaJPjMgtJZbls=\");\n_c3 = App;\nfunction StateDropdown(_ref3) {\n  _s4();\n  var _states$find;\n  let {\n    states,\n    selectedStateUrl,\n    onSelect\n  } = _ref3;\n  const [open, setOpen] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const toggleOpen = () => setOpen(!open);\n  const filteredStates = states.filter(st => st.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      marginBottom: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleOpen,\n      style: {\n        padding: \"6px\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        background: \"#fff\"\n      },\n      children: ((_states$find = states.find(s => s.url === selectedStateUrl)) === null || _states$find === void 0 ? void 0 : _states$find.name) || \"Select State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"100%\",\n        left: 0,\n        right: 0,\n        background: \"#fff\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"4px\",\n        maxHeight: \"200px\",\n        overflowY: \"auto\",\n        zIndex: 1001\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search state...\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: \"6px\",\n          boxSizing: \"border-box\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 11\n      }, this), filteredStates.map(st => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          onSelect(st.url);\n          setOpen(false);\n          setSearch(\"\");\n        },\n        style: {\n          padding: \"6px\",\n          cursor: \"pointer\",\n          borderBottom: \"1px solid #eee\"\n        },\n        children: st.name\n      }, st.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 632,\n    columnNumber: 5\n  }, this);\n}\n_s4(StateDropdown, \"OZaGxERzP9ofb5uNopqkD73Mc9A=\");\n_c4 = StateDropdown;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ZipOverlay\");\n$RefreshReg$(_c2, \"DrawHandler\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"StateDropdown\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Tooltip","useMap","Papa","L","booleanPointInPolygon","point","polygon","XLSX","MarkerClusterGroup","CustomMarkerIconImage","DotIconImage","jsxDEV","_jsxDEV","CustomMarkerIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","DotIcon","states","name","url","ZipOverlay","_ref","_s","zipUrl","map","layersCache","Object","values","current","forEach","layer","removeLayer","currentLayer","addTo","fetch","then","res","json","geoData","geoJSON","style","color","weight","fillColor","fillOpacity","onEachFeature","feature","layerInstance","zip","properties","ZCTA5CE10","bindPopup","concat","catch","err","console","error","_c","DrawHandler","_ref2","_s2","setShapeFilteredData","pricingDataRef","locationsRef","setDeleteFunction","acreageFilteredDataRef","controlAdded","setControlAdded","drawnItemsRef","shapesArrayRef","selectedShapeRef","isPointInShape","lat","lng","Circle","CircleMarker","center","getLatLng","radius","getRadius","distance","latLng","shapeGeoJSON","toGeoJSON","polygonGeometry","geometry","coordinates","handleShapeDrawn","push","on","currentPricingData","length","filteredPricing","filter","p","coords","filteredComps","loc","combinedData","item","type","apn","lotAcreage","latitude","longitude","price","details","PRICE","acres","ACRES","log","drawnItems","FeatureGroup","addLayer","drawControl","Control","Draw","draw","marker","polyline","circle","shapeOptions","showRadius","circlemarker","showArea","rectangle","edit","featureGroup","addControl","e","shape","lastShape","pop","_c2","App","_s3","selectedStateUrl","setSelectedStateUrl","locations","setLocations","pricingData","setPricingData","shapeFilteredData","acreageFilteredData","setAcreageFilteredData","minAcreage","setMinAcreage","maxAcreage","setMaxAcreage","mapRef","deleteLastShapeRef","handleMainCSVUpload","event","file","target","files","parse","header","skipEmptyLines","complete","results","parsedData","data","row","parseFloat","LATITUDE","LONGITUDE","Number","isFinite","handlePricingCSVUpload","chunkSize","chunk","chunkData","prev","applyAcreageFilter","minVal","maxVal","isNaN","alert","filtered","pd","clearFilters","downloadFilteredDataToExcel","filteredPricingData","pricingDataTab","APN","Latitude","Longitude","workbook","utils","book_new","pricingSheet","json_to_sheet","book_append_sheet","writeFile","exportedAPNs","Set","has","pt","markersToDisplay","height","width","position","children","zIndex","top","right","background","padding","borderRadius","boxShadow","fontFamily","maxHeight","overflowY","StateDropdown","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","marginBottom","display","fontWeight","accept","onChange","border","value","marginLeft","onClick","cursor","zoom","ref","attribution","fn","chunkedLoading","index","direction","offset","textAlign","_c3","_ref3","_s4","_states$find","open","setOpen","search","setSearch","toggleOpen","filteredStates","st","toLowerCase","includes","find","s","left","placeholder","boxSizing","borderBottom","_c4","$RefreshReg$"],"sources":["C:/Users/CREATIVE_SOLUTIONS/Desktop/bolt/bolt codesandbox/src/App.js"],"sourcesContent":["// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Tooltip,\n  useMap,\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// 1) Import the MarkerClusterGroup component\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40],\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5],\n});\n\nconst states = [\n  { name: \"Pennsylvania\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\" },\n  { name: \"Alabama\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\" },\n  { name: \"Alaska\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ak_alaska_zip_codes_geo.min.json\" },\n  { name: \"Arizona\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/az_arizona_zip_codes_geo.min.json\" },\n  { name: \"Arkansas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ar_arkansas_zip_codes_geo.min.json\" },\n  { name: \"California\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ca_california_zip_codes_geo.min.json\" },\n  { name: \"Colorado\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/co_colorado_zip_codes_geo.min.json\" },\n  { name: \"Connecticut\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ct_connecticut_zip_codes_geo.min.json\" },\n  { name: \"Delaware\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/de_delaware_zip_codes_geo.min.json\" },\n  { name: \"District of Columbia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/dc_district_of_columbia_zip_codes_geo.min.json\" },\n  { name: \"Florida\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/fl_florida_zip_codes_geo.min.json\" },\n  { name: \"Georgia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ga_georgia_zip_codes_geo.min.json\" },\n  { name: \"Hawaii\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/hi_hawaii_zip_codes_geo.min.json\" },\n  { name: \"Idaho\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/id_idaho_zip_codes_geo.min.json\" },\n  { name: \"Illinois\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/il_illinois_zip_codes_geo.min.json\" },\n  { name: \"Indiana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/in_indiana_zip_codes_geo.min.json\" },\n  { name: \"Iowa\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ia_iowa_zip_codes_geo.min.json\" },\n  { name: \"Kansas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ks_kansas_zip_codes_geo.min.json\" },\n  { name: \"Kentucky\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ky_kentucky_zip_codes_geo.min.json\" },\n  { name: \"Louisiana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/la_louisiana_zip_codes_geo.min.json\" },\n  { name: \"Maine\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/me_maine_zip_codes_geo.min.json\" },\n  { name: \"Maryland\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/md_maryland_zip_codes_geo.min.json\" },\n  { name: \"Massachusetts\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ma_massachusetts_zip_codes_geo.min.json\" },\n  { name: \"Michigan\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mi_michigan_zip_codes_geo.min.json\" },\n  { name: \"Minnesota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mn_minnesota_zip_codes_geo.min.json\" },\n  { name: \"Mississippi\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ms_mississippi_zip_codes_geo.min.json\" },\n  { name: \"Missouri\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mo_missouri_zip_codes_geo.min.json\" },\n  { name: \"Montana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mt_montana_zip_codes_geo.min.json\" },\n  { name: \"Nebraska\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ne_nebraska_zip_codes_geo.min.json\" },\n  { name: \"Nevada\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nv_nevada_zip_codes_geo.min.json\" },\n  { name: \"New Hampshire\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nh_new_hampshire_zip_codes_geo.min.json\" },\n  { name: \"New Jersey\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nj_new_jersey_zip_codes_geo.min.json\" },\n  { name: \"New Mexico\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nm_new_mexico_zip_codes_geo.min.json\" },\n  { name: \"New York\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ny_new_york_zip_codes_geo.min.json\" },\n  { name: \"North Carolina\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nc_north_carolina_zip_codes_geo.min.json\" },\n  { name: \"North Dakota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nd_north_dakota_zip_codes_geo.min.json\" },\n  { name: \"Ohio\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/oh_ohio_zip_codes_geo.min.json\" },\n  { name: \"Oklahoma\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ok_oklahoma_zip_codes_geo.min.json\" },\n  { name: \"Oregon\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/or_oregon_zip_codes_geo.min.json\" },\n  { name: \"Rhode Island\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ri_rhode_island_zip_codes_geo.min.json\" },\n  { name: \"South Carolina\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sc_south_carolina_zip_codes_geo.min.json\" },\n  { name: \"South Dakota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sd_south_dakota_zip_codes_geo.min.json\" },\n  { name: \"Tennessee\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tn_tennessee_zip_codes_geo.min.json\" },\n  { name: \"Texas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tx_texas_zip_codes_geo.min.json\" },\n  { name: \"Utah\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ut_utah_zip_codes_geo.min.json\" },\n  { name: \"Vermont\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/vt_vermont_zip_codes_geo.min.json\" },\n  { name: \"Virginia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/va_virginia_zip_codes_geo.min.json\" },\n  { name: \"Washington\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wa_washington_zip_codes_geo.min.json\" },\n  { name: \"West Virginia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wv_west_virginia_zip_codes_geo.min.json\" },\n  { name: \"Wisconsin\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wi_wisconsin_zip_codes_geo.min.json\" },\n  { name: \"Wyoming\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wy_wyoming_zip_codes_geo.min.json\" },\n];\n\n// ----- ZipOverlay remains unchanged -----\nfunction ZipOverlay({ zipUrl }) {\n  const map = useMap();\n  const layersCache = useRef({});\n\n  useEffect(() => {\n    if (!zipUrl) return;\n\n    // Remove existing layers from the map\n    Object.values(layersCache.current).forEach((layer) => map.removeLayer(layer));\n    let currentLayer;\n\n    if (layersCache.current[zipUrl]) {\n      currentLayer = layersCache.current[zipUrl];\n      currentLayer.addTo(map);\n    } else {\n      fetch(zipUrl)\n        .then((res) => res.json())\n        .then((geoData) => {\n          currentLayer = L.geoJSON(geoData, {\n            style: {\n              color: \"#ff7800\",\n              weight: 1,\n              fillColor: \"#ffeda0\",\n              fillOpacity: 0.4,\n            },\n            onEachFeature: (feature, layerInstance) => {\n              const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n              layerInstance.bindPopup(`ZIP Code: ${zip}`);\n            },\n          });\n          layersCache.current[zipUrl] = currentLayer;\n          currentLayer.addTo(map);\n        })\n        .catch((err) => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n    }\n\n    return () => {\n      if (currentLayer) map.removeLayer(currentLayer);\n    };\n  }, [map, zipUrl]);\n\n  return null;\n}\n\n// ----- DrawHandler remains largely unchanged -----\nfunction DrawHandler({\n  setShapeFilteredData,\n  pricingDataRef,\n  locationsRef,\n  setDeleteFunction,\n  acreageFilteredDataRef,\n}) {\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n\n  const handleShapeDrawn = (layer) => {\n    shapesArrayRef.current.push(layer);\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n\n    // Use acreageFilteredData if it exists, otherwise use the full pricingData:\n    const currentPricingData = acreageFilteredDataRef.current.length\n      ? acreageFilteredDataRef.current\n      : pricingDataRef.current;\n\n    const filteredPricing = currentPricingData.filter((p) => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const filteredComps = locationsRef.current.filter((loc) => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const combinedData = [\n      ...filteredPricing.map((item) => ({\n        type: \"pricing\",\n        apn: item.apn,\n        lotAcreage: item.lotAcreage,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n      ...filteredComps.map((item) => ({\n        type: \"comps\",\n        price: item.details.PRICE,\n        acres: item.details.ACRES,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n    ];\n\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: { shapeOptions: { color: \"#ff0000\" }, showRadius: true },\n          circlemarker: false,\n          polygon: { shapeOptions: { color: \"#0000ff\" }, showArea: true },\n          rectangle: { shapeOptions: { color: \"#00ff00\" } },\n        },\n        edit: { featureGroup: drawnItems },\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n\n      map.on(\"draw:created\", (e) => {\n        const { layer } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n\n      setDeleteFunction(() => {\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(\n            (shape) => shape !== selectedShapeRef.current\n          );\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [\n    map,\n    controlAdded,\n    pricingDataRef,\n    locationsRef,\n    setShapeFilteredData,\n    setDeleteFunction,\n    acreageFilteredDataRef,\n  ]);\n\n  return null;\n}\n\nfunction App() {\n  const [selectedStateUrl, setSelectedStateUrl] = useState(states[0].url);\n  const [locations, setLocations] = useState([]);\n  const [pricingData, setPricingData] = useState([]);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]);\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n\n  // Refs\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  const acreageFilteredDataRef = useRef(acreageFilteredData);\n\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n\n  // Keep references in sync\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n  useEffect(() => {\n    acreageFilteredDataRef.current = acreageFilteredData;\n  }, [acreageFilteredData]);\n\n  const handleMainCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        const parsedData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return Number.isFinite(lat) && Number.isFinite(lng);\n          })\n          .map((row) => ({\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            details: row,\n          }));\n        setLocations(parsedData);\n      },\n      error: (err) => console.error(\"PapaParse Error (Main CSV):\", err),\n    });\n  };\n\n  const handlePricingCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // If loading is truly huge (several hundred thousand rows),\n    // consider removing chunking. Or keep smaller chunks to prevent\n    // freezing the main thread. Both strategies can help performance.\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 15000, // Adjust chunk size as needed\n      chunk: (results) => {\n        const chunkData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return (\n              Number.isFinite(lat) &&\n              Number.isFinite(lng) &&\n              row[\"APN - FORMATTED\"]\n            );\n          })\n          .map((row) => ({\n            apn: row[\"APN - FORMATTED\"],\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            lotAcreage: row[\"LOT ACREAGE\"] ? parseFloat(row[\"LOT ACREAGE\"]) : null,\n          }));\n        setPricingData((prev) => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: (err) => console.error(\"PapaParse Error (Pricing CSV):\", err),\n    });\n  };\n\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter((pd) => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(\n      (item) => item.type === \"pricing\"\n    );\n\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n\n    const pricingDataTab = filteredPricingData.map((item) => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude,\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n\n    // Remove exported APNs from the map data\n    const exportedAPNs = new Set(filteredPricingData.map((item) => item.apn));\n    setLocations((prev) =>\n      prev.filter((loc) => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"]))\n    );\n    setPricingData((prev) => prev.filter((pt) => !exportedAPNs.has(pt.apn)));\n\n    // Clear shape and acreage filters\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  // Decide which pricing markers to display: acreage-filtered or all\n  const markersToDisplay = acreageFilteredData.length\n    ? acreageFilteredData\n    : pricingData;\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n      {/* Control Panel */}\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1000,\n          top: 10,\n          right: 10,\n          background: \"#f8f9fa\",\n          padding: \"12px 15px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n          width: \"250px\",\n          fontFamily: \"Arial, sans-serif\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n        }}\n      >\n        <StateDropdown\n          states={states}\n          selectedStateUrl={selectedStateUrl}\n          onSelect={(url) => setSelectedStateUrl(url)}\n        />\n        <h3 style={{ marginTop: 0, marginBottom: \"10px\" }}>Data Controls</h3>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Main CSV:\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleMainCSVUpload}\n            style={{ width: \"100%\", marginTop: \"5px\" }}\n          />\n        </div>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Pricing CSV:\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handlePricingCSVUpload}\n            style={{ width: \"100%\", marginTop: \"5px\" }}\n          />\n        </div>\n        <div\n          style={{\n            marginBottom: \"15px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"6px\",\n            padding: \"8px\",\n          }}\n        >\n          <label style={{ fontWeight: \"bold\" }}>Acreage Filter</label>\n          <div style={{ marginTop: \"8px\" }}>\n            <div style={{ marginBottom: \"4px\" }}>\n              <label>Min Acreage:</label>\n              <input\n                type=\"number\"\n                value={minAcreage}\n                onChange={(e) => setMinAcreage(e.target.value)}\n                style={{ width: \"60px\", marginLeft: \"15px\" }}\n              />\n            </div>\n            <div style={{ marginBottom: \"15px\" }}>\n              <label>Max Acreage:</label>\n              <input\n                type=\"number\"\n                value={maxAcreage}\n                onChange={(e) => setMaxAcreage(e.target.value)}\n                style={{ width: \"60px\", marginLeft: \"10px\" }}\n              />\n            </div>\n          </div>\n          <button\n            onClick={applyAcreageFilter}\n            style={{\n              marginTop: \"10px\",\n              padding: \"6px 12px\",\n              background: \"#17a2b8\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Apply Filter\n          </button>\n          <button\n            onClick={clearFilters}\n            style={{\n              marginTop: \"10px\",\n              marginLeft: \"10px\",\n              padding: \"6px 12px\",\n              background: \"#6c757d\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Clear Filter\n          </button>\n        </div>\n        <button\n          onClick={downloadFilteredDataToExcel}\n          style={{\n            marginTop: \"5px\",\n            padding: \"8px 12px\",\n            background: \"#007bff\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          Download Filtered Data (Excel)\n        </button>\n        <button\n          onClick={() => deleteLastShapeRef.current()}\n          style={{\n            marginTop: \"10px\",\n            padding: \"8px 12px\",\n            background: \"#dc3545\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          🗑️ Delete Selected Shape\n        </button>\n      </div>\n\n      <MapContainer\n        center={[41.2033, -77.1945]}\n        zoom={7}\n        style={{ height: \"100%\", width: \"100%\" }}\n        ref={mapRef}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n        <ZipOverlay zipUrl={selectedStateUrl} />\n        <DrawHandler\n          setShapeFilteredData={setShapeFilteredData}\n          pricingDataRef={pricingDataRef}\n          locationsRef={locationsRef}\n          acreageFilteredDataRef={acreageFilteredDataRef}\n          setDeleteFunction={(fn) => {\n            deleteLastShapeRef.current = fn;\n          }}\n        />\n\n        {/* -- CLUSTER GROUP FOR \"MAIN\" CSV POINTS -- */}\n        <MarkerClusterGroup chunkedLoading>\n          {locations\n            .filter(\n              (loc) =>\n                Number.isFinite(loc.coords[0]) &&\n                Number.isFinite(loc.coords[1])\n            )\n            .map((loc, index) => (\n              <Marker\n                key={`main-${index}`}\n                position={loc.coords}\n                icon={CustomMarkerIcon}\n              >\n                <Tooltip direction=\"top\" offset={[0, -10]}>\n                  <div style={{ textAlign: \"left\" }}>\n                    <strong>PRICE:</strong> {loc.details.PRICE}\n                    <br />\n                    <strong>ACRES:</strong> {loc.details.ACRES}\n                  </div>\n                </Tooltip>\n              </Marker>\n            ))}\n        </MarkerClusterGroup>\n\n        {/* -- CLUSTER GROUP FOR PRICING CSV POINTS -- */}\n        <MarkerClusterGroup chunkedLoading>\n          {markersToDisplay\n            .filter((item) => {\n              const [lat, lng] = item.coords || [item.latitude, item.longitude];\n              return Number.isFinite(lat) && Number.isFinite(lng);\n            })\n            .map((point, index) => {\n              const [lat, lng] =\n                point.coords || [point.latitude, point.longitude];\n              return (\n                <Marker\n                  key={`pricing-${index}`}\n                  position={[lat, lng]}\n                  icon={DotIcon}\n                >\n                  {point.lotAcreage !== null && (\n                    <Tooltip direction=\"top\" offset={[0, -10]}>\n                      <div>\n                        <strong>LOT ACREAGE:</strong> {point.lotAcreage}\n                      </div>\n                    </Tooltip>\n                  )}\n                </Marker>\n              );\n            })}\n        </MarkerClusterGroup>\n      </MapContainer>\n    </div>\n  );\n}\n\nfunction StateDropdown({ states, selectedStateUrl, onSelect }) {\n  const [open, setOpen] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  const toggleOpen = () => setOpen(!open);\n\n  const filteredStates = states.filter((st) =>\n    st.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div style={{ position: \"relative\", marginBottom: \"10px\" }}>\n      <div\n        onClick={toggleOpen}\n        style={{\n          padding: \"6px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          background: \"#fff\",\n        }}\n      >\n        {states.find((s) => s.url === selectedStateUrl)?.name ||\n          \"Select State\"}\n      </div>\n      {open && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"100%\",\n            left: 0,\n            right: 0,\n            background: \"#fff\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            maxHeight: \"200px\",\n            overflowY: \"auto\",\n            zIndex: 1001,\n          }}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Search state...\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            style={{ width: \"100%\", padding: \"6px\", boxSizing: \"border-box\" }}\n          />\n          {filteredStates.map((st) => (\n            <div\n              key={st.name}\n              onClick={() => {\n                onSelect(st.url);\n                setOpen(false);\n                setSearch(\"\");\n              }}\n              style={{\n                padding: \"6px\",\n                cursor: \"pointer\",\n                borderBottom: \"1px solid #eee\",\n              }}\n            >\n              {st.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}