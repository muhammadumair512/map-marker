{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE_SOLUTIONS\\\\Desktop\\\\bolt\\\\bolt codesandbox\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40]\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5]\n});\n\n// ZipOverlay Component to display ZIP codes\nfunction ZipOverlay() {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    const url = \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\";\n    fetch(url).then(res => res.json()).then(geoData => {\n      const layer = L.geoJSON(geoData, {\n        style: {\n          color: \"#ff7800\",\n          weight: 1,\n          fillColor: \"#ffeda0\",\n          fillOpacity: 0.4\n        },\n        onEachFeature: (feature, layerInstance) => {\n          const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n          layerInstance.bindPopup(\"ZIP Code: \".concat(zip));\n        }\n      });\n      layer.addTo(map);\n    }).catch(err => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n  }, [map]);\n  return null;\n}\n\n// DrawHandler Component to handle shape drawings\n_s(ZipOverlay, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = ZipOverlay;\nfunction DrawHandler(_ref) {\n  _s2();\n  let {\n    setShapeFilteredData,\n    pricingDataRef,\n    locationsRef,\n    drawnItemsRef,\n    selectedShape,\n    setSelectedShape\n  } = _ref;\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n  const handleShapeDrawn = layer => {\n    // Attach click event to set this shape as selected\n    layer.on(\"click\", () => {\n      setSelectedShape(layer);\n    });\n\n    // Add the new layer to drawnItemsRef\n    drawnItemsRef.current.addLayer(layer);\n    const pricingData = pricingDataRef.current;\n    const locations = locationsRef.current;\n    const filteredPricing = pricingData.filter(p => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const filteredComps = locations.filter(loc => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const combinedData = [...filteredPricing.map(item => ({\n      type: \"pricing\",\n      apn: item.apn,\n      lotAcreage: item.lotAcreage,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    })), ...filteredComps.map(item => ({\n      type: \"comps\",\n      price: item.details.PRICE,\n      acres: item.details.ACRES,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    }))];\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n  useEffect(() => {\n    if (!controlAdded) {\n      drawnItemsRef.current = new L.FeatureGroup();\n      map.addLayer(drawnItemsRef.current);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: {\n            shapeOptions: {\n              color: \"#ff0000\"\n            },\n            showRadius: true\n          },\n          circlemarker: false,\n          // Disabled\n          polygon: {\n            shapeOptions: {\n              color: \"#0000ff\"\n            },\n            showArea: true\n          },\n          rectangle: {\n            shapeOptions: {\n              color: \"#00ff00\"\n            }\n          }\n        },\n        edit: {\n          featureGroup: drawnItemsRef.current\n        }\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n      map.on(\"draw:created\", e => {\n        const {\n          layer\n        } = e;\n        handleShapeDrawn(layer);\n      });\n    }\n  }, [map, controlAdded, pricingDataRef, locationsRef, setShapeFilteredData, drawnItemsRef, setSelectedShape]);\n  return null;\n}\n\n// Main App Component\n_s2(DrawHandler, \"hwbgWOkN5teoty/Wul8Dw6LkzlM=\", false, function () {\n  return [useMap];\n});\n_c2 = DrawHandler;\nfunction App() {\n  _s3();\n  const [locations, setLocations] = useState([]);\n  const [pricingData, setPricingData] = useState([]);\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]);\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n  const drawnItemsRef = useRef(null);\n  const [selectedShape, setSelectedShape] = useState(null);\n  const mapRef = useRef(null);\n  const handleMainCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        const parsedData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng);\n        }).map(row => ({\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          details: row\n        }));\n        setLocations(parsedData);\n      },\n      error: err => console.error(\"PapaParse Error (Main CSV):\", err)\n    });\n  };\n  const handlePricingCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 500,\n      chunk: results => {\n        const chunkData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng) && row[\"APN - FORMATTED\"];\n        }).map(row => ({\n          apn: row[\"APN - FORMATTED\"],\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          lotAcreage: row[\"LOT ACREAGE\"] ? parseFloat(row[\"LOT ACREAGE\"]) : null\n        }));\n        setPricingData(prev => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: err => console.error(\"PapaParse Error (Pricing CSV):\", err)\n    });\n  };\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter(pd => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(item => item.type === \"pricing\");\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n    const pricingDataTab = filteredPricingData.map(item => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude\n    }));\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n    const exportedAPNs = new Set(filteredPricingData.map(item => item.apn));\n    setLocations(prev => prev.filter(loc => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"])));\n    setPricingData(prev => prev.filter(pt => !exportedAPNs.has(pt.apn)));\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n  const deleteSelectedShape = () => {\n    if (selectedShape && drawnItemsRef.current) {\n      drawnItemsRef.current.removeLayer(selectedShape);\n      setSelectedShape(null);\n    } else {\n      alert(\"No shape selected.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 1000,\n        top: 10,\n        right: 10,\n        background: \"#f8f9fa\",\n        padding: \"12px 15px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n        width: \"280px\",\n        fontFamily: \"Arial, sans-serif\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0,\n          marginBottom: \"10px\"\n        },\n        children: \"Data Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadFilteredDataToExcel,\n        style: {\n          marginTop: \"5px\",\n          padding: \"8px 12px\",\n          background: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"Download Filtered Data (Excel)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteSelectedShape,\n        style: {\n          marginTop: \"10px\",\n          padding: \"8px 12px\",\n          background: \"#dc3545\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"Delete Selected Shape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [41.2033, -77.1945],\n      zoom: 7,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZipOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawHandler, {\n        setShapeFilteredData: setShapeFilteredData,\n        pricingDataRef: pricingDataRef,\n        locationsRef: locationsRef,\n        drawnItemsRef: drawnItemsRef,\n        selectedShape: selectedShape,\n        setSelectedShape: setSelectedShape\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), locations.filter(loc => Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1])).map((loc, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: loc.coords,\n        icon: CustomMarkerIcon,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          direction: \"top\",\n          offset: [0, -10],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PRICE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this), \" \", loc.details.PRICE, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ACRES:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this), \" \", loc.details.PRICES]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 15\n        }, this)\n      }, \"main-\".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }, this)), markersToDisplay.filter(item => item.coords && Number.isFinite(item.coords[0]) && Number.isFinite(item.coords[1]) || Number.isFinite(item.latitude) && Number.isFinite(item.longitude)).map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: point.coords && Number.isFinite(point.coords[0]) && Number.isFinite(point.coords[1]) ? point.coords : [point.latitude, point.longitude],\n        icon: DotIcon,\n        children: point.lotAcreage !== null && /*#__PURE__*/_jsxDEV(Tooltip, {\n          direction: \"top\",\n          offset: [0, -10],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"LOT ACREAGE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 21\n            }, this), \" \", point.lotAcreage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }, this)\n      }, \"pricing-\".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"5JD5Wv61btt1iqFRwjJB3RX/Exc=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ZipOverlay\");\n$RefreshReg$(_c2, \"DrawHandler\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Tooltip","useMap","Papa","L","booleanPointInPolygon","point","polygon","XLSX","CustomMarkerIconImage","DotIconImage","jsxDEV","_jsxDEV","CustomMarkerIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","DotIcon","ZipOverlay","_s","map","url","fetch","then","res","json","geoData","layer","geoJSON","style","color","weight","fillColor","fillOpacity","onEachFeature","feature","layerInstance","zip","properties","ZCTA5CE10","bindPopup","concat","addTo","catch","err","console","error","_c","DrawHandler","_ref","_s2","setShapeFilteredData","pricingDataRef","locationsRef","drawnItemsRef","selectedShape","setSelectedShape","controlAdded","setControlAdded","isPointInShape","lat","lng","Circle","CircleMarker","center","getLatLng","radius","getRadius","distance","latLng","shapeGeoJSON","toGeoJSON","polygonGeometry","geometry","coordinates","handleShapeDrawn","on","current","addLayer","pricingData","locations","filteredPricing","filter","p","coords","filteredComps","loc","combinedData","item","type","apn","lotAcreage","latitude","longitude","price","details","PRICE","acres","ACRES","log","FeatureGroup","drawControl","Control","Draw","draw","marker","polyline","circle","shapeOptions","showRadius","circlemarker","showArea","rectangle","edit","featureGroup","addControl","e","_c2","App","_s3","setLocations","setPricingData","shapeFilteredData","acreageFilteredData","setAcreageFilteredData","minAcreage","setMinAcreage","maxAcreage","setMaxAcreage","mapRef","handleMainCSVUpload","event","file","target","files","parse","header","skipEmptyLines","complete","results","parsedData","data","row","parseFloat","LATITUDE","LONGITUDE","Number","isFinite","handlePricingCSVUpload","chunkSize","chunk","chunkData","prev","applyAcreageFilter","minVal","maxVal","isNaN","alert","filtered","pd","clearFilters","downloadFilteredDataToExcel","filteredPricingData","length","pricingDataTab","APN","Latitude","Longitude","workbook","utils","book_new","pricingSheet","json_to_sheet","book_append_sheet","writeFile","exportedAPNs","Set","has","pt","markersToDisplay","deleteSelectedShape","removeLayer","height","width","position","children","zIndex","top","right","background","padding","borderRadius","boxShadow","fontFamily","marginTop","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","cursor","zoom","ref","attribution","index","direction","offset","textAlign","PRICES","_c3","$RefreshReg$"],"sources":["C:/Users/CREATIVE_SOLUTIONS/Desktop/bolt/bolt codesandbox/src/App.js"],"sourcesContent":["// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Tooltip,\n  useMap,\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40],\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5],\n});\n\n// ZipOverlay Component to display ZIP codes\nfunction ZipOverlay() {\n  const map = useMap();\n  useEffect(() => {\n    const url =\n      \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\";\n    fetch(url)\n      .then((res) => res.json())\n      .then((geoData) => {\n        const layer = L.geoJSON(geoData, {\n          style: {\n            color: \"#ff7800\",\n            weight: 1,\n            fillColor: \"#ffeda0\",\n            fillOpacity: 0.4,\n          },\n          onEachFeature: (feature, layerInstance) => {\n            const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n            layerInstance.bindPopup(`ZIP Code: ${zip}`);\n          },\n        });\n        layer.addTo(map);\n      })\n      .catch((err) => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n  }, [map]);\n  return null;\n}\n\n// DrawHandler Component to handle shape drawings\nfunction DrawHandler({\n  setShapeFilteredData,\n  pricingDataRef,\n  locationsRef,\n  drawnItemsRef,\n  selectedShape,\n  setSelectedShape,\n}) {\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n\n  const handleShapeDrawn = (layer) => {\n    // Attach click event to set this shape as selected\n    layer.on(\"click\", () => {\n      setSelectedShape(layer);\n    });\n\n    // Add the new layer to drawnItemsRef\n    drawnItemsRef.current.addLayer(layer);\n\n    const pricingData = pricingDataRef.current;\n    const locations = locationsRef.current;\n\n    const filteredPricing = pricingData.filter((p) => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const filteredComps = locations.filter((loc) => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const combinedData = [\n      ...filteredPricing.map((item) => ({\n        type: \"pricing\",\n        apn: item.apn,\n        lotAcreage: item.lotAcreage,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n      ...filteredComps.map((item) => ({\n        type: \"comps\",\n        price: item.details.PRICE,\n        acres: item.details.ACRES,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n    ];\n\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n\n  useEffect(() => {\n    if (!controlAdded) {\n      drawnItemsRef.current = new L.FeatureGroup();\n      map.addLayer(drawnItemsRef.current);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: { shapeOptions: { color: \"#ff0000\" }, showRadius: true },\n          circlemarker: false, // Disabled\n          polygon: { shapeOptions: { color: \"#0000ff\" }, showArea: true },\n          rectangle: { shapeOptions: { color: \"#00ff00\" } },\n        },\n        edit: { featureGroup: drawnItemsRef.current },\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n\n      map.on(\"draw:created\", (e) => {\n        const { layer } = e;\n        handleShapeDrawn(layer);\n      });\n    }\n  }, [map, controlAdded, pricingDataRef, locationsRef, setShapeFilteredData, drawnItemsRef, setSelectedShape]);\n\n  return null;\n}\n\n// Main App Component\nfunction App() {\n  const [locations, setLocations] = useState([]); \n  const [pricingData, setPricingData] = useState([]); \n\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n\n  useEffect(() => { pricingDataRef.current = pricingData; }, [pricingData]);\n  useEffect(() => { locationsRef.current = locations; }, [locations]);\n\n  const [shapeFilteredData, setShapeFilteredData] = useState([]); \n\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n\n  const drawnItemsRef = useRef(null);\n  const [selectedShape, setSelectedShape] = useState(null);\n  const mapRef = useRef(null);\n\n  const handleMainCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        const parsedData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return Number.isFinite(lat) && Number.isFinite(lng);\n          })\n          .map((row) => ({\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            details: row,\n          }));\n        setLocations(parsedData);\n      },\n      error: (err) => console.error(\"PapaParse Error (Main CSV):\", err),\n    });\n  };\n\n  const handlePricingCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 500,\n      chunk: (results) => {\n        const chunkData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return (\n              Number.isFinite(lat) &&\n              Number.isFinite(lng) &&\n              row[\"APN - FORMATTED\"]\n            );\n          })\n          .map((row) => ({\n            apn: row[\"APN - FORMATTED\"],\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            lotAcreage: row[\"LOT ACREAGE\"]\n              ? parseFloat(row[\"LOT ACREAGE\"])\n              : null,\n          }));\n        setPricingData((prev) => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: (err) => console.error(\"PapaParse Error (Pricing CSV):\", err),\n    });\n  };\n\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter((pd) => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(\n      (item) => item.type === \"pricing\"\n    );\n\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n\n    const pricingDataTab = filteredPricingData.map((item) => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude,\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n\n    const exportedAPNs = new Set(filteredPricingData.map((item) => item.apn));\n    setLocations((prev) =>\n      prev.filter((loc) => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"]))\n    );\n    setPricingData((prev) => prev.filter((pt) => !exportedAPNs.has(pt.apn)));\n\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n\n  const deleteSelectedShape = () => {\n    if (selectedShape && drawnItemsRef.current) {\n      drawnItemsRef.current.removeLayer(selectedShape);\n      setSelectedShape(null);\n    } else {\n      alert(\"No shape selected.\");\n    }\n  };\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n      {/* Control Panel */}\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1000,\n          top: 10,\n          right: 10,\n          background: \"#f8f9fa\",\n          padding: \"12px 15px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n          width: \"280px\",\n          fontFamily: \"Arial, sans-serif\",\n        }}\n      >\n        <h3 style={{ marginTop: 0, marginBottom: \"10px\" }}>Data Controls</h3>\n        {/* ... existing controls ... */}\n        <button\n          onClick={downloadFilteredDataToExcel}\n          style={{\n            marginTop: \"5px\",\n            padding: \"8px 12px\",\n            background: \"#007bff\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          Download Filtered Data (Excel)\n        </button>\n        <button\n          onClick={deleteSelectedShape}\n          style={{\n            marginTop: \"10px\",\n            padding: \"8px 12px\",\n            background: \"#dc3545\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          Delete Selected Shape\n        </button>\n      </div>\n      <MapContainer\n        center={[41.2033, -77.1945]}\n        zoom={7}\n        style={{ height: \"100%\", width: \"100%\" }}\n        ref={mapRef}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n        <ZipOverlay />\n        <DrawHandler\n          setShapeFilteredData={setShapeFilteredData}\n          pricingDataRef={pricingDataRef}\n          locationsRef={locationsRef}\n          drawnItemsRef={drawnItemsRef}\n          selectedShape={selectedShape}\n          setSelectedShape={setSelectedShape}\n        />\n\n        {/* Markers from Main CSV */}\n        {locations\n          .filter(\n            (loc) =>\n              Number.isFinite(loc.coords[0]) &&\n              Number.isFinite(loc.coords[1])\n          )\n          .map((loc, index) => (\n            <Marker\n              key={`main-${index}`}\n              position={loc.coords}\n              icon={CustomMarkerIcon}\n            >\n              <Tooltip direction=\"top\" offset={[0, -10]}>\n                <div style={{ textAlign: \"left\" }}>\n                  <strong>PRICE:</strong> {loc.details.PRICE}\n                  <br />\n                  <strong>ACRES:</strong> {loc.details.PRICES}\n                </div>\n              </Tooltip>\n            </Marker>\n          ))}\n\n        {/* Markers from Pricing CSV */}\n        {markersToDisplay\n          .filter(\n            (item) =>\n              (item.coords &&\n                Number.isFinite(item.coords[0]) &&\n                Number.isFinite(item.coords[1])) ||\n              (Number.isFinite(item.latitude) &&\n                Number.isFinite(item.longitude))\n          )\n          .map((point, index) => (\n            <Marker\n              key={`pricing-${index}`}\n              position={\n                point.coords &&\n                Number.isFinite(point.coords[0]) &&\n                Number.isFinite(point.coords[1])\n                  ? point.coords\n                  : [point.latitude, point.longitude]\n              }\n              icon={DotIcon}\n            >\n              {point.lotAcreage !== null && (\n                <Tooltip direction=\"top\" offset={[0, -10]}>\n                  <div>\n                    <strong>LOT ACREAGE:</strong> {point.lotAcreage}\n                  </div>\n                </Tooltip>\n              )}\n            </Marker>\n          ))}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}