{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE_SOLUTIONS\\\\Desktop\\\\bolt\\\\bolt codesandbox\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Marker clustering\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Define your marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40]\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5]\n});\n\n// Example states\nconst states = [{\n  name: \"Pennsylvania\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\"\n}, {\n  name: \"Alabama\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\"\n}\n// ... all other states ...\n];\n\n// ---------------------------------------------------------------------------\n// 1) ZIP Overlay (unchanged)\n// ---------------------------------------------------------------------------\nfunction ZipOverlay(_ref) {\n  _s();\n  let {\n    zipUrl\n  } = _ref;\n  const map = useMap();\n  const layersCache = useRef({});\n  useEffect(() => {\n    if (!zipUrl) return;\n\n    // Remove old layers\n    Object.values(layersCache.current).forEach(layer => map.removeLayer(layer));\n    let currentLayer;\n    if (layersCache.current[zipUrl]) {\n      currentLayer = layersCache.current[zipUrl];\n      currentLayer.addTo(map);\n    } else {\n      fetch(zipUrl).then(res => res.json()).then(geoData => {\n        currentLayer = L.geoJSON(geoData, {\n          style: {\n            color: \"#ff7800\",\n            weight: 1,\n            fillColor: \"#ffeda0\",\n            fillOpacity: 0.4\n          },\n          onEachFeature: (feature, layerInstance) => {\n            const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n            layerInstance.bindPopup(\"ZIP Code: \".concat(zip));\n          }\n        });\n        layersCache.current[zipUrl] = currentLayer;\n        currentLayer.addTo(map);\n      }).catch(err => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n    }\n    return () => {\n      if (currentLayer) map.removeLayer(currentLayer);\n    };\n  }, [map, zipUrl]);\n  return null;\n}\n\n// ---------------------------------------------------------------------------\n// 2) DrawHandler for shape drawing (unchanged except minimal comments)\n// ---------------------------------------------------------------------------\n_s(ZipOverlay, \"RJbtr0yo5/9yZFwpq+M4DEOqAUc=\", false, function () {\n  return [useMap];\n});\n_c = ZipOverlay;\nfunction DrawHandler(_ref2) {\n  _s2();\n  let {\n    setShapeFilteredData,\n    pricingDataRef,\n    locationsRef,\n    setDeleteFunction,\n    acreageFilteredDataRef\n  } = _ref2;\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n  const handleShapeDrawn = layer => {\n    shapesArrayRef.current.push(layer);\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n\n    // If acreage is filtered, use acreageFilteredData; else use full pricingData\n    const currentPricingData = acreageFilteredDataRef.current.length ? acreageFilteredDataRef.current : pricingDataRef.current;\n    const filteredPricing = currentPricingData.filter(p => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const filteredComps = locationsRef.current.filter(loc => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const combinedData = [...filteredPricing.map(item => ({\n      type: \"pricing\",\n      apn: item.apn,\n      lotAcreage: item.lotAcreage,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    })), ...filteredComps.map(item => ({\n      type: \"comps\",\n      price: item.details.PRICE,\n      acres: item.details.ACRES,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    }))];\n    setShapeFilteredData(combinedData);\n  };\n\n  // Add the draw control once\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: {\n            shapeOptions: {\n              color: \"#ff0000\"\n            },\n            showRadius: true\n          },\n          circlemarker: false,\n          polygon: {\n            shapeOptions: {\n              color: \"#0000ff\"\n            },\n            showArea: true\n          },\n          rectangle: {\n            shapeOptions: {\n              color: \"#00ff00\"\n            }\n          }\n        },\n        edit: {\n          featureGroup: drawnItems\n        }\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n      map.on(\"draw:created\", e => {\n        const {\n          layer\n        } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n\n      // Let user delete last shape\n      setDeleteFunction(() => {\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(shape => shape !== selectedShapeRef.current);\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [map, controlAdded, pricingDataRef, locationsRef, setShapeFilteredData, setDeleteFunction, acreageFilteredDataRef]);\n  return null;\n}\n\n// ---------------------------------------------------------------------------\n// 3) Main App\n// ---------------------------------------------------------------------------\n_s2(DrawHandler, \"0Vjk56DwBpY3/aOwBBcB/RsDvz4=\", false, function () {\n  return [useMap];\n});\n_c2 = DrawHandler;\nfunction App() {\n  _s3();\n  const [selectedStateUrl, setSelectedStateUrl] = useState(states[0].url);\n  const [locations, setLocations] = useState([]);\n  const [pricingData, setPricingData] = useState([]);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]);\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n\n  // Track upload progress (in %)\n  const [mainCSVProgress, setMainCSVProgress] = useState(0);\n  const [pricingCSVProgress, setPricingCSVProgress] = useState(0);\n\n  // Refs\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  const acreageFilteredDataRef = useRef(acreageFilteredData);\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n\n  // Keep data references in sync\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n  useEffect(() => {\n    acreageFilteredDataRef.current = acreageFilteredData;\n  }, [acreageFilteredData]);\n\n  // -------------------------------------------------\n  // Utility: Parse CSV with row-by-row progress\n  // -------------------------------------------------\n  const parseCSVWithProgress = (file, onRowParsed, onComplete, setProgress // function to update progress\n  ) => {\n    // 1) Read entire file as text to estimate #lines\n    const reader = new FileReader();\n    reader.onload = e => {\n      // approximate total lines\n      const text = e.target.result;\n      const allLines = text.split(/\\r\\n|\\n|\\r/);\n      const totalRows = Math.max(allLines.length - 1, 1); // subtract 1 for header row\n\n      let parsedRows = 0;\n\n      // 2) Parse in step mode with a web worker\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        worker: true,\n        step: (results, parser) => {\n          const row = results.data;\n          if (row && Object.keys(row).length > 0) {\n            onRowParsed(row);\n          }\n          parsedRows++;\n          const pct = Math.min(100, parsedRows / totalRows * 100);\n          setProgress(pct);\n          if (parsedRows >= totalRows) {\n            parser.abort(); // stop parsing leftover blank lines\n          }\n        },\n        complete: onComplete,\n        error: err => console.error(\"PapaParse Error:\", err)\n      });\n    };\n    reader.readAsText(file);\n  };\n\n  // -------------------------------------------------\n  // Handlers: CSV Upload\n  // -------------------------------------------------\n  const handleMainCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setMainCSVProgress(0); // show progress bar from 0 to 100\n\n    parseCSVWithProgress(file, row => {\n      // Each valid row => push to 'locations'\n      const lat = parseFloat(row.LATITUDE);\n      const lng = parseFloat(row.LONGITUDE);\n      if (Number.isFinite(lat) && Number.isFinite(lng)) {\n        setLocations(prev => [...prev, {\n          coords: [lat, lng],\n          details: row\n        }]);\n      }\n    }, () => console.log(\"Main CSV done parsing.\"), setMainCSVProgress // we pass the function to update progress\n    );\n  };\n  const handlePricingCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setPricingCSVProgress(0);\n    parseCSVWithProgress(file, row => {\n      const lat = parseFloat(row.LATITUDE);\n      const lng = parseFloat(row.LONGITUDE);\n      if (Number.isFinite(lat) && Number.isFinite(lng) && row[\"APN - FORMATTED\"]) {\n        setPricingData(prev => [...prev, {\n          apn: row[\"APN - FORMATTED\"],\n          coords: [lat, lng],\n          lotAcreage: row[\"LOT ACREAGE\"] ? parseFloat(row[\"LOT ACREAGE\"]) : null\n        }]);\n      }\n    }, () => console.log(\"Pricing CSV done parsing.\"), setPricingCSVProgress);\n  };\n\n  // -------------------------------------------------\n  // Acreage Filters\n  // -------------------------------------------------\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter(pd => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n\n  // -------------------------------------------------\n  // Download filtered data\n  // -------------------------------------------------\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(item => item.type === \"pricing\");\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n    const pricingDataTab = filteredPricingData.map(item => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude\n    }));\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n\n    // remove exported points from map\n    const exportedAPNs = new Set(filteredPricingData.map(item => item.apn));\n    setLocations(prev => prev.filter(loc => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"])));\n    setPricingData(prev => prev.filter(pt => !exportedAPNs.has(pt.apn)));\n\n    // clear shape and acreage filters\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  // Which pricing markers to display\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n\n  // -------------------------------------------------\n  // ProgressBar component\n  // -------------------------------------------------\n  const ProgressBar = _ref3 => {\n    let {\n      progress\n    } = _ref3;\n    if (progress <= 0 || progress >= 100) return null; // hide if not active or done\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"8px\",\n          backgroundColor: \"#e0e0e0\",\n          borderRadius: \"4px\",\n          overflow: \"hidden\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"\".concat(progress.toFixed(1), \"%\"),\n            height: \"100%\",\n            background: \"linear-gradient(to right, #00c6ff, #0072ff)\",\n            transition: \"width 0.2s\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          color: \"#555\"\n        },\n        children: [progress.toFixed(1), \"% loaded...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 1000,\n        top: 10,\n        right: 10,\n        background: \"#f8f9fa\",\n        padding: \"12px 15px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n        width: \"280px\",\n        fontFamily: \"Arial, sans-serif\",\n        maxHeight: \"90vh\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(StateDropdown, {\n        states: states,\n        selectedStateUrl: selectedStateUrl,\n        onSelect: url => setSelectedStateUrl(url)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0,\n          marginBottom: \"10px\"\n        },\n        children: \"Data Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Main CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleMainCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\",\n            padding: \"6px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          progress: mainCSVProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), mainCSVProgress === 100 && /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: \"green\"\n          },\n          children: \"Main CSV Loaded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Pricing CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handlePricingCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\",\n            padding: \"6px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          progress: pricingCSVProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), pricingCSVProgress === 100 && /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: \"green\"\n          },\n          children: \"Pricing CSV Loaded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"6px\",\n          padding: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Acreage Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"4px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Min Acreage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: minAcreage,\n              onChange: e => setMinAcreage(e.target.value),\n              style: {\n                width: \"60px\",\n                marginLeft: \"15px\",\n                padding: \"2px 4px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Max Acreage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxAcreage,\n              onChange: e => setMaxAcreage(e.target.value),\n              style: {\n                width: \"60px\",\n                marginLeft: \"10px\",\n                padding: \"2px 4px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: applyAcreageFilter,\n          style: {\n            marginTop: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#17a2b8\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Apply Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilters,\n          style: {\n            marginTop: \"10px\",\n            marginLeft: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#6c757d\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Clear Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadFilteredDataToExcel,\n        style: {\n          marginTop: \"5px\",\n          padding: \"8px 12px\",\n          background: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"Download Filtered Data (Excel)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteLastShapeRef.current(),\n        style: {\n          marginTop: \"10px\",\n          padding: \"8px 12px\",\n          background: \"#dc3545\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"\\uD83D\\uDDD1\\uFE0F Delete Selected Shape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [41.2033, -77.1945],\n      zoom: 7,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZipOverlay, {\n        zipUrl: selectedStateUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawHandler, {\n        setShapeFilteredData: setShapeFilteredData,\n        pricingDataRef: pricingDataRef,\n        locationsRef: locationsRef,\n        acreageFilteredDataRef: acreageFilteredDataRef,\n        setDeleteFunction: fn => {\n          deleteLastShapeRef.current = fn;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        chunkedLoading: true,\n        children: locations.filter(loc => Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1])).map((loc, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: loc.coords,\n          icon: CustomMarkerIcon,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            direction: \"top\",\n            offset: [0, -10],\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"left\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"PRICE:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 21\n              }, this), \" \", loc.details.PRICE, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ACRES:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 21\n              }, this), \" \", loc.details.ACRES]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 17\n          }, this)\n        }, \"main-\".concat(index), false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        chunkedLoading: true,\n        children: markersToDisplay.filter(item => {\n          const [lat, lng] = item.coords || [item.latitude, item.longitude];\n          return Number.isFinite(lat) && Number.isFinite(lng);\n        }).map((point, index) => {\n          const [lat, lng] = point.coords || [point.latitude, point.longitude];\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [lat, lng],\n            icon: DotIcon,\n            children: point.lotAcreage !== null && /*#__PURE__*/_jsxDEV(Tooltip, {\n              direction: \"top\",\n              offset: [0, -10],\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"LOT ACREAGE:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 25\n                }, this), \" \", point.lotAcreage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 21\n            }, this)\n          }, \"pricing-\".concat(index), false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 454,\n    columnNumber: 5\n  }, this);\n}\n\n// ---------------------------------------------------------------------------\n// 4) StateDropdown – unchanged, just simple UI\n// ---------------------------------------------------------------------------\n_s3(App, \"8KG0qFgFvgp0ZVxT79bhm7pCve4=\");\n_c3 = App;\nfunction StateDropdown(_ref4) {\n  _s4();\n  var _states$find;\n  let {\n    states,\n    selectedStateUrl,\n    onSelect\n  } = _ref4;\n  const [open, setOpen] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const toggleOpen = () => setOpen(!open);\n  const filteredStates = states.filter(st => st.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      marginBottom: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleOpen,\n      style: {\n        padding: \"6px\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        background: \"#fff\"\n      },\n      children: ((_states$find = states.find(s => s.url === selectedStateUrl)) === null || _states$find === void 0 ? void 0 : _states$find.name) || \"Select State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"100%\",\n        left: 0,\n        right: 0,\n        background: \"#fff\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"4px\",\n        maxHeight: \"200px\",\n        overflowY: \"auto\",\n        zIndex: 1001\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search state...\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: \"6px\",\n          boxSizing: \"border-box\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 11\n      }, this), filteredStates.map(st => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          onSelect(st.url);\n          setOpen(false);\n          setSearch(\"\");\n        },\n        style: {\n          padding: \"6px\",\n          cursor: \"pointer\",\n          borderBottom: \"1px solid #eee\"\n        },\n        children: st.name\n      }, st.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 727,\n    columnNumber: 5\n  }, this);\n}\n_s4(StateDropdown, \"OZaGxERzP9ofb5uNopqkD73Mc9A=\");\n_c4 = StateDropdown;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ZipOverlay\");\n$RefreshReg$(_c2, \"DrawHandler\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"StateDropdown\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Tooltip","useMap","Papa","L","booleanPointInPolygon","point","polygon","XLSX","MarkerClusterGroup","CustomMarkerIconImage","DotIconImage","jsxDEV","_jsxDEV","CustomMarkerIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","DotIcon","states","name","url","ZipOverlay","_ref","_s","zipUrl","map","layersCache","Object","values","current","forEach","layer","removeLayer","currentLayer","addTo","fetch","then","res","json","geoData","geoJSON","style","color","weight","fillColor","fillOpacity","onEachFeature","feature","layerInstance","zip","properties","ZCTA5CE10","bindPopup","concat","catch","err","console","error","_c","DrawHandler","_ref2","_s2","setShapeFilteredData","pricingDataRef","locationsRef","setDeleteFunction","acreageFilteredDataRef","controlAdded","setControlAdded","drawnItemsRef","shapesArrayRef","selectedShapeRef","isPointInShape","lat","lng","Circle","CircleMarker","center","getLatLng","radius","getRadius","distance","latLng","shapeGeoJSON","toGeoJSON","polygonGeometry","geometry","coordinates","handleShapeDrawn","push","on","currentPricingData","length","filteredPricing","filter","p","coords","filteredComps","loc","combinedData","item","type","apn","lotAcreage","latitude","longitude","price","details","PRICE","acres","ACRES","drawnItems","FeatureGroup","addLayer","drawControl","Control","Draw","draw","marker","polyline","circle","shapeOptions","showRadius","circlemarker","showArea","rectangle","edit","featureGroup","addControl","e","shape","lastShape","pop","_c2","App","_s3","selectedStateUrl","setSelectedStateUrl","locations","setLocations","pricingData","setPricingData","shapeFilteredData","acreageFilteredData","setAcreageFilteredData","minAcreage","setMinAcreage","maxAcreage","setMaxAcreage","mainCSVProgress","setMainCSVProgress","pricingCSVProgress","setPricingCSVProgress","mapRef","deleteLastShapeRef","parseCSVWithProgress","file","onRowParsed","onComplete","setProgress","reader","FileReader","onload","text","target","result","allLines","split","totalRows","Math","max","parsedRows","parse","header","skipEmptyLines","worker","step","results","parser","row","data","keys","pct","min","abort","complete","readAsText","handleMainCSVUpload","event","files","parseFloat","LATITUDE","LONGITUDE","Number","isFinite","prev","log","handlePricingCSVUpload","applyAcreageFilter","minVal","maxVal","isNaN","alert","filtered","pd","clearFilters","downloadFilteredDataToExcel","filteredPricingData","pricingDataTab","APN","Latitude","Longitude","workbook","utils","book_new","pricingSheet","json_to_sheet","book_append_sheet","writeFile","exportedAPNs","Set","has","pt","markersToDisplay","ProgressBar","_ref3","progress","marginTop","children","width","height","backgroundColor","borderRadius","overflow","toFixed","background","transition","fileName","_jsxFileName","lineNumber","columnNumber","position","zIndex","top","right","padding","boxShadow","fontFamily","maxHeight","overflowY","StateDropdown","onSelect","marginBottom","display","fontWeight","accept","onChange","border","cursor","value","marginLeft","onClick","zoom","ref","attribution","fn","chunkedLoading","index","direction","offset","textAlign","_c3","_ref4","_s4","_states$find","open","setOpen","search","setSearch","toggleOpen","filteredStates","st","toLowerCase","includes","find","s","left","placeholder","boxSizing","borderBottom","_c4","$RefreshReg$"],"sources":["C:/Users/CREATIVE_SOLUTIONS/Desktop/bolt/bolt codesandbox/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Tooltip,\n  useMap,\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Marker clustering\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Define your marker icons\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40],\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5],\n});\n\n// Example states\nconst states = [\n  { name: \"Pennsylvania\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\" },\n  { name: \"Alabama\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\" },\n  // ... all other states ...\n];\n\n// ---------------------------------------------------------------------------\n// 1) ZIP Overlay (unchanged)\n// ---------------------------------------------------------------------------\nfunction ZipOverlay({ zipUrl }) {\n  const map = useMap();\n  const layersCache = useRef({});\n\n  useEffect(() => {\n    if (!zipUrl) return;\n\n    // Remove old layers\n    Object.values(layersCache.current).forEach((layer) => map.removeLayer(layer));\n    let currentLayer;\n\n    if (layersCache.current[zipUrl]) {\n      currentLayer = layersCache.current[zipUrl];\n      currentLayer.addTo(map);\n    } else {\n      fetch(zipUrl)\n        .then((res) => res.json())\n        .then((geoData) => {\n          currentLayer = L.geoJSON(geoData, {\n            style: {\n              color: \"#ff7800\",\n              weight: 1,\n              fillColor: \"#ffeda0\",\n              fillOpacity: 0.4,\n            },\n            onEachFeature: (feature, layerInstance) => {\n              const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n              layerInstance.bindPopup(`ZIP Code: ${zip}`);\n            },\n          });\n          layersCache.current[zipUrl] = currentLayer;\n          currentLayer.addTo(map);\n        })\n        .catch((err) => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n    }\n\n    return () => {\n      if (currentLayer) map.removeLayer(currentLayer);\n    };\n  }, [map, zipUrl]);\n\n  return null;\n}\n\n// ---------------------------------------------------------------------------\n// 2) DrawHandler for shape drawing (unchanged except minimal comments)\n// ---------------------------------------------------------------------------\nfunction DrawHandler({\n  setShapeFilteredData,\n  pricingDataRef,\n  locationsRef,\n  setDeleteFunction,\n  acreageFilteredDataRef,\n}) {\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n\n  const handleShapeDrawn = (layer) => {\n    shapesArrayRef.current.push(layer);\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n\n    // If acreage is filtered, use acreageFilteredData; else use full pricingData\n    const currentPricingData = acreageFilteredDataRef.current.length\n      ? acreageFilteredDataRef.current\n      : pricingDataRef.current;\n\n    const filteredPricing = currentPricingData.filter((p) => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const filteredComps = locationsRef.current.filter((loc) => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const combinedData = [\n      ...filteredPricing.map((item) => ({\n        type: \"pricing\",\n        apn: item.apn,\n        lotAcreage: item.lotAcreage,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n      ...filteredComps.map((item) => ({\n        type: \"comps\",\n        price: item.details.PRICE,\n        acres: item.details.ACRES,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n    ];\n\n    setShapeFilteredData(combinedData);\n  };\n\n  // Add the draw control once\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: { shapeOptions: { color: \"#ff0000\" }, showRadius: true },\n          circlemarker: false,\n          polygon: { shapeOptions: { color: \"#0000ff\" }, showArea: true },\n          rectangle: { shapeOptions: { color: \"#00ff00\" } },\n        },\n        edit: { featureGroup: drawnItems },\n      });\n\n      map.addControl(drawControl);\n      setControlAdded(true);\n\n      map.on(\"draw:created\", (e) => {\n        const { layer } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n\n      // Let user delete last shape\n      setDeleteFunction(() => {\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(\n            (shape) => shape !== selectedShapeRef.current\n          );\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [\n    map,\n    controlAdded,\n    pricingDataRef,\n    locationsRef,\n    setShapeFilteredData,\n    setDeleteFunction,\n    acreageFilteredDataRef,\n  ]);\n\n  return null;\n}\n\n// ---------------------------------------------------------------------------\n// 3) Main App\n// ---------------------------------------------------------------------------\nfunction App() {\n  const [selectedStateUrl, setSelectedStateUrl] = useState(states[0].url);\n  const [locations, setLocations] = useState([]);\n  const [pricingData, setPricingData] = useState([]);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]);\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n\n  // Track upload progress (in %)\n  const [mainCSVProgress, setMainCSVProgress] = useState(0);\n  const [pricingCSVProgress, setPricingCSVProgress] = useState(0);\n\n  // Refs\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  const acreageFilteredDataRef = useRef(acreageFilteredData);\n\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n\n  // Keep data references in sync\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n  useEffect(() => {\n    acreageFilteredDataRef.current = acreageFilteredData;\n  }, [acreageFilteredData]);\n\n  // -------------------------------------------------\n  // Utility: Parse CSV with row-by-row progress\n  // -------------------------------------------------\n  const parseCSVWithProgress = (\n    file,\n    onRowParsed,\n    onComplete,\n    setProgress // function to update progress\n  ) => {\n    // 1) Read entire file as text to estimate #lines\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      // approximate total lines\n      const text = e.target.result;\n      const allLines = text.split(/\\r\\n|\\n|\\r/);\n      const totalRows = Math.max(allLines.length - 1, 1); // subtract 1 for header row\n\n      let parsedRows = 0;\n\n      // 2) Parse in step mode with a web worker\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        worker: true,\n        step: (results, parser) => {\n          const row = results.data;\n          if (row && Object.keys(row).length > 0) {\n            onRowParsed(row);\n          }\n\n          parsedRows++;\n          const pct = Math.min(100, (parsedRows / totalRows) * 100);\n          setProgress(pct);\n\n          if (parsedRows >= totalRows) {\n            parser.abort(); // stop parsing leftover blank lines\n          }\n        },\n        complete: onComplete,\n        error: (err) => console.error(\"PapaParse Error:\", err),\n      });\n    };\n\n    reader.readAsText(file);\n  };\n\n  // -------------------------------------------------\n  // Handlers: CSV Upload\n  // -------------------------------------------------\n  const handleMainCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setMainCSVProgress(0); // show progress bar from 0 to 100\n\n    parseCSVWithProgress(\n      file,\n      (row) => {\n        // Each valid row => push to 'locations'\n        const lat = parseFloat(row.LATITUDE);\n        const lng = parseFloat(row.LONGITUDE);\n        if (Number.isFinite(lat) && Number.isFinite(lng)) {\n          setLocations((prev) => [\n            ...prev,\n            { coords: [lat, lng], details: row },\n          ]);\n        }\n      },\n      () => console.log(\"Main CSV done parsing.\"),\n      setMainCSVProgress // we pass the function to update progress\n    );\n  };\n\n  const handlePricingCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setPricingCSVProgress(0);\n\n    parseCSVWithProgress(\n      file,\n      (row) => {\n        const lat = parseFloat(row.LATITUDE);\n        const lng = parseFloat(row.LONGITUDE);\n        if (Number.isFinite(lat) && Number.isFinite(lng) && row[\"APN - FORMATTED\"]) {\n          setPricingData((prev) => [\n            ...prev,\n            {\n              apn: row[\"APN - FORMATTED\"],\n              coords: [lat, lng],\n              lotAcreage: row[\"LOT ACREAGE\"]\n                ? parseFloat(row[\"LOT ACREAGE\"])\n                : null,\n            },\n          ]);\n        }\n      },\n      () => console.log(\"Pricing CSV done parsing.\"),\n      setPricingCSVProgress\n    );\n  };\n\n  // -------------------------------------------------\n  // Acreage Filters\n  // -------------------------------------------------\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n\n    const filtered = pricingData.filter((pd) => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n\n  // -------------------------------------------------\n  // Download filtered data\n  // -------------------------------------------------\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(\n      (item) => item.type === \"pricing\"\n    );\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n\n    const pricingDataTab = filteredPricingData.map((item) => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude,\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n\n    // remove exported points from map\n    const exportedAPNs = new Set(filteredPricingData.map((item) => item.apn));\n    setLocations((prev) =>\n      prev.filter((loc) => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"]))\n    );\n    setPricingData((prev) => prev.filter((pt) => !exportedAPNs.has(pt.apn)));\n\n    // clear shape and acreage filters\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  // Which pricing markers to display\n  const markersToDisplay = acreageFilteredData.length\n    ? acreageFilteredData\n    : pricingData;\n\n  // -------------------------------------------------\n  // ProgressBar component\n  // -------------------------------------------------\n  const ProgressBar = ({ progress }) => {\n    if (progress <= 0 || progress >= 100) return null; // hide if not active or done\n\n    return (\n      <div style={{ marginTop: \"8px\" }}>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"8px\",\n            backgroundColor: \"#e0e0e0\",\n            borderRadius: \"4px\",\n            overflow: \"hidden\",\n          }}\n        >\n          <div\n            style={{\n              width: `${progress.toFixed(1)}%`,\n              height: \"100%\",\n              background: \"linear-gradient(to right, #00c6ff, #0072ff)\",\n              transition: \"width 0.2s\",\n            }}\n          />\n        </div>\n        <small style={{ color: \"#555\" }}>\n          {progress.toFixed(1)}% loaded...\n        </small>\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n      {/* ====== Control Panel ====== */}\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1000,\n          top: 10,\n          right: 10,\n          background: \"#f8f9fa\",\n          padding: \"12px 15px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n          width: \"280px\",\n          fontFamily: \"Arial, sans-serif\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n        }}\n      >\n        <StateDropdown\n          states={states}\n          selectedStateUrl={selectedStateUrl}\n          onSelect={(url) => setSelectedStateUrl(url)}\n        />\n\n        <h3 style={{ marginTop: 0, marginBottom: \"10px\" }}>Data Controls</h3>\n\n        {/* Main CSV Upload */}\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Main CSV:\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleMainCSVUpload}\n            style={{\n              width: \"100%\",\n              marginTop: \"5px\",\n              padding: \"6px\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          />\n          {/* Show progress while (0,100) */}\n          <ProgressBar progress={mainCSVProgress} />\n          {/* Show a \"Done!\" if exactly 100 */}\n          {mainCSVProgress === 100 && (\n            <small style={{ color: \"green\" }}>Main CSV Loaded!</small>\n          )}\n        </div>\n\n        {/* Pricing CSV Upload */}\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Pricing CSV:\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handlePricingCSVUpload}\n            style={{\n              width: \"100%\",\n              marginTop: \"5px\",\n              padding: \"6px\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          />\n          <ProgressBar progress={pricingCSVProgress} />\n          {pricingCSVProgress === 100 && (\n            <small style={{ color: \"green\" }}>Pricing CSV Loaded!</small>\n          )}\n        </div>\n\n        {/* Acreage Filter */}\n        <div\n          style={{\n            marginBottom: \"15px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"6px\",\n            padding: \"8px\",\n          }}\n        >\n          <label style={{ fontWeight: \"bold\" }}>Acreage Filter</label>\n          <div style={{ marginTop: \"8px\" }}>\n            <div style={{ marginBottom: \"4px\" }}>\n              <label>Min Acreage:</label>\n              <input\n                type=\"number\"\n                value={minAcreage}\n                onChange={(e) => setMinAcreage(e.target.value)}\n                style={{\n                  width: \"60px\",\n                  marginLeft: \"15px\",\n                  padding: \"2px 4px\",\n                }}\n              />\n            </div>\n            <div style={{ marginBottom: \"15px\" }}>\n              <label>Max Acreage:</label>\n              <input\n                type=\"number\"\n                value={maxAcreage}\n                onChange={(e) => setMaxAcreage(e.target.value)}\n                style={{\n                  width: \"60px\",\n                  marginLeft: \"10px\",\n                  padding: \"2px 4px\",\n                }}\n              />\n            </div>\n          </div>\n          <button\n            onClick={applyAcreageFilter}\n            style={{\n              marginTop: \"10px\",\n              padding: \"6px 12px\",\n              background: \"#17a2b8\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Apply Filter\n          </button>\n          <button\n            onClick={clearFilters}\n            style={{\n              marginTop: \"10px\",\n              marginLeft: \"10px\",\n              padding: \"6px 12px\",\n              background: \"#6c757d\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Clear Filter\n          </button>\n        </div>\n\n        {/* Download button */}\n        <button\n          onClick={downloadFilteredDataToExcel}\n          style={{\n            marginTop: \"5px\",\n            padding: \"8px 12px\",\n            background: \"#007bff\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          Download Filtered Data (Excel)\n        </button>\n\n        {/* Delete shape */}\n        <button\n          onClick={() => deleteLastShapeRef.current()}\n          style={{\n            marginTop: \"10px\",\n            padding: \"8px 12px\",\n            background: \"#dc3545\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          🗑️ Delete Selected Shape\n        </button>\n      </div>\n\n      {/* ====== Map ====== */}\n      <MapContainer\n        center={[41.2033, -77.1945]}\n        zoom={7}\n        style={{ height: \"100%\", width: \"100%\" }}\n        ref={mapRef}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n        <ZipOverlay zipUrl={selectedStateUrl} />\n        <DrawHandler\n          setShapeFilteredData={setShapeFilteredData}\n          pricingDataRef={pricingDataRef}\n          locationsRef={locationsRef}\n          acreageFilteredDataRef={acreageFilteredDataRef}\n          setDeleteFunction={(fn) => {\n            deleteLastShapeRef.current = fn;\n          }}\n        />\n\n        {/* Main CSV points in cluster */}\n        <MarkerClusterGroup chunkedLoading>\n          {locations\n            .filter(\n              (loc) =>\n                Number.isFinite(loc.coords[0]) &&\n                Number.isFinite(loc.coords[1])\n            )\n            .map((loc, index) => (\n              <Marker\n                key={`main-${index}`}\n                position={loc.coords}\n                icon={CustomMarkerIcon}\n              >\n                <Tooltip direction=\"top\" offset={[0, -10]}>\n                  <div style={{ textAlign: \"left\" }}>\n                    <strong>PRICE:</strong> {loc.details.PRICE}\n                    <br />\n                    <strong>ACRES:</strong> {loc.details.ACRES}\n                  </div>\n                </Tooltip>\n              </Marker>\n            ))}\n        </MarkerClusterGroup>\n\n        {/* Pricing CSV points in cluster */}\n        <MarkerClusterGroup chunkedLoading>\n          {markersToDisplay\n            .filter((item) => {\n              const [lat, lng] = item.coords || [item.latitude, item.longitude];\n              return Number.isFinite(lat) && Number.isFinite(lng);\n            })\n            .map((point, index) => {\n              const [lat, lng] =\n                point.coords || [point.latitude, point.longitude];\n              return (\n                <Marker\n                  key={`pricing-${index}`}\n                  position={[lat, lng]}\n                  icon={DotIcon}\n                >\n                  {point.lotAcreage !== null && (\n                    <Tooltip direction=\"top\" offset={[0, -10]}>\n                      <div>\n                        <strong>LOT ACREAGE:</strong> {point.lotAcreage}\n                      </div>\n                    </Tooltip>\n                  )}\n                </Marker>\n              );\n            })}\n        </MarkerClusterGroup>\n      </MapContainer>\n    </div>\n  );\n}\n\n// ---------------------------------------------------------------------------\n// 4) StateDropdown – unchanged, just simple UI\n// ---------------------------------------------------------------------------\nfunction StateDropdown({ states, selectedStateUrl, onSelect }) {\n  const [open, setOpen] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  const toggleOpen = () => setOpen(!open);\n\n  const filteredStates = states.filter((st) =>\n    st.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div style={{ position: \"relative\", marginBottom: \"10px\" }}>\n      <div\n        onClick={toggleOpen}\n        style={{\n          padding: \"6px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          background: \"#fff\",\n        }}\n      >\n        {states.find((s) => s.url === selectedStateUrl)?.name ||\n          \"Select State\"}\n      </div>\n      {open && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"100%\",\n            left: 0,\n            right: 0,\n            background: \"#fff\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            maxHeight: \"200px\",\n            overflowY: \"auto\",\n            zIndex: 1001,\n          }}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Search state...\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            style={{ width: \"100%\", padding: \"6px\", boxSizing: \"border-box\" }}\n          />\n          {filteredStates.map((st) => (\n            <div\n              key={st.name}\n              onClick={() => {\n                onSelect(st.url);\n                setOpen(false);\n                setSearch(\"\");\n              }}\n              style={{\n                padding: \"6px\",\n                cursor: \"pointer\",\n                borderBottom: \"1px solid #eee\",\n              }}\n            >\n              {st.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}