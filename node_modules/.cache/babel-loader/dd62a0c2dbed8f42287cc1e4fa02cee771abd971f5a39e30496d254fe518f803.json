{"ast":null,"code":"// App.jsx\n// increased chunks to 1500 and shapes now only filters visible circles!\nimport React,{useState,useRef,useEffect}from\"react\";import{MapContainer,TileLayer,Marker,Tooltip,useMap}from\"react-leaflet\";import\"leaflet/dist/leaflet.css\";import Papa from\"papaparse\";import L from\"leaflet\";import\"leaflet-draw/dist/leaflet.draw.css\";import\"leaflet-draw\";import booleanPointInPolygon from\"@turf/boolean-point-in-polygon\";import{point,polygon}from\"@turf/helpers\";import*as XLSX from\"xlsx\";// Custom icons\nimport CustomMarkerIconImage from\"./custom-marker.png\";import DotIconImage from\"./small-dot.png\";// Marker icons\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CustomMarkerIcon=L.icon({iconUrl:CustomMarkerIconImage,iconSize:[30,40],iconAnchor:[15,40],popupAnchor:[0,-40]});const DotIcon=L.icon({iconUrl:DotIconImage,iconSize:[10,10],iconAnchor:[5,5]});const states=[{name:\"Pennsylvania\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\"},{name:\"Alabama\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\"},{name:\"Alaska\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ak_alaska_zip_codes_geo.min.json\"},{name:\"Arizona\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/az_arizona_zip_codes_geo.min.json\"},{name:\"Arkansas\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ar_arkansas_zip_codes_geo.min.json\"},{name:\"California\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ca_california_zip_codes_geo.min.json\"},{name:\"Colorado\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/co_colorado_zip_codes_geo.min.json\"},{name:\"Connecticut\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ct_connecticut_zip_codes_geo.min.json\"},{name:\"Delaware\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/de_delaware_zip_codes_geo.min.json\"},{name:\"District of Columbia\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/dc_district_of_columbia_zip_codes_geo.min.json\"},{name:\"Florida\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/fl_florida_zip_codes_geo.min.json\"},{name:\"Georgia\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ga_georgia_zip_codes_geo.min.json\"},{name:\"Hawaii\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/hi_hawaii_zip_codes_geo.min.json\"},{name:\"Idaho\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/id_idaho_zip_codes_geo.min.json\"},{name:\"Illinois\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/il_illinois_zip_codes_geo.min.json\"},{name:\"Indiana\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/in_indiana_zip_codes_geo.min.json\"},{name:\"Iowa\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ia_iowa_zip_codes_geo.min.json\"},{name:\"Kansas\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ks_kansas_zip_codes_geo.min.json\"},{name:\"Kentucky\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ky_kentucky_zip_codes_geo.min.json\"},{name:\"Louisiana\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/la_louisiana_zip_codes_geo.min.json\"},{name:\"Maine\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/me_maine_zip_codes_geo.min.json\"},{name:\"Maryland\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/md_maryland_zip_codes_geo.min.json\"},{name:\"Massachusetts\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ma_massachusetts_zip_codes_geo.min.json\"},{name:\"Michigan\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mi_michigan_zip_codes_geo.min.json\"},{name:\"Minnesota\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mn_minnesota_zip_codes_geo.min.json\"},{name:\"Mississippi\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ms_mississippi_zip_codes_geo.min.json\"},{name:\"Missouri\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mo_missouri_zip_codes_geo.min.json\"},{name:\"Montana\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mt_montana_zip_codes_geo.min.json\"},{name:\"Nebraska\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ne_nebraska_zip_codes_geo.min.json\"},{name:\"Nevada\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nv_nevada_zip_codes_geo.min.json\"},{name:\"New Hampshire\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nh_new_hampshire_zip_codes_geo.min.json\"},{name:\"New Jersey\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nj_new_jersey_zip_codes_geo.min.json\"},{name:\"New Mexico\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nm_new_mexico_zip_codes_geo.min.json\"},{name:\"New York\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ny_new_york_zip_codes_geo.min.json\"},{name:\"North Carolina\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nc_north_carolina_zip_codes_geo.min.json\"},{name:\"North Dakota\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nd_north_dakota_zip_codes_geo.min.json\"},{name:\"Ohio\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/oh_ohio_zip_codes_geo.min.json\"},{name:\"Oklahoma\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ok_oklahoma_zip_codes_geo.min.json\"},{name:\"Oregon\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/or_oregon_zip_codes_geo.min.json\"},{name:\"Rhode Island\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ri_rhode_island_zip_codes_geo.min.json\"},{name:\"South Carolina\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sc_south_carolina_zip_codes_geo.min.json\"},{name:\"South Dakota\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sd_south_dakota_zip_codes_geo.min.json\"},{name:\"Tennessee\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tn_tennessee_zip_codes_geo.min.json\"},{name:\"Texas\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tx_texas_zip_codes_geo.min.json\"},{name:\"Utah\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ut_utah_zip_codes_geo.min.json\"},{name:\"Vermont\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/vt_vermont_zip_codes_geo.min.json\"},{name:\"Virginia\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/va_virginia_zip_codes_geo.min.json\"},{name:\"Washington\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wa_washington_zip_codes_geo.min.json\"},{name:\"West Virginia\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wv_west_virginia_zip_codes_geo.min.json\"},{name:\"Wisconsin\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wi_wisconsin_zip_codes_geo.min.json\"},{name:\"Wyoming\",url:\"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wy_wyoming_zip_codes_geo.min.json\"}];function ZipOverlay(_ref){let{zipUrl}=_ref;const map=useMap();const layersCache=useRef({});useEffect(()=>{if(!zipUrl)return;// Remove existing layers from the map\nObject.values(layersCache.current).forEach(layer=>map.removeLayer(layer));let currentLayer;if(layersCache.current[zipUrl]){currentLayer=layersCache.current[zipUrl];currentLayer.addTo(map);}else{fetch(zipUrl).then(res=>res.json()).then(geoData=>{currentLayer=L.geoJSON(geoData,{style:{color:\"#ff7800\",weight:1,fillColor:\"#ffeda0\",fillOpacity:0.4},onEachFeature:(feature,layerInstance)=>{const zip=feature.properties.ZCTA5CE10||\"Unknown ZIP\";layerInstance.bindPopup(\"ZIP Code: \".concat(zip));}});layersCache.current[zipUrl]=currentLayer;currentLayer.addTo(map);}).catch(err=>console.error(\"Error fetching ZIP code GeoJSON:\",err));}return()=>{if(currentLayer)map.removeLayer(currentLayer);};},[map,zipUrl]);return null;}function DrawHandler(_ref2){let{setShapeFilteredData,pricingDataRef,locationsRef,setDeleteFunction,acreageFilteredDataRef// we'll receive the acreage-filtered data via ref\n}=_ref2;const map=useMap();const[controlAdded,setControlAdded]=useState(false);const drawnItemsRef=useRef(null);const shapesArrayRef=useRef([]);const selectedShapeRef=useRef(null);const isPointInShape=(lat,lng,layer)=>{if(layer instanceof L.Circle||layer instanceof L.CircleMarker){const center=layer.getLatLng();const radius=layer.getRadius();return map.distance(center,L.latLng(lat,lng))<=radius;}const shapeGeoJSON=layer.toGeoJSON();const polygonGeometry=polygon(shapeGeoJSON.geometry.coordinates);return booleanPointInPolygon(point([lng,lat]),polygonGeometry);};const handleShapeDrawn=layer=>{shapesArrayRef.current.push(layer);layer.on(\"click\",()=>{selectedShapeRef.current=layer;});// Use acreageFilteredData if it exists, otherwise use the full pricingData:\nconst currentPricingData=acreageFilteredDataRef.current.length?acreageFilteredDataRef.current:pricingDataRef.current;const filteredPricing=currentPricingData.filter(p=>{const[lat,lng]=p.coords;return isPointInShape(lat,lng,layer);});const filteredComps=locationsRef.current.filter(loc=>{const[lat,lng]=loc.coords;return isPointInShape(lat,lng,layer);});const combinedData=[...filteredPricing.map(item=>({type:\"pricing\",apn:item.apn,lotAcreage:item.lotAcreage,latitude:item.coords[0],longitude:item.coords[1]})),...filteredComps.map(item=>({type:\"comps\",price:item.details.PRICE,acres:item.details.ACRES,latitude:item.coords[0],longitude:item.coords[1]}))];setShapeFilteredData(combinedData);console.log(\"Shape Filtered Data:\",combinedData);};useEffect(()=>{if(!controlAdded){const drawnItems=new L.FeatureGroup();drawnItemsRef.current=drawnItems;map.addLayer(drawnItems);const drawControl=new L.Control.Draw({draw:{marker:false,polyline:false,circle:{shapeOptions:{color:\"#ff0000\"},showRadius:true},circlemarker:false,polygon:{shapeOptions:{color:\"#0000ff\"},showArea:true},rectangle:{shapeOptions:{color:\"#00ff00\"}}},edit:{featureGroup:drawnItems}});map.addControl(drawControl);setControlAdded(true);map.on(\"draw:created\",e=>{const{layer}=e;drawnItems.addLayer(layer);handleShapeDrawn(layer);});// Provide a way to delete the selected shape\nsetDeleteFunction(()=>{if(selectedShapeRef.current&&drawnItemsRef.current){drawnItemsRef.current.removeLayer(selectedShapeRef.current);shapesArrayRef.current=shapesArrayRef.current.filter(shape=>shape!==selectedShapeRef.current);selectedShapeRef.current=null;}else if(shapesArrayRef.current.length>0){const lastShape=shapesArrayRef.current.pop();if(lastShape&&drawnItemsRef.current){drawnItemsRef.current.removeLayer(lastShape);}}});}},[map,controlAdded,pricingDataRef,locationsRef,setShapeFilteredData,setDeleteFunction,acreageFilteredDataRef]);return null;}function App(){const[selectedStateUrl,setSelectedStateUrl]=useState(states[0].url);const[locations,setLocations]=useState([]);const[pricingData,setPricingData]=useState([]);const[shapeFilteredData,setShapeFilteredData]=useState([]);const[acreageFilteredData,setAcreageFilteredData]=useState([]);const[minAcreage,setMinAcreage]=useState(\"\");const[maxAcreage,setMaxAcreage]=useState(\"\");// Refs for data\nconst pricingDataRef=useRef(pricingData);const locationsRef=useRef(locations);// We also keep a ref for acreage-filtered data\nconst acreageFilteredDataRef=useRef(acreageFilteredData);const mapRef=useRef(null);const deleteLastShapeRef=useRef(()=>{});useEffect(()=>{pricingDataRef.current=pricingData;},[pricingData]);useEffect(()=>{locationsRef.current=locations;},[locations]);useEffect(()=>{acreageFilteredDataRef.current=acreageFilteredData;},[acreageFilteredData]);const handleMainCSVUpload=event=>{const file=event.target.files[0];if(!file)return;Papa.parse(file,{header:true,skipEmptyLines:true,complete:results=>{const parsedData=results.data.filter(row=>{const lat=parseFloat(row.LATITUDE);const lng=parseFloat(row.LONGITUDE);return Number.isFinite(lat)&&Number.isFinite(lng);}).map(row=>({coords:[parseFloat(row.LATITUDE),parseFloat(row.LONGITUDE)],details:row}));setLocations(parsedData);},error:err=>console.error(\"PapaParse Error (Main CSV):\",err)});};const handlePricingCSVUpload=event=>{const file=event.target.files[0];if(!file)return;Papa.parse(file,{header:true,skipEmptyLines:true,chunkSize:1500000,chunk:results=>{const chunkData=results.data.filter(row=>{const lat=parseFloat(row.LATITUDE);const lng=parseFloat(row.LONGITUDE);return Number.isFinite(lat)&&Number.isFinite(lng)&&row[\"APN - FORMATTED\"];}).map(row=>({apn:row[\"APN - FORMATTED\"],coords:[parseFloat(row.LATITUDE),parseFloat(row.LONGITUDE)],lotAcreage:row[\"LOT ACREAGE\"]?parseFloat(row[\"LOT ACREAGE\"]):null}));setPricingData(prev=>[...prev,...chunkData]);},complete:()=>console.log(\"Pricing CSV parsing complete!\"),error:err=>console.error(\"PapaParse Error (Pricing CSV):\",err)});};const applyAcreageFilter=()=>{const minVal=parseFloat(minAcreage);const maxVal=parseFloat(maxAcreage);if(isNaN(minVal)||isNaN(maxVal)){alert(\"Please enter valid numeric values for both min and max acreage.\");return;}const filtered=pricingData.filter(pd=>{if(pd.lotAcreage==null)return false;return pd.lotAcreage>=minVal&&pd.lotAcreage<=maxVal;});setAcreageFilteredData(filtered);};const clearFilters=()=>{setShapeFilteredData([]);setAcreageFilteredData([]);setMinAcreage(\"\");setMaxAcreage(\"\");};const downloadFilteredDataToExcel=()=>{const filteredPricingData=shapeFilteredData.filter(item=>item.type===\"pricing\");if(filteredPricingData.length===0){alert(\"No data points within the drawn shape to download.\");return;}const pricingDataTab=filteredPricingData.map(item=>({APN:item.apn,\"LOT ACREAGE\":item.lotAcreage,Latitude:item.latitude,Longitude:item.longitude}));const workbook=XLSX.utils.book_new();const pricingSheet=XLSX.utils.json_to_sheet(pricingDataTab);XLSX.utils.book_append_sheet(workbook,pricingSheet,\"Pricing Data\");XLSX.writeFile(workbook,\"filtered_data.xlsx\");// Remove exported APNs from the map data\nconst exportedAPNs=new Set(filteredPricingData.map(item=>item.apn));setLocations(prev=>prev.filter(loc=>!exportedAPNs.has(loc.details[\"APN - FORMATTED\"])));setPricingData(prev=>prev.filter(pt=>!exportedAPNs.has(pt.apn)));// Clear shape and acreage filters\nsetShapeFilteredData([]);setAcreageFilteredData([]);alert(\"Filtered data downloaded and removed from the map.\");};// Decide which pricing markers to display: acreage-filtered or all\nconst markersToDisplay=acreageFilteredData.length?acreageFilteredData:pricingData;return/*#__PURE__*/_jsxs(\"div\",{style:{height:\"100vh\",width:\"100%\",position:\"relative\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{position:\"absolute\",zIndex:1000,top:10,right:10,background:\"#f8f9fa\",padding:\"12px 15px\",borderRadius:\"8px\",boxShadow:\"0 3px 8px rgba(0,0,0,0.15)\",width:\"250px\",fontFamily:\"Arial, sans-serif\",maxHeight:\"90vh\",overflowY:\"auto\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'none'},children:/*#__PURE__*/_jsx(StateDropdown,{states:states,selectedStateUrl:selectedStateUrl,onSelect:url=>setSelectedStateUrl(url)})}),/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:0,marginBottom:\"10px\",textAlign:'center'},children:\"Data Controls\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:\"block\",fontWeight:\"bold\"},children:\"Upload Main CSV:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:handleMainCSVUpload,style:{width:\"100%\",marginTop:\"5px\"}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:\"block\",fontWeight:\"bold\"},children:\"Upload Pricing CSV:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:handlePricingCSVUpload,style:{width:\"100%\",marginTop:\"5px\"}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\",border:\"1px solid #ccc\",borderRadius:\"6px\",padding:\"8px\"},children:[/*#__PURE__*/_jsx(\"label\",{style:{fontWeight:\"bold\"},children:\"Acreage Filter\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"8px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"4px\"},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Min Acreage:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:minAcreage,onChange:e=>setMinAcreage(e.target.value),style:{width:\"60px\",marginLeft:\"15px\"}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Max Acreage:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:maxAcreage,onChange:e=>setMaxAcreage(e.target.value),style:{width:\"60px\",marginLeft:\"10px\"}})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:applyAcreageFilter,style:{marginTop:\"10px\",padding:\"6px 12px\",background:\"#17a2b8\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\"},children:\"Apply Filter\"}),/*#__PURE__*/_jsx(\"button\",{onClick:clearFilters,style:{marginTop:\"10px\",marginLeft:\"10px\",padding:\"6px 12px\",background:\"#6c757d\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\"},children:\"Clear Filter\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:downloadFilteredDataToExcel,style:{marginTop:\"5px\",padding:\"8px 12px\",background:\"#007bff\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\",width:\"100%\"},children:\"Download Filtered Data (Excel)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteLastShapeRef.current(),style:{marginTop:\"10px\",padding:\"8px 12px\",background:\"#dc3545\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\",width:\"100%\"},children:\"\\uD83D\\uDDD1\\uFE0F Delete Selected Shape\"})]}),/*#__PURE__*/_jsxs(MapContainer,{center:[41.2033,-77.1945],zoom:7,style:{height:\"100%\",width:\"100%\"},ref:mapRef,children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 OpenStreetMap contributors\"}),/*#__PURE__*/_jsx(ZipOverlay,{zipUrl:selectedStateUrl}),/*#__PURE__*/_jsx(DrawHandler,{setShapeFilteredData:setShapeFilteredData,pricingDataRef:pricingDataRef,locationsRef:locationsRef,acreageFilteredDataRef:acreageFilteredDataRef,setDeleteFunction:fn=>{deleteLastShapeRef.current=fn;}}),locations.filter(loc=>Number.isFinite(loc.coords[0])&&Number.isFinite(loc.coords[1])).map((loc,index)=>/*#__PURE__*/_jsx(Marker,{position:loc.coords,icon:CustomMarkerIcon,children:/*#__PURE__*/_jsx(Tooltip,{direction:\"top\",offset:[0,-10],children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"left\"},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"PRICE:\"}),\" \",loc.details.PRICE,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"ACRES:\"}),\" \",loc.details.ACRES]})})},\"main-\".concat(index))),markersToDisplay.filter(item=>{const[lat,lng]=item.coords||[item.latitude,item.longitude];return Number.isFinite(lat)&&Number.isFinite(lng);}).map((point,index)=>{const[lat,lng]=point.coords||[point.latitude,point.longitude];return/*#__PURE__*/_jsx(Marker,{position:[lat,lng],icon:DotIcon,children:point.lotAcreage!==null&&/*#__PURE__*/_jsx(Tooltip,{direction:\"top\",offset:[0,-10],children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"LOT ACREAGE:\"}),\" \",point.lotAcreage]})})},\"pricing-\".concat(index));})]})]});}function StateDropdown(_ref3){var _states$find;let{states,selectedStateUrl,onSelect}=_ref3;const[open,setOpen]=useState(false);const[search,setSearch]=useState(\"\");const toggleOpen=()=>setOpen(!open);const filteredStates=states.filter(st=>st.name.toLowerCase().includes(search.toLowerCase()));return/*#__PURE__*/_jsxs(\"div\",{style:{position:\"relative\",marginBottom:\"10px\"},children:[/*#__PURE__*/_jsx(\"div\",{onClick:toggleOpen,style:{padding:\"6px\",border:\"1px solid #ccc\",borderRadius:\"4px\",cursor:\"pointer\",background:\"#fff\"},children:((_states$find=states.find(s=>s.url===selectedStateUrl))===null||_states$find===void 0?void 0:_states$find.name)||\"Select State\"}),open&&/*#__PURE__*/_jsxs(\"div\",{style:{position:\"absolute\",top:\"100%\",left:0,right:0,background:\"#fff\",border:\"1px solid #ccc\",borderRadius:\"4px\",maxHeight:\"200px\",overflowY:\"auto\",zIndex:1001},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search state...\",value:search,onChange:e=>setSearch(e.target.value),style:{width:\"100%\",padding:\"6px\",boxSizing:\"border-box\"}}),filteredStates.map(st=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>{onSelect(st.url);setOpen(false);setSearch(\"\");},style:{padding:\"6px\",cursor:\"pointer\",borderBottom:\"1px solid #eee\"},children:st.name},st.name))]})]});}export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Tooltip","useMap","Papa","L","booleanPointInPolygon","point","polygon","XLSX","CustomMarkerIconImage","DotIconImage","jsx","_jsx","jsxs","_jsxs","CustomMarkerIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","DotIcon","states","name","url","ZipOverlay","_ref","zipUrl","map","layersCache","Object","values","current","forEach","layer","removeLayer","currentLayer","addTo","fetch","then","res","json","geoData","geoJSON","style","color","weight","fillColor","fillOpacity","onEachFeature","feature","layerInstance","zip","properties","ZCTA5CE10","bindPopup","concat","catch","err","console","error","DrawHandler","_ref2","setShapeFilteredData","pricingDataRef","locationsRef","setDeleteFunction","acreageFilteredDataRef","controlAdded","setControlAdded","drawnItemsRef","shapesArrayRef","selectedShapeRef","isPointInShape","lat","lng","Circle","CircleMarker","center","getLatLng","radius","getRadius","distance","latLng","shapeGeoJSON","toGeoJSON","polygonGeometry","geometry","coordinates","handleShapeDrawn","push","on","currentPricingData","length","filteredPricing","filter","p","coords","filteredComps","loc","combinedData","item","type","apn","lotAcreage","latitude","longitude","price","details","PRICE","acres","ACRES","log","drawnItems","FeatureGroup","addLayer","drawControl","Control","Draw","draw","marker","polyline","circle","shapeOptions","showRadius","circlemarker","showArea","rectangle","edit","featureGroup","addControl","e","shape","lastShape","pop","App","selectedStateUrl","setSelectedStateUrl","locations","setLocations","pricingData","setPricingData","shapeFilteredData","acreageFilteredData","setAcreageFilteredData","minAcreage","setMinAcreage","maxAcreage","setMaxAcreage","mapRef","deleteLastShapeRef","handleMainCSVUpload","event","file","target","files","parse","header","skipEmptyLines","complete","results","parsedData","data","row","parseFloat","LATITUDE","LONGITUDE","Number","isFinite","handlePricingCSVUpload","chunkSize","chunk","chunkData","prev","applyAcreageFilter","minVal","maxVal","isNaN","alert","filtered","pd","clearFilters","downloadFilteredDataToExcel","filteredPricingData","pricingDataTab","APN","Latitude","Longitude","workbook","utils","book_new","pricingSheet","json_to_sheet","book_append_sheet","writeFile","exportedAPNs","Set","has","pt","markersToDisplay","height","width","position","children","zIndex","top","right","background","padding","borderRadius","boxShadow","fontFamily","maxHeight","overflowY","display","StateDropdown","onSelect","marginTop","marginBottom","textAlign","fontWeight","accept","onChange","border","value","marginLeft","onClick","cursor","zoom","ref","attribution","fn","index","direction","offset","_ref3","_states$find","open","setOpen","search","setSearch","toggleOpen","filteredStates","st","toLowerCase","includes","find","s","left","placeholder","boxSizing","borderBottom"],"sources":["C:/Users/CREATIVE_SOLUTIONS/Desktop/bolt/bolt codesandbox/src/App.js"],"sourcesContent":["// App.jsx\n// increased chunks to 1500 and shapes now only filters visible circles!\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Tooltip,\n  useMap,\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40],\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5],\n});\n\nconst states = [\n  { name: \"Pennsylvania\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\" },\n  { name: \"Alabama\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\" },\n  { name: \"Alaska\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ak_alaska_zip_codes_geo.min.json\" },\n  { name: \"Arizona\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/az_arizona_zip_codes_geo.min.json\" },\n  { name: \"Arkansas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ar_arkansas_zip_codes_geo.min.json\" },\n  { name: \"California\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ca_california_zip_codes_geo.min.json\" },\n  { name: \"Colorado\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/co_colorado_zip_codes_geo.min.json\" },\n  { name: \"Connecticut\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ct_connecticut_zip_codes_geo.min.json\" },\n  { name: \"Delaware\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/de_delaware_zip_codes_geo.min.json\" },\n  { name: \"District of Columbia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/dc_district_of_columbia_zip_codes_geo.min.json\" },\n  { name: \"Florida\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/fl_florida_zip_codes_geo.min.json\" },\n  { name: \"Georgia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ga_georgia_zip_codes_geo.min.json\" },\n  { name: \"Hawaii\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/hi_hawaii_zip_codes_geo.min.json\" },\n  { name: \"Idaho\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/id_idaho_zip_codes_geo.min.json\" },\n  { name: \"Illinois\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/il_illinois_zip_codes_geo.min.json\" },\n  { name: \"Indiana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/in_indiana_zip_codes_geo.min.json\" },\n  { name: \"Iowa\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ia_iowa_zip_codes_geo.min.json\" },\n  { name: \"Kansas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ks_kansas_zip_codes_geo.min.json\" },\n  { name: \"Kentucky\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ky_kentucky_zip_codes_geo.min.json\" },\n  { name: \"Louisiana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/la_louisiana_zip_codes_geo.min.json\" },\n  { name: \"Maine\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/me_maine_zip_codes_geo.min.json\" },\n  { name: \"Maryland\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/md_maryland_zip_codes_geo.min.json\" },\n  { name: \"Massachusetts\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ma_massachusetts_zip_codes_geo.min.json\" },\n  { name: \"Michigan\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mi_michigan_zip_codes_geo.min.json\" },\n  { name: \"Minnesota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mn_minnesota_zip_codes_geo.min.json\" },\n  { name: \"Mississippi\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ms_mississippi_zip_codes_geo.min.json\" },\n  { name: \"Missouri\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mo_missouri_zip_codes_geo.min.json\" },\n  { name: \"Montana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mt_montana_zip_codes_geo.min.json\" },\n  { name: \"Nebraska\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ne_nebraska_zip_codes_geo.min.json\" },\n  { name: \"Nevada\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nv_nevada_zip_codes_geo.min.json\" },\n  { name: \"New Hampshire\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nh_new_hampshire_zip_codes_geo.min.json\" },\n  { name: \"New Jersey\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nj_new_jersey_zip_codes_geo.min.json\" },\n  { name: \"New Mexico\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nm_new_mexico_zip_codes_geo.min.json\" },\n  { name: \"New York\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ny_new_york_zip_codes_geo.min.json\" },\n  { name: \"North Carolina\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nc_north_carolina_zip_codes_geo.min.json\" },\n  { name: \"North Dakota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nd_north_dakota_zip_codes_geo.min.json\" },\n  { name: \"Ohio\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/oh_ohio_zip_codes_geo.min.json\" },\n  { name: \"Oklahoma\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ok_oklahoma_zip_codes_geo.min.json\" },\n  { name: \"Oregon\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/or_oregon_zip_codes_geo.min.json\" },\n  { name: \"Rhode Island\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ri_rhode_island_zip_codes_geo.min.json\" },\n  { name: \"South Carolina\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sc_south_carolina_zip_codes_geo.min.json\" },\n  { name: \"South Dakota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sd_south_dakota_zip_codes_geo.min.json\" },\n  { name: \"Tennessee\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tn_tennessee_zip_codes_geo.min.json\" },\n  { name: \"Texas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tx_texas_zip_codes_geo.min.json\" },\n  { name: \"Utah\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ut_utah_zip_codes_geo.min.json\" },\n  { name: \"Vermont\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/vt_vermont_zip_codes_geo.min.json\" },\n  { name: \"Virginia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/va_virginia_zip_codes_geo.min.json\" },\n  { name: \"Washington\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wa_washington_zip_codes_geo.min.json\" },\n  { name: \"West Virginia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wv_west_virginia_zip_codes_geo.min.json\" },\n  { name: \"Wisconsin\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wi_wisconsin_zip_codes_geo.min.json\" },\n  { name: \"Wyoming\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wy_wyoming_zip_codes_geo.min.json\" },\n];\n\nfunction ZipOverlay({ zipUrl }) {\n  const map = useMap();\n  const layersCache = useRef({});\n\n  useEffect(() => {\n    if (!zipUrl) return;\n\n    // Remove existing layers from the map\n    Object.values(layersCache.current).forEach((layer) => map.removeLayer(layer));\n    let currentLayer;\n\n    if (layersCache.current[zipUrl]) {\n      currentLayer = layersCache.current[zipUrl];\n      currentLayer.addTo(map);\n    } else {\n      fetch(zipUrl)\n        .then((res) => res.json())\n        .then((geoData) => {\n          currentLayer = L.geoJSON(geoData, {\n            style: {\n              color: \"#ff7800\",\n              weight: 1,\n              fillColor: \"#ffeda0\",\n              fillOpacity: 0.4,\n            },\n            onEachFeature: (feature, layerInstance) => {\n              const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n              layerInstance.bindPopup(`ZIP Code: ${zip}`);\n            },\n          });\n          layersCache.current[zipUrl] = currentLayer;\n          currentLayer.addTo(map);\n        })\n        .catch((err) => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n    }\n\n    return () => {\n      if (currentLayer) map.removeLayer(currentLayer);\n    };\n  }, [map, zipUrl]);\n\n  return null;\n}\n\nfunction DrawHandler({\n  setShapeFilteredData,\n  pricingDataRef,\n  locationsRef,\n  setDeleteFunction,\n  acreageFilteredDataRef, // we'll receive the acreage-filtered data via ref\n}) {\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n\n  const handleShapeDrawn = (layer) => {\n    shapesArrayRef.current.push(layer);\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n\n    // Use acreageFilteredData if it exists, otherwise use the full pricingData:\n    const currentPricingData = acreageFilteredDataRef.current.length\n      ? acreageFilteredDataRef.current\n      : pricingDataRef.current;\n\n    const filteredPricing = currentPricingData.filter((p) => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const filteredComps = locationsRef.current.filter((loc) => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const combinedData = [\n      ...filteredPricing.map((item) => ({\n        type: \"pricing\",\n        apn: item.apn,\n        lotAcreage: item.lotAcreage,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n      ...filteredComps.map((item) => ({\n        type: \"comps\",\n        price: item.details.PRICE,\n        acres: item.details.ACRES,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n    ];\n\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: { shapeOptions: { color: \"#ff0000\" }, showRadius: true },\n          circlemarker: false,\n          polygon: { shapeOptions: { color: \"#0000ff\" }, showArea: true },\n          rectangle: { shapeOptions: { color: \"#00ff00\" } },\n        },\n        edit: { featureGroup: drawnItems },\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n\n      map.on(\"draw:created\", (e) => {\n        const { layer } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n\n      // Provide a way to delete the selected shape\n      setDeleteFunction(() => {\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(\n            (shape) => shape !== selectedShapeRef.current\n          );\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [\n    map,\n    controlAdded,\n    pricingDataRef,\n    locationsRef,\n    setShapeFilteredData,\n    setDeleteFunction,\n    acreageFilteredDataRef,\n  ]);\n\n  return null;\n}\n\nfunction App() {\n  const [selectedStateUrl, setSelectedStateUrl] = useState(states[0].url);\n  const [locations, setLocations] = useState([]); \n  const [pricingData, setPricingData] = useState([]); \n  const [shapeFilteredData, setShapeFilteredData] = useState([]); \n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n\n  // Refs for data\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  // We also keep a ref for acreage-filtered data\n  const acreageFilteredDataRef = useRef(acreageFilteredData);\n\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n  useEffect(() => {\n    acreageFilteredDataRef.current = acreageFilteredData;\n  }, [acreageFilteredData]);\n\n  const handleMainCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        const parsedData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return Number.isFinite(lat) && Number.isFinite(lng);\n          })\n          .map((row) => ({\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            details: row,\n          }));\n        setLocations(parsedData);\n      },\n      error: (err) => console.error(\"PapaParse Error (Main CSV):\", err),\n    });\n  };\n\n  const handlePricingCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 1500000,\n      chunk: (results) => {\n        const chunkData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return (\n              Number.isFinite(lat) &&\n              Number.isFinite(lng) &&\n              row[\"APN - FORMATTED\"]\n            );\n          })\n          .map((row) => ({\n            apn: row[\"APN - FORMATTED\"],\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            lotAcreage: row[\"LOT ACREAGE\"] ? parseFloat(row[\"LOT ACREAGE\"]) : null,\n          }));\n        setPricingData((prev) => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: (err) => console.error(\"PapaParse Error (Pricing CSV):\", err),\n    });\n  };\n\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter((pd) => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(\n      (item) => item.type === \"pricing\"\n    );\n\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n\n    const pricingDataTab = filteredPricingData.map((item) => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude,\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n\n    // Remove exported APNs from the map data\n    const exportedAPNs = new Set(filteredPricingData.map((item) => item.apn));\n    setLocations((prev) =>\n      prev.filter((loc) => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"]))\n    );\n    setPricingData((prev) => prev.filter((pt) => !exportedAPNs.has(pt.apn)));\n\n    // Clear shape and acreage filters\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  // Decide which pricing markers to display: acreage-filtered or all\n  const markersToDisplay = acreageFilteredData.length\n    ? acreageFilteredData\n    : pricingData;\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n      {/* Control Panel */}\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1000,\n          top: 10,\n          right: 10,\n          background: \"#f8f9fa\",\n          padding: \"12px 15px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n          width: \"250px\",\n          fontFamily: \"Arial, sans-serif\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n        }}\n      >\n        <div style={{ display: 'none' }}>\n\n        <StateDropdown\n          states={states}\n          selectedStateUrl={selectedStateUrl}\n          onSelect={(url) => setSelectedStateUrl(url)}\n          \n          />\n          </div>\n        <h3 style={{ marginTop: 0, marginBottom: \"10px\" ,textAlign: 'center'}}>Data Controls</h3>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Main CSV:\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleMainCSVUpload}\n            style={{ width: \"100%\", marginTop: \"5px\" }}\n          />\n        </div>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Pricing CSV:\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handlePricingCSVUpload}\n            style={{ width: \"100%\", marginTop: \"5px\" }}\n          />\n        </div>\n        <div\n          style={{\n            marginBottom: \"15px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"6px\",\n            padding: \"8px\",\n          }}\n        >\n          <label style={{ fontWeight: \"bold\" }}>Acreage Filter</label>\n          <div style={{ marginTop: \"8px\" }}>\n            <div style={{ marginBottom: \"4px\" }}>\n              <label>Min Acreage:</label>\n              <input\n                type=\"number\"\n                value={minAcreage}\n                onChange={(e) => setMinAcreage(e.target.value)}\n                style={{ width: \"60px\", marginLeft: \"15px\" }}\n              />\n            </div>\n            <div style={{ marginBottom: \"15px\" }}>\n              <label>Max Acreage:</label>\n              <input\n                type=\"number\"\n                value={maxAcreage}\n                onChange={(e) => setMaxAcreage(e.target.value)}\n                style={{ width: \"60px\", marginLeft: \"10px\" }}\n              />\n            </div>\n          </div>\n          <button\n            onClick={applyAcreageFilter}\n            style={{\n              marginTop: \"10px\",\n              padding: \"6px 12px\",\n              background: \"#17a2b8\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Apply Filter\n          </button>\n          <button\n            onClick={clearFilters}\n            style={{\n              marginTop: \"10px\",\n              marginLeft: \"10px\",\n              padding: \"6px 12px\",\n              background: \"#6c757d\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Clear Filter\n          </button>\n        </div>\n        <button\n          onClick={downloadFilteredDataToExcel}\n          style={{\n            marginTop: \"5px\",\n            padding: \"8px 12px\",\n            background: \"#007bff\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          Download Filtered Data (Excel)\n        </button>\n        <button\n          onClick={() => deleteLastShapeRef.current()}\n          style={{\n            marginTop: \"10px\",\n            padding: \"8px 12px\",\n            background: \"#dc3545\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          🗑️ Delete Selected Shape\n        </button>\n      </div>\n\n      <MapContainer\n        center={[41.2033, -77.1945]}\n        zoom={7}\n        style={{ height: \"100%\", width: \"100%\" }}\n        ref={mapRef}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n        <ZipOverlay zipUrl={selectedStateUrl} />\n        <DrawHandler\n          setShapeFilteredData={setShapeFilteredData}\n          pricingDataRef={pricingDataRef}\n          locationsRef={locationsRef}\n          acreageFilteredDataRef={acreageFilteredDataRef}\n          setDeleteFunction={(fn) => {\n            deleteLastShapeRef.current = fn;\n          }}\n        />\n\n        {/* Main CSV (comps) markers */}\n        {locations\n          .filter(\n            (loc) =>\n              Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1])\n          )\n          .map((loc, index) => (\n            <Marker\n              key={`main-${index}`}\n              position={loc.coords}\n              icon={CustomMarkerIcon}\n            >\n              <Tooltip direction=\"top\" offset={[0, -10]}>\n                <div style={{ textAlign: \"left\" }}>\n                  <strong>PRICE:</strong> {loc.details.PRICE}\n                  <br />\n                  <strong>ACRES:</strong> {loc.details.ACRES}\n                </div>\n              </Tooltip>\n            </Marker>\n          ))}\n\n        {/* Pricing markers (either full or acreage-filtered) */}\n        {markersToDisplay\n          .filter((item) => {\n            const [lat, lng] = item.coords || [item.latitude, item.longitude];\n            return Number.isFinite(lat) && Number.isFinite(lng);\n          })\n          .map((point, index) => {\n            const [lat, lng] = point.coords || [point.latitude, point.longitude];\n            return (\n              <Marker key={`pricing-${index}`} position={[lat, lng]} icon={DotIcon}>\n                {point.lotAcreage !== null && (\n                  <Tooltip direction=\"top\" offset={[0, -10]}>\n                    <div>\n                      <strong>LOT ACREAGE:</strong> {point.lotAcreage}\n                    </div>\n                  </Tooltip>\n                )}\n              </Marker>\n            );\n          })}\n      </MapContainer>\n    </div>\n  );\n}\n\nfunction StateDropdown({ states, selectedStateUrl, onSelect }) {\n  const [open, setOpen] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  const toggleOpen = () => setOpen(!open);\n\n  const filteredStates = states.filter((st) =>\n    st.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div style={{ position: \"relative\", marginBottom: \"10px\" }}>\n      <div\n        onClick={toggleOpen}\n        style={{\n          padding: \"6px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          background: \"#fff\",\n        }}\n      >\n        {states.find((s) => s.url === selectedStateUrl)?.name || \"Select State\"}\n      </div>\n      {open && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"100%\",\n            left: 0,\n            right: 0,\n            background: \"#fff\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            maxHeight: \"200px\",\n            overflowY: \"auto\",\n            zIndex: 1001,\n          }}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Search state...\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            style={{ width: \"100%\", padding: \"6px\", boxSizing: \"border-box\" }}\n          />\n          {filteredStates.map((st) => (\n            <div\n              key={st.name}\n              onClick={() => {\n                onSelect(st.url);\n                setOpen(false);\n                setSearch(\"\");\n              }}\n              style={{\n                padding: \"6px\",\n                cursor: \"pointer\",\n                borderBottom: \"1px solid #eee\",\n              }}\n            >\n              {st.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,OACEC,YAAY,CACZC,SAAS,CACTC,MAAM,CACNC,OAAO,CACPC,MAAM,KACD,eAAe,CACtB,MAAO,0BAA0B,CACjC,MAAO,CAAAC,IAAI,KAAM,WAAW,CAC5B,MAAO,CAAAC,CAAC,KAAM,SAAS,CACvB,MAAO,oCAAoC,CAC3C,MAAO,cAAc,CACrB,MAAO,CAAAC,qBAAqB,KAAM,gCAAgC,CAClE,OAASC,KAAK,CAAEC,OAAO,KAAQ,eAAe,CAC9C,MAAO,GAAK,CAAAC,IAAI,KAAM,MAAM,CAE5B;AACA,MAAO,CAAAC,qBAAqB,KAAM,qBAAqB,CACvD,MAAO,CAAAC,YAAY,KAAM,iBAAiB,CAE1C;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,gBAAgB,CAAGX,CAAC,CAACY,IAAI,CAAC,CAC9BC,OAAO,CAAER,qBAAqB,CAC9BS,QAAQ,CAAE,CAAC,EAAE,CAAE,EAAE,CAAC,CAClBC,UAAU,CAAE,CAAC,EAAE,CAAE,EAAE,CAAC,CACpBC,WAAW,CAAE,CAAC,CAAC,CAAE,CAAC,EAAE,CACtB,CAAC,CAAC,CACF,KAAM,CAAAC,OAAO,CAAGjB,CAAC,CAACY,IAAI,CAAC,CACrBC,OAAO,CAAEP,YAAY,CACrBQ,QAAQ,CAAE,CAAC,EAAE,CAAE,EAAE,CAAC,CAClBC,UAAU,CAAE,CAAC,CAAC,CAAE,CAAC,CACnB,CAAC,CAAC,CAEF,KAAM,CAAAG,MAAM,CAAG,CACb,CAAEC,IAAI,CAAE,cAAc,CAAEC,GAAG,CAAE,mHAAoH,CAAC,CAClJ,CAAED,IAAI,CAAE,SAAS,CAAEC,GAAG,CAAE,yHAA0H,CAAC,CACnJ,CAAED,IAAI,CAAE,QAAQ,CAAEC,GAAG,CAAE,wHAAyH,CAAC,CACjJ,CAAED,IAAI,CAAE,SAAS,CAAEC,GAAG,CAAE,yHAA0H,CAAC,CACnJ,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,YAAY,CAAEC,GAAG,CAAE,4HAA6H,CAAC,CACzJ,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,aAAa,CAAEC,GAAG,CAAE,6HAA8H,CAAC,CAC3J,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,sBAAsB,CAAEC,GAAG,CAAE,sIAAuI,CAAC,CAC7K,CAAED,IAAI,CAAE,SAAS,CAAEC,GAAG,CAAE,yHAA0H,CAAC,CACnJ,CAAED,IAAI,CAAE,SAAS,CAAEC,GAAG,CAAE,yHAA0H,CAAC,CACnJ,CAAED,IAAI,CAAE,QAAQ,CAAEC,GAAG,CAAE,wHAAyH,CAAC,CACjJ,CAAED,IAAI,CAAE,OAAO,CAAEC,GAAG,CAAE,uHAAwH,CAAC,CAC/I,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,SAAS,CAAEC,GAAG,CAAE,yHAA0H,CAAC,CACnJ,CAAED,IAAI,CAAE,MAAM,CAAEC,GAAG,CAAE,sHAAuH,CAAC,CAC7I,CAAED,IAAI,CAAE,QAAQ,CAAEC,GAAG,CAAE,wHAAyH,CAAC,CACjJ,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,WAAW,CAAEC,GAAG,CAAE,2HAA4H,CAAC,CACvJ,CAAED,IAAI,CAAE,OAAO,CAAEC,GAAG,CAAE,uHAAwH,CAAC,CAC/I,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,eAAe,CAAEC,GAAG,CAAE,+HAAgI,CAAC,CAC/J,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,WAAW,CAAEC,GAAG,CAAE,2HAA4H,CAAC,CACvJ,CAAED,IAAI,CAAE,aAAa,CAAEC,GAAG,CAAE,6HAA8H,CAAC,CAC3J,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,SAAS,CAAEC,GAAG,CAAE,yHAA0H,CAAC,CACnJ,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,QAAQ,CAAEC,GAAG,CAAE,wHAAyH,CAAC,CACjJ,CAAED,IAAI,CAAE,eAAe,CAAEC,GAAG,CAAE,+HAAgI,CAAC,CAC/J,CAAED,IAAI,CAAE,YAAY,CAAEC,GAAG,CAAE,4HAA6H,CAAC,CACzJ,CAAED,IAAI,CAAE,YAAY,CAAEC,GAAG,CAAE,4HAA6H,CAAC,CACzJ,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,gBAAgB,CAAEC,GAAG,CAAE,gIAAiI,CAAC,CACjK,CAAED,IAAI,CAAE,cAAc,CAAEC,GAAG,CAAE,8HAA+H,CAAC,CAC7J,CAAED,IAAI,CAAE,MAAM,CAAEC,GAAG,CAAE,sHAAuH,CAAC,CAC7I,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,QAAQ,CAAEC,GAAG,CAAE,wHAAyH,CAAC,CACjJ,CAAED,IAAI,CAAE,cAAc,CAAEC,GAAG,CAAE,8HAA+H,CAAC,CAC7J,CAAED,IAAI,CAAE,gBAAgB,CAAEC,GAAG,CAAE,gIAAiI,CAAC,CACjK,CAAED,IAAI,CAAE,cAAc,CAAEC,GAAG,CAAE,8HAA+H,CAAC,CAC7J,CAAED,IAAI,CAAE,WAAW,CAAEC,GAAG,CAAE,2HAA4H,CAAC,CACvJ,CAAED,IAAI,CAAE,OAAO,CAAEC,GAAG,CAAE,uHAAwH,CAAC,CAC/I,CAAED,IAAI,CAAE,MAAM,CAAEC,GAAG,CAAE,sHAAuH,CAAC,CAC7I,CAAED,IAAI,CAAE,SAAS,CAAEC,GAAG,CAAE,yHAA0H,CAAC,CACnJ,CAAED,IAAI,CAAE,UAAU,CAAEC,GAAG,CAAE,0HAA2H,CAAC,CACrJ,CAAED,IAAI,CAAE,YAAY,CAAEC,GAAG,CAAE,4HAA6H,CAAC,CACzJ,CAAED,IAAI,CAAE,eAAe,CAAEC,GAAG,CAAE,+HAAgI,CAAC,CAC/J,CAAED,IAAI,CAAE,WAAW,CAAEC,GAAG,CAAE,2HAA4H,CAAC,CACvJ,CAAED,IAAI,CAAE,SAAS,CAAEC,GAAG,CAAE,yHAA0H,CAAC,CACpJ,CAED,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAa,IAAZ,CAAEC,MAAO,CAAC,CAAAD,IAAA,CAC5B,KAAM,CAAAE,GAAG,CAAG1B,MAAM,CAAC,CAAC,CACpB,KAAM,CAAA2B,WAAW,CAAGjC,MAAM,CAAC,CAAC,CAAC,CAAC,CAE9BC,SAAS,CAAC,IAAM,CACd,GAAI,CAAC8B,MAAM,CAAE,OAEb;AACAG,MAAM,CAACC,MAAM,CAACF,WAAW,CAACG,OAAO,CAAC,CAACC,OAAO,CAAEC,KAAK,EAAKN,GAAG,CAACO,WAAW,CAACD,KAAK,CAAC,CAAC,CAC7E,GAAI,CAAAE,YAAY,CAEhB,GAAIP,WAAW,CAACG,OAAO,CAACL,MAAM,CAAC,CAAE,CAC/BS,YAAY,CAAGP,WAAW,CAACG,OAAO,CAACL,MAAM,CAAC,CAC1CS,YAAY,CAACC,KAAK,CAACT,GAAG,CAAC,CACzB,CAAC,IAAM,CACLU,KAAK,CAACX,MAAM,CAAC,CACVY,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,OAAO,EAAK,CACjBN,YAAY,CAAGhC,CAAC,CAACuC,OAAO,CAACD,OAAO,CAAE,CAChCE,KAAK,CAAE,CACLC,KAAK,CAAE,SAAS,CAChBC,MAAM,CAAE,CAAC,CACTC,SAAS,CAAE,SAAS,CACpBC,WAAW,CAAE,GACf,CAAC,CACDC,aAAa,CAAEA,CAACC,OAAO,CAAEC,aAAa,GAAK,CACzC,KAAM,CAAAC,GAAG,CAAGF,OAAO,CAACG,UAAU,CAACC,SAAS,EAAI,aAAa,CACzDH,aAAa,CAACI,SAAS,cAAAC,MAAA,CAAcJ,GAAG,CAAE,CAAC,CAC7C,CACF,CAAC,CAAC,CACFvB,WAAW,CAACG,OAAO,CAACL,MAAM,CAAC,CAAGS,YAAY,CAC1CA,YAAY,CAACC,KAAK,CAACT,GAAG,CAAC,CACzB,CAAC,CAAC,CACD6B,KAAK,CAAEC,GAAG,EAAKC,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAEF,GAAG,CAAC,CAAC,CAC3E,CAEA,MAAO,IAAM,CACX,GAAItB,YAAY,CAAER,GAAG,CAACO,WAAW,CAACC,YAAY,CAAC,CACjD,CAAC,CACH,CAAC,CAAE,CAACR,GAAG,CAAED,MAAM,CAAC,CAAC,CAEjB,MAAO,KAAI,CACb,CAEA,QAAS,CAAAkC,WAAWA,CAAAC,KAAA,CAMjB,IANkB,CACnBC,oBAAoB,CACpBC,cAAc,CACdC,YAAY,CACZC,iBAAiB,CACjBC,sBAAwB;AAC1B,CAAC,CAAAL,KAAA,CACC,KAAM,CAAAlC,GAAG,CAAG1B,MAAM,CAAC,CAAC,CACpB,KAAM,CAACkE,YAAY,CAAEC,eAAe,CAAC,CAAG1E,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAA2E,aAAa,CAAG1E,MAAM,CAAC,IAAI,CAAC,CAClC,KAAM,CAAA2E,cAAc,CAAG3E,MAAM,CAAC,EAAE,CAAC,CACjC,KAAM,CAAA4E,gBAAgB,CAAG5E,MAAM,CAAC,IAAI,CAAC,CAErC,KAAM,CAAA6E,cAAc,CAAGA,CAACC,GAAG,CAAEC,GAAG,CAAEzC,KAAK,GAAK,CAC1C,GAAIA,KAAK,WAAY,CAAA9B,CAAC,CAACwE,MAAM,EAAI1C,KAAK,WAAY,CAAA9B,CAAC,CAACyE,YAAY,CAAE,CAChE,KAAM,CAAAC,MAAM,CAAG5C,KAAK,CAAC6C,SAAS,CAAC,CAAC,CAChC,KAAM,CAAAC,MAAM,CAAG9C,KAAK,CAAC+C,SAAS,CAAC,CAAC,CAChC,MAAO,CAAArD,GAAG,CAACsD,QAAQ,CAACJ,MAAM,CAAE1E,CAAC,CAAC+E,MAAM,CAACT,GAAG,CAAEC,GAAG,CAAC,CAAC,EAAIK,MAAM,CAC3D,CACA,KAAM,CAAAI,YAAY,CAAGlD,KAAK,CAACmD,SAAS,CAAC,CAAC,CACtC,KAAM,CAAAC,eAAe,CAAG/E,OAAO,CAAC6E,YAAY,CAACG,QAAQ,CAACC,WAAW,CAAC,CAClE,MAAO,CAAAnF,qBAAqB,CAACC,KAAK,CAAC,CAACqE,GAAG,CAAED,GAAG,CAAC,CAAC,CAAEY,eAAe,CAAC,CAClE,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAIvD,KAAK,EAAK,CAClCqC,cAAc,CAACvC,OAAO,CAAC0D,IAAI,CAACxD,KAAK,CAAC,CAClCA,KAAK,CAACyD,EAAE,CAAC,OAAO,CAAE,IAAM,CACtBnB,gBAAgB,CAACxC,OAAO,CAAGE,KAAK,CAClC,CAAC,CAAC,CAEF;AACA,KAAM,CAAA0D,kBAAkB,CAAGzB,sBAAsB,CAACnC,OAAO,CAAC6D,MAAM,CAC5D1B,sBAAsB,CAACnC,OAAO,CAC9BgC,cAAc,CAAChC,OAAO,CAE1B,KAAM,CAAA8D,eAAe,CAAGF,kBAAkB,CAACG,MAAM,CAAEC,CAAC,EAAK,CACvD,KAAM,CAACtB,GAAG,CAAEC,GAAG,CAAC,CAAGqB,CAAC,CAACC,MAAM,CAC3B,MAAO,CAAAxB,cAAc,CAACC,GAAG,CAAEC,GAAG,CAAEzC,KAAK,CAAC,CACxC,CAAC,CAAC,CAEF,KAAM,CAAAgE,aAAa,CAAGjC,YAAY,CAACjC,OAAO,CAAC+D,MAAM,CAAEI,GAAG,EAAK,CACzD,KAAM,CAACzB,GAAG,CAAEC,GAAG,CAAC,CAAGwB,GAAG,CAACF,MAAM,CAC7B,MAAO,CAAAxB,cAAc,CAACC,GAAG,CAAEC,GAAG,CAAEzC,KAAK,CAAC,CACxC,CAAC,CAAC,CAEF,KAAM,CAAAkE,YAAY,CAAG,CACnB,GAAGN,eAAe,CAAClE,GAAG,CAAEyE,IAAI,GAAM,CAChCC,IAAI,CAAE,SAAS,CACfC,GAAG,CAAEF,IAAI,CAACE,GAAG,CACbC,UAAU,CAAEH,IAAI,CAACG,UAAU,CAC3BC,QAAQ,CAAEJ,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC,CACxBS,SAAS,CAAEL,IAAI,CAACJ,MAAM,CAAC,CAAC,CAC1B,CAAC,CAAC,CAAC,CACH,GAAGC,aAAa,CAACtE,GAAG,CAAEyE,IAAI,GAAM,CAC9BC,IAAI,CAAE,OAAO,CACbK,KAAK,CAAEN,IAAI,CAACO,OAAO,CAACC,KAAK,CACzBC,KAAK,CAAET,IAAI,CAACO,OAAO,CAACG,KAAK,CACzBN,QAAQ,CAAEJ,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC,CACxBS,SAAS,CAAEL,IAAI,CAACJ,MAAM,CAAC,CAAC,CAC1B,CAAC,CAAC,CAAC,CACJ,CAEDlC,oBAAoB,CAACqC,YAAY,CAAC,CAClCzC,OAAO,CAACqD,GAAG,CAAC,sBAAsB,CAAEZ,YAAY,CAAC,CACnD,CAAC,CAEDvG,SAAS,CAAC,IAAM,CACd,GAAI,CAACuE,YAAY,CAAE,CACjB,KAAM,CAAA6C,UAAU,CAAG,GAAI,CAAA7G,CAAC,CAAC8G,YAAY,CAAC,CAAC,CACvC5C,aAAa,CAACtC,OAAO,CAAGiF,UAAU,CAClCrF,GAAG,CAACuF,QAAQ,CAACF,UAAU,CAAC,CACxB,KAAM,CAAAG,WAAW,CAAG,GAAI,CAAAhH,CAAC,CAACiH,OAAO,CAACC,IAAI,CAAC,CACrCC,IAAI,CAAE,CACJC,MAAM,CAAE,KAAK,CACbC,QAAQ,CAAE,KAAK,CACfC,MAAM,CAAE,CAAEC,YAAY,CAAE,CAAE9E,KAAK,CAAE,SAAU,CAAC,CAAE+E,UAAU,CAAE,IAAK,CAAC,CAChEC,YAAY,CAAE,KAAK,CACnBtH,OAAO,CAAE,CAAEoH,YAAY,CAAE,CAAE9E,KAAK,CAAE,SAAU,CAAC,CAAEiF,QAAQ,CAAE,IAAK,CAAC,CAC/DC,SAAS,CAAE,CAAEJ,YAAY,CAAE,CAAE9E,KAAK,CAAE,SAAU,CAAE,CAClD,CAAC,CACDmF,IAAI,CAAE,CAAEC,YAAY,CAAEhB,UAAW,CACnC,CAAC,CAAC,CACFrF,GAAG,CAACsG,UAAU,CAACd,WAAW,CAAC,CAC3B/C,eAAe,CAAC,IAAI,CAAC,CAErBzC,GAAG,CAAC+D,EAAE,CAAC,cAAc,CAAGwC,CAAC,EAAK,CAC5B,KAAM,CAAEjG,KAAM,CAAC,CAAGiG,CAAC,CACnBlB,UAAU,CAACE,QAAQ,CAACjF,KAAK,CAAC,CAC1BuD,gBAAgB,CAACvD,KAAK,CAAC,CACzB,CAAC,CAAC,CAEF;AACAgC,iBAAiB,CAAC,IAAM,CACtB,GAAIM,gBAAgB,CAACxC,OAAO,EAAIsC,aAAa,CAACtC,OAAO,CAAE,CACrDsC,aAAa,CAACtC,OAAO,CAACG,WAAW,CAACqC,gBAAgB,CAACxC,OAAO,CAAC,CAC3DuC,cAAc,CAACvC,OAAO,CAAGuC,cAAc,CAACvC,OAAO,CAAC+D,MAAM,CACnDqC,KAAK,EAAKA,KAAK,GAAK5D,gBAAgB,CAACxC,OACxC,CAAC,CACDwC,gBAAgB,CAACxC,OAAO,CAAG,IAAI,CACjC,CAAC,IAAM,IAAIuC,cAAc,CAACvC,OAAO,CAAC6D,MAAM,CAAG,CAAC,CAAE,CAC5C,KAAM,CAAAwC,SAAS,CAAG9D,cAAc,CAACvC,OAAO,CAACsG,GAAG,CAAC,CAAC,CAC9C,GAAID,SAAS,EAAI/D,aAAa,CAACtC,OAAO,CAAE,CACtCsC,aAAa,CAACtC,OAAO,CAACG,WAAW,CAACkG,SAAS,CAAC,CAC9C,CACF,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CACDzG,GAAG,CACHwC,YAAY,CACZJ,cAAc,CACdC,YAAY,CACZF,oBAAoB,CACpBG,iBAAiB,CACjBC,sBAAsB,CACvB,CAAC,CAEF,MAAO,KAAI,CACb,CAEA,QAAS,CAAAoE,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG9I,QAAQ,CAAC2B,MAAM,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CACvE,KAAM,CAACkH,SAAS,CAAEC,YAAY,CAAC,CAAGhJ,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACiJ,WAAW,CAAEC,cAAc,CAAC,CAAGlJ,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACmJ,iBAAiB,CAAE/E,oBAAoB,CAAC,CAAGpE,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACoJ,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGrJ,QAAQ,CAAC,EAAE,CAAC,CAClE,KAAM,CAACsJ,UAAU,CAAEC,aAAa,CAAC,CAAGvJ,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACwJ,UAAU,CAAEC,aAAa,CAAC,CAAGzJ,QAAQ,CAAC,EAAE,CAAC,CAEhD;AACA,KAAM,CAAAqE,cAAc,CAAGpE,MAAM,CAACgJ,WAAW,CAAC,CAC1C,KAAM,CAAA3E,YAAY,CAAGrE,MAAM,CAAC8I,SAAS,CAAC,CACtC;AACA,KAAM,CAAAvE,sBAAsB,CAAGvE,MAAM,CAACmJ,mBAAmB,CAAC,CAE1D,KAAM,CAAAM,MAAM,CAAGzJ,MAAM,CAAC,IAAI,CAAC,CAC3B,KAAM,CAAA0J,kBAAkB,CAAG1J,MAAM,CAAC,IAAM,CAAC,CAAC,CAAC,CAE3CC,SAAS,CAAC,IAAM,CACdmE,cAAc,CAAChC,OAAO,CAAG4G,WAAW,CACtC,CAAC,CAAE,CAACA,WAAW,CAAC,CAAC,CACjB/I,SAAS,CAAC,IAAM,CACdoE,YAAY,CAACjC,OAAO,CAAG0G,SAAS,CAClC,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CACf7I,SAAS,CAAC,IAAM,CACdsE,sBAAsB,CAACnC,OAAO,CAAG+G,mBAAmB,CACtD,CAAC,CAAE,CAACA,mBAAmB,CAAC,CAAC,CAEzB,KAAM,CAAAQ,mBAAmB,CAAIC,KAAK,EAAK,CACrC,KAAM,CAAAC,IAAI,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAClC,GAAI,CAACF,IAAI,CAAE,OACXtJ,IAAI,CAACyJ,KAAK,CAACH,IAAI,CAAE,CACfI,MAAM,CAAE,IAAI,CACZC,cAAc,CAAE,IAAI,CACpBC,QAAQ,CAAGC,OAAO,EAAK,CACrB,KAAM,CAAAC,UAAU,CAAGD,OAAO,CAACE,IAAI,CAC5BnE,MAAM,CAAEoE,GAAG,EAAK,CACf,KAAM,CAAAzF,GAAG,CAAG0F,UAAU,CAACD,GAAG,CAACE,QAAQ,CAAC,CACpC,KAAM,CAAA1F,GAAG,CAAGyF,UAAU,CAACD,GAAG,CAACG,SAAS,CAAC,CACrC,MAAO,CAAAC,MAAM,CAACC,QAAQ,CAAC9F,GAAG,CAAC,EAAI6F,MAAM,CAACC,QAAQ,CAAC7F,GAAG,CAAC,CACrD,CAAC,CAAC,CACD/C,GAAG,CAAEuI,GAAG,GAAM,CACblE,MAAM,CAAE,CAACmE,UAAU,CAACD,GAAG,CAACE,QAAQ,CAAC,CAAED,UAAU,CAACD,GAAG,CAACG,SAAS,CAAC,CAAC,CAC7D1D,OAAO,CAAEuD,GACX,CAAC,CAAC,CAAC,CACLxB,YAAY,CAACsB,UAAU,CAAC,CAC1B,CAAC,CACDrG,KAAK,CAAGF,GAAG,EAAKC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAEF,GAAG,CAClE,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAA+G,sBAAsB,CAAIjB,KAAK,EAAK,CACxC,KAAM,CAAAC,IAAI,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAClC,GAAI,CAACF,IAAI,CAAE,OACXtJ,IAAI,CAACyJ,KAAK,CAACH,IAAI,CAAE,CACfI,MAAM,CAAE,IAAI,CACZC,cAAc,CAAE,IAAI,CACpBY,SAAS,CAAE,OAAO,CAClBC,KAAK,CAAGX,OAAO,EAAK,CAClB,KAAM,CAAAY,SAAS,CAAGZ,OAAO,CAACE,IAAI,CAC3BnE,MAAM,CAAEoE,GAAG,EAAK,CACf,KAAM,CAAAzF,GAAG,CAAG0F,UAAU,CAACD,GAAG,CAACE,QAAQ,CAAC,CACpC,KAAM,CAAA1F,GAAG,CAAGyF,UAAU,CAACD,GAAG,CAACG,SAAS,CAAC,CACrC,MACE,CAAAC,MAAM,CAACC,QAAQ,CAAC9F,GAAG,CAAC,EACpB6F,MAAM,CAACC,QAAQ,CAAC7F,GAAG,CAAC,EACpBwF,GAAG,CAAC,iBAAiB,CAAC,CAE1B,CAAC,CAAC,CACDvI,GAAG,CAAEuI,GAAG,GAAM,CACb5D,GAAG,CAAE4D,GAAG,CAAC,iBAAiB,CAAC,CAC3BlE,MAAM,CAAE,CAACmE,UAAU,CAACD,GAAG,CAACE,QAAQ,CAAC,CAAED,UAAU,CAACD,GAAG,CAACG,SAAS,CAAC,CAAC,CAC7D9D,UAAU,CAAE2D,GAAG,CAAC,aAAa,CAAC,CAAGC,UAAU,CAACD,GAAG,CAAC,aAAa,CAAC,CAAC,CAAG,IACpE,CAAC,CAAC,CAAC,CACLtB,cAAc,CAAEgC,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAE,GAAGD,SAAS,CAAC,CAAC,CACnD,CAAC,CACDb,QAAQ,CAAEA,CAAA,GAAMpG,OAAO,CAACqD,GAAG,CAAC,+BAA+B,CAAC,CAC5DpD,KAAK,CAAGF,GAAG,EAAKC,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAEF,GAAG,CACrE,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAoH,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,MAAM,CAAGX,UAAU,CAACnB,UAAU,CAAC,CACrC,KAAM,CAAA+B,MAAM,CAAGZ,UAAU,CAACjB,UAAU,CAAC,CACrC,GAAI8B,KAAK,CAACF,MAAM,CAAC,EAAIE,KAAK,CAACD,MAAM,CAAC,CAAE,CAClCE,KAAK,CAAC,iEAAiE,CAAC,CACxE,OACF,CACA,KAAM,CAAAC,QAAQ,CAAGvC,WAAW,CAAC7C,MAAM,CAAEqF,EAAE,EAAK,CAC1C,GAAIA,EAAE,CAAC5E,UAAU,EAAI,IAAI,CAAE,MAAO,MAAK,CACvC,MAAO,CAAA4E,EAAE,CAAC5E,UAAU,EAAIuE,MAAM,EAAIK,EAAE,CAAC5E,UAAU,EAAIwE,MAAM,CAC3D,CAAC,CAAC,CACFhC,sBAAsB,CAACmC,QAAQ,CAAC,CAClC,CAAC,CAED,KAAM,CAAAE,YAAY,CAAGA,CAAA,GAAM,CACzBtH,oBAAoB,CAAC,EAAE,CAAC,CACxBiF,sBAAsB,CAAC,EAAE,CAAC,CAC1BE,aAAa,CAAC,EAAE,CAAC,CACjBE,aAAa,CAAC,EAAE,CAAC,CACnB,CAAC,CAED,KAAM,CAAAkC,2BAA2B,CAAGA,CAAA,GAAM,CACxC,KAAM,CAAAC,mBAAmB,CAAGzC,iBAAiB,CAAC/C,MAAM,CACjDM,IAAI,EAAKA,IAAI,CAACC,IAAI,GAAK,SAC1B,CAAC,CAED,GAAIiF,mBAAmB,CAAC1F,MAAM,GAAK,CAAC,CAAE,CACpCqF,KAAK,CAAC,oDAAoD,CAAC,CAC3D,OACF,CAEA,KAAM,CAAAM,cAAc,CAAGD,mBAAmB,CAAC3J,GAAG,CAAEyE,IAAI,GAAM,CACxDoF,GAAG,CAAEpF,IAAI,CAACE,GAAG,CACb,aAAa,CAAEF,IAAI,CAACG,UAAU,CAC9BkF,QAAQ,CAAErF,IAAI,CAACI,QAAQ,CACvBkF,SAAS,CAAEtF,IAAI,CAACK,SAClB,CAAC,CAAC,CAAC,CAEH,KAAM,CAAAkF,QAAQ,CAAGpL,IAAI,CAACqL,KAAK,CAACC,QAAQ,CAAC,CAAC,CACtC,KAAM,CAAAC,YAAY,CAAGvL,IAAI,CAACqL,KAAK,CAACG,aAAa,CAACR,cAAc,CAAC,CAC7DhL,IAAI,CAACqL,KAAK,CAACI,iBAAiB,CAACL,QAAQ,CAAEG,YAAY,CAAE,cAAc,CAAC,CACpEvL,IAAI,CAAC0L,SAAS,CAACN,QAAQ,CAAE,oBAAoB,CAAC,CAE9C;AACA,KAAM,CAAAO,YAAY,CAAG,GAAI,CAAAC,GAAG,CAACb,mBAAmB,CAAC3J,GAAG,CAAEyE,IAAI,EAAKA,IAAI,CAACE,GAAG,CAAC,CAAC,CACzEoC,YAAY,CAAEkC,IAAI,EAChBA,IAAI,CAAC9E,MAAM,CAAEI,GAAG,EAAK,CAACgG,YAAY,CAACE,GAAG,CAAClG,GAAG,CAACS,OAAO,CAAC,iBAAiB,CAAC,CAAC,CACxE,CAAC,CACDiC,cAAc,CAAEgC,IAAI,EAAKA,IAAI,CAAC9E,MAAM,CAAEuG,EAAE,EAAK,CAACH,YAAY,CAACE,GAAG,CAACC,EAAE,CAAC/F,GAAG,CAAC,CAAC,CAAC,CAExE;AACAxC,oBAAoB,CAAC,EAAE,CAAC,CACxBiF,sBAAsB,CAAC,EAAE,CAAC,CAE1BkC,KAAK,CAAC,oDAAoD,CAAC,CAC7D,CAAC,CAED;AACA,KAAM,CAAAqB,gBAAgB,CAAGxD,mBAAmB,CAAClD,MAAM,CAC/CkD,mBAAmB,CACnBH,WAAW,CAEf,mBACE9H,KAAA,QAAK8B,KAAK,CAAE,CAAE4J,MAAM,CAAE,OAAO,CAAEC,KAAK,CAAE,MAAM,CAAEC,QAAQ,CAAE,UAAW,CAAE,CAAAC,QAAA,eAEnE7L,KAAA,QACE8B,KAAK,CAAE,CACL8J,QAAQ,CAAE,UAAU,CACpBE,MAAM,CAAE,IAAI,CACZC,GAAG,CAAE,EAAE,CACPC,KAAK,CAAE,EAAE,CACTC,UAAU,CAAE,SAAS,CACrBC,OAAO,CAAE,WAAW,CACpBC,YAAY,CAAE,KAAK,CACnBC,SAAS,CAAE,4BAA4B,CACvCT,KAAK,CAAE,OAAO,CACdU,UAAU,CAAE,mBAAmB,CAC/BC,SAAS,CAAE,MAAM,CACjBC,SAAS,CAAE,MACb,CAAE,CAAAV,QAAA,eAEF/L,IAAA,QAAKgC,KAAK,CAAE,CAAE0K,OAAO,CAAE,MAAO,CAAE,CAAAX,QAAA,cAEhC/L,IAAA,CAAC2M,aAAa,EACZjM,MAAM,CAAEA,MAAO,CACfkH,gBAAgB,CAAEA,gBAAiB,CACnCgF,QAAQ,CAAGhM,GAAG,EAAKiH,mBAAmB,CAACjH,GAAG,CAAE,CAE3C,CAAC,CACG,CAAC,cACRZ,IAAA,OAAIgC,KAAK,CAAE,CAAE6K,SAAS,CAAE,CAAC,CAAEC,YAAY,CAAE,MAAM,CAAEC,SAAS,CAAE,QAAQ,CAAE,CAAAhB,QAAA,CAAC,eAAa,CAAI,CAAC,cACzF7L,KAAA,QAAK8B,KAAK,CAAE,CAAE8K,YAAY,CAAE,MAAO,CAAE,CAAAf,QAAA,eACnC/L,IAAA,UAAOgC,KAAK,CAAE,CAAE0K,OAAO,CAAE,OAAO,CAAEM,UAAU,CAAE,MAAO,CAAE,CAAAjB,QAAA,CAAC,kBAExD,CAAO,CAAC,cACR/L,IAAA,UACE0F,IAAI,CAAC,MAAM,CACXuH,MAAM,CAAC,MAAM,CACbC,QAAQ,CAAEvE,mBAAoB,CAC9B3G,KAAK,CAAE,CAAE6J,KAAK,CAAE,MAAM,CAAEgB,SAAS,CAAE,KAAM,CAAE,CAC5C,CAAC,EACC,CAAC,cACN3M,KAAA,QAAK8B,KAAK,CAAE,CAAE8K,YAAY,CAAE,MAAO,CAAE,CAAAf,QAAA,eACnC/L,IAAA,UAAOgC,KAAK,CAAE,CAAE0K,OAAO,CAAE,OAAO,CAAEM,UAAU,CAAE,MAAO,CAAE,CAAAjB,QAAA,CAAC,qBAExD,CAAO,CAAC,cACR/L,IAAA,UACE0F,IAAI,CAAC,MAAM,CACXuH,MAAM,CAAC,MAAM,CACbC,QAAQ,CAAErD,sBAAuB,CACjC7H,KAAK,CAAE,CAAE6J,KAAK,CAAE,MAAM,CAAEgB,SAAS,CAAE,KAAM,CAAE,CAC5C,CAAC,EACC,CAAC,cACN3M,KAAA,QACE8B,KAAK,CAAE,CACL8K,YAAY,CAAE,MAAM,CACpBK,MAAM,CAAE,gBAAgB,CACxBd,YAAY,CAAE,KAAK,CACnBD,OAAO,CAAE,KACX,CAAE,CAAAL,QAAA,eAEF/L,IAAA,UAAOgC,KAAK,CAAE,CAAEgL,UAAU,CAAE,MAAO,CAAE,CAAAjB,QAAA,CAAC,gBAAc,CAAO,CAAC,cAC5D7L,KAAA,QAAK8B,KAAK,CAAE,CAAE6K,SAAS,CAAE,KAAM,CAAE,CAAAd,QAAA,eAC/B7L,KAAA,QAAK8B,KAAK,CAAE,CAAE8K,YAAY,CAAE,KAAM,CAAE,CAAAf,QAAA,eAClC/L,IAAA,UAAA+L,QAAA,CAAO,cAAY,CAAO,CAAC,cAC3B/L,IAAA,UACE0F,IAAI,CAAC,QAAQ,CACb0H,KAAK,CAAE/E,UAAW,CAClB6E,QAAQ,CAAG3F,CAAC,EAAKe,aAAa,CAACf,CAAC,CAACuB,MAAM,CAACsE,KAAK,CAAE,CAC/CpL,KAAK,CAAE,CAAE6J,KAAK,CAAE,MAAM,CAAEwB,UAAU,CAAE,MAAO,CAAE,CAC9C,CAAC,EACC,CAAC,cACNnN,KAAA,QAAK8B,KAAK,CAAE,CAAE8K,YAAY,CAAE,MAAO,CAAE,CAAAf,QAAA,eACnC/L,IAAA,UAAA+L,QAAA,CAAO,cAAY,CAAO,CAAC,cAC3B/L,IAAA,UACE0F,IAAI,CAAC,QAAQ,CACb0H,KAAK,CAAE7E,UAAW,CAClB2E,QAAQ,CAAG3F,CAAC,EAAKiB,aAAa,CAACjB,CAAC,CAACuB,MAAM,CAACsE,KAAK,CAAE,CAC/CpL,KAAK,CAAE,CAAE6J,KAAK,CAAE,MAAM,CAAEwB,UAAU,CAAE,MAAO,CAAE,CAC9C,CAAC,EACC,CAAC,EACH,CAAC,cACNrN,IAAA,WACEsN,OAAO,CAAEpD,kBAAmB,CAC5BlI,KAAK,CAAE,CACL6K,SAAS,CAAE,MAAM,CACjBT,OAAO,CAAE,UAAU,CACnBD,UAAU,CAAE,SAAS,CACrBlK,KAAK,CAAE,OAAO,CACdkL,MAAM,CAAE,MAAM,CACdd,YAAY,CAAE,KAAK,CACnBkB,MAAM,CAAE,SACV,CAAE,CAAAxB,QAAA,CACH,cAED,CAAQ,CAAC,cACT/L,IAAA,WACEsN,OAAO,CAAE7C,YAAa,CACtBzI,KAAK,CAAE,CACL6K,SAAS,CAAE,MAAM,CACjBQ,UAAU,CAAE,MAAM,CAClBjB,OAAO,CAAE,UAAU,CACnBD,UAAU,CAAE,SAAS,CACrBlK,KAAK,CAAE,OAAO,CACdkL,MAAM,CAAE,MAAM,CACdd,YAAY,CAAE,KAAK,CACnBkB,MAAM,CAAE,SACV,CAAE,CAAAxB,QAAA,CACH,cAED,CAAQ,CAAC,EACN,CAAC,cACN/L,IAAA,WACEsN,OAAO,CAAE5C,2BAA4B,CACrC1I,KAAK,CAAE,CACL6K,SAAS,CAAE,KAAK,CAChBT,OAAO,CAAE,UAAU,CACnBD,UAAU,CAAE,SAAS,CACrBlK,KAAK,CAAE,OAAO,CACdkL,MAAM,CAAE,MAAM,CACdd,YAAY,CAAE,KAAK,CACnBkB,MAAM,CAAE,SAAS,CACjB1B,KAAK,CAAE,MACT,CAAE,CAAAE,QAAA,CACH,gCAED,CAAQ,CAAC,cACT/L,IAAA,WACEsN,OAAO,CAAEA,CAAA,GAAM5E,kBAAkB,CAACtH,OAAO,CAAC,CAAE,CAC5CY,KAAK,CAAE,CACL6K,SAAS,CAAE,MAAM,CACjBT,OAAO,CAAE,UAAU,CACnBD,UAAU,CAAE,SAAS,CACrBlK,KAAK,CAAE,OAAO,CACdkL,MAAM,CAAE,MAAM,CACdd,YAAY,CAAE,KAAK,CACnBkB,MAAM,CAAE,SAAS,CACjB1B,KAAK,CAAE,MACT,CAAE,CAAAE,QAAA,CACH,0CAED,CAAQ,CAAC,EACN,CAAC,cAEN7L,KAAA,CAAChB,YAAY,EACXgF,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,OAAO,CAAE,CAC5BsJ,IAAI,CAAE,CAAE,CACRxL,KAAK,CAAE,CAAE4J,MAAM,CAAE,MAAM,CAAEC,KAAK,CAAE,MAAO,CAAE,CACzC4B,GAAG,CAAEhF,MAAO,CAAAsD,QAAA,eAEZ/L,IAAA,CAACb,SAAS,EACRyB,GAAG,CAAC,oDAAoD,CACxD8M,WAAW,CAAC,iCAAmC,CAChD,CAAC,cACF1N,IAAA,CAACa,UAAU,EAACE,MAAM,CAAE6G,gBAAiB,CAAE,CAAC,cACxC5H,IAAA,CAACiD,WAAW,EACVE,oBAAoB,CAAEA,oBAAqB,CAC3CC,cAAc,CAAEA,cAAe,CAC/BC,YAAY,CAAEA,YAAa,CAC3BE,sBAAsB,CAAEA,sBAAuB,CAC/CD,iBAAiB,CAAGqK,EAAE,EAAK,CACzBjF,kBAAkB,CAACtH,OAAO,CAAGuM,EAAE,CACjC,CAAE,CACH,CAAC,CAGD7F,SAAS,CACP3C,MAAM,CACJI,GAAG,EACFoE,MAAM,CAACC,QAAQ,CAACrE,GAAG,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC,EAAIsE,MAAM,CAACC,QAAQ,CAACrE,GAAG,CAACF,MAAM,CAAC,CAAC,CAAC,CACnE,CAAC,CACArE,GAAG,CAAC,CAACuE,GAAG,CAAEqI,KAAK,gBACd5N,IAAA,CAACZ,MAAM,EAEL0M,QAAQ,CAAEvG,GAAG,CAACF,MAAO,CACrBjF,IAAI,CAAED,gBAAiB,CAAA4L,QAAA,cAEvB/L,IAAA,CAACX,OAAO,EAACwO,SAAS,CAAC,KAAK,CAACC,MAAM,CAAE,CAAC,CAAC,CAAE,CAAC,EAAE,CAAE,CAAA/B,QAAA,cACxC7L,KAAA,QAAK8B,KAAK,CAAE,CAAE+K,SAAS,CAAE,MAAO,CAAE,CAAAhB,QAAA,eAChC/L,IAAA,WAAA+L,QAAA,CAAQ,QAAM,CAAQ,CAAC,IAAC,CAACxG,GAAG,CAACS,OAAO,CAACC,KAAK,cAC1CjG,IAAA,QAAK,CAAC,cACNA,IAAA,WAAA+L,QAAA,CAAQ,QAAM,CAAQ,CAAC,IAAC,CAACxG,GAAG,CAACS,OAAO,CAACG,KAAK,EACvC,CAAC,CACC,CAAC,UAAAvD,MAAA,CAVGgL,KAAK,CAWZ,CACT,CAAC,CAGHjC,gBAAgB,CACdxG,MAAM,CAAEM,IAAI,EAAK,CAChB,KAAM,CAAC3B,GAAG,CAAEC,GAAG,CAAC,CAAG0B,IAAI,CAACJ,MAAM,EAAI,CAACI,IAAI,CAACI,QAAQ,CAAEJ,IAAI,CAACK,SAAS,CAAC,CACjE,MAAO,CAAA6D,MAAM,CAACC,QAAQ,CAAC9F,GAAG,CAAC,EAAI6F,MAAM,CAACC,QAAQ,CAAC7F,GAAG,CAAC,CACrD,CAAC,CAAC,CACD/C,GAAG,CAAC,CAACtB,KAAK,CAAEkO,KAAK,GAAK,CACrB,KAAM,CAAC9J,GAAG,CAAEC,GAAG,CAAC,CAAGrE,KAAK,CAAC2F,MAAM,EAAI,CAAC3F,KAAK,CAACmG,QAAQ,CAAEnG,KAAK,CAACoG,SAAS,CAAC,CACpE,mBACE9F,IAAA,CAACZ,MAAM,EAA0B0M,QAAQ,CAAE,CAAChI,GAAG,CAAEC,GAAG,CAAE,CAAC3D,IAAI,CAAEK,OAAQ,CAAAsL,QAAA,CAClErM,KAAK,CAACkG,UAAU,GAAK,IAAI,eACxB5F,IAAA,CAACX,OAAO,EAACwO,SAAS,CAAC,KAAK,CAACC,MAAM,CAAE,CAAC,CAAC,CAAE,CAAC,EAAE,CAAE,CAAA/B,QAAA,cACxC7L,KAAA,QAAA6L,QAAA,eACE/L,IAAA,WAAA+L,QAAA,CAAQ,cAAY,CAAQ,CAAC,IAAC,CAACrM,KAAK,CAACkG,UAAU,EAC5C,CAAC,CACC,CACV,aAAAhD,MAAA,CAPqBgL,KAAK,CAQrB,CAAC,CAEb,CAAC,CAAC,EACQ,CAAC,EACZ,CAAC,CAEV,CAEA,QAAS,CAAAjB,aAAaA,CAAAoB,KAAA,CAAyC,KAAAC,YAAA,IAAxC,CAAEtN,MAAM,CAAEkH,gBAAgB,CAAEgF,QAAS,CAAC,CAAAmB,KAAA,CAC3D,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGnP,QAAQ,CAAC,KAAK,CAAC,CACvC,KAAM,CAACoP,MAAM,CAAEC,SAAS,CAAC,CAAGrP,QAAQ,CAAC,EAAE,CAAC,CAExC,KAAM,CAAAsP,UAAU,CAAGA,CAAA,GAAMH,OAAO,CAAC,CAACD,IAAI,CAAC,CAEvC,KAAM,CAAAK,cAAc,CAAG5N,MAAM,CAACyE,MAAM,CAAEoJ,EAAE,EACtCA,EAAE,CAAC5N,IAAI,CAAC6N,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,MAAM,CAACK,WAAW,CAAC,CAAC,CACrD,CAAC,CAED,mBACEtO,KAAA,QAAK8B,KAAK,CAAE,CAAE8J,QAAQ,CAAE,UAAU,CAAEgB,YAAY,CAAE,MAAO,CAAE,CAAAf,QAAA,eACzD/L,IAAA,QACEsN,OAAO,CAAEe,UAAW,CACpBrM,KAAK,CAAE,CACLoK,OAAO,CAAE,KAAK,CACde,MAAM,CAAE,gBAAgB,CACxBd,YAAY,CAAE,KAAK,CACnBkB,MAAM,CAAE,SAAS,CACjBpB,UAAU,CAAE,MACd,CAAE,CAAAJ,QAAA,CAED,EAAAiC,YAAA,CAAAtN,MAAM,CAACgO,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAAC/N,GAAG,GAAKgH,gBAAgB,CAAC,UAAAoG,YAAA,iBAA9CA,YAAA,CAAgDrN,IAAI,GAAI,cAAc,CACpE,CAAC,CACLsN,IAAI,eACH/N,KAAA,QACE8B,KAAK,CAAE,CACL8J,QAAQ,CAAE,UAAU,CACpBG,GAAG,CAAE,MAAM,CACX2C,IAAI,CAAE,CAAC,CACP1C,KAAK,CAAE,CAAC,CACRC,UAAU,CAAE,MAAM,CAClBgB,MAAM,CAAE,gBAAgB,CACxBd,YAAY,CAAE,KAAK,CACnBG,SAAS,CAAE,OAAO,CAClBC,SAAS,CAAE,MAAM,CACjBT,MAAM,CAAE,IACV,CAAE,CAAAD,QAAA,eAEF/L,IAAA,UACE0F,IAAI,CAAC,MAAM,CACXmJ,WAAW,CAAC,iBAAiB,CAC7BzB,KAAK,CAAEe,MAAO,CACdjB,QAAQ,CAAG3F,CAAC,EAAK6G,SAAS,CAAC7G,CAAC,CAACuB,MAAM,CAACsE,KAAK,CAAE,CAC3CpL,KAAK,CAAE,CAAE6J,KAAK,CAAE,MAAM,CAAEO,OAAO,CAAE,KAAK,CAAE0C,SAAS,CAAE,YAAa,CAAE,CACnE,CAAC,CACDR,cAAc,CAACtN,GAAG,CAAEuN,EAAE,eACrBvO,IAAA,QAEEsN,OAAO,CAAEA,CAAA,GAAM,CACbV,QAAQ,CAAC2B,EAAE,CAAC3N,GAAG,CAAC,CAChBsN,OAAO,CAAC,KAAK,CAAC,CACdE,SAAS,CAAC,EAAE,CAAC,CACf,CAAE,CACFpM,KAAK,CAAE,CACLoK,OAAO,CAAE,KAAK,CACdmB,MAAM,CAAE,SAAS,CACjBwB,YAAY,CAAE,gBAChB,CAAE,CAAAhD,QAAA,CAEDwC,EAAE,CAAC5N,IAAI,EAZH4N,EAAE,CAAC5N,IAaL,CACN,CAAC,EACC,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAAgH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}