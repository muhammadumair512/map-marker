{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE_SOLUTIONS\\\\Desktop\\\\bolt\\\\bolt codesandbox\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40]\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5]\n});\nconst states = [{\n  name: \"Pennsylvania\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\"\n}, {\n  name: \"Alabama\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\"\n}, {\n  name: \"Alaska\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ak_alaska_zip_codes_geo.min.json\"\n}, {\n  name: \"Arizona\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/az_arizona_zip_codes_geo.min.json\"\n}, {\n  name: \"Arkansas\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ar_arkansas_zip_codes_geo.min.json\"\n}, {\n  name: \"California\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ca_california_zip_codes_geo.min.json\"\n}, {\n  name: \"Colorado\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/co_colorado_zip_codes_geo.min.json\"\n}, {\n  name: \"Connecticut\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ct_connecticut_zip_codes_geo.min.json\"\n}, {\n  name: \"Delaware\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/de_delaware_zip_codes_geo.min.json\"\n}, {\n  name: \"District of Columbia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/dc_district_of_columbia_zip_codes_geo.min.json\"\n}, {\n  name: \"Florida\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/fl_florida_zip_codes_geo.min.json\"\n}, {\n  name: \"Georgia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ga_georgia_zip_codes_geo.min.json\"\n}, {\n  name: \"Hawaii\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/hi_hawaii_zip_codes_geo.min.json\"\n}, {\n  name: \"Idaho\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/id_idaho_zip_codes_geo.min.json\"\n}, {\n  name: \"Illinois\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/il_illinois_zip_codes_geo.min.json\"\n}, {\n  name: \"Indiana\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/in_indiana_zip_codes_geo.min.json\"\n}, {\n  name: \"Iowa\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ia_iowa_zip_codes_geo.min.json\"\n}, {\n  name: \"Kansas\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ks_kansas_zip_codes_geo.min.json\"\n}, {\n  name: \"Kentucky\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ky_kentucky_zip_codes_geo.min.json\"\n}, {\n  name: \"Louisiana\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/la_louisiana_zip_codes_geo.min.json\"\n}, {\n  name: \"Maine\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/me_maine_zip_codes_geo.min.json\"\n}, {\n  name: \"Maryland\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/md_maryland_zip_codes_geo.min.json\"\n}, {\n  name: \"Massachusetts\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ma_massachusetts_zip_codes_geo.min.json\"\n}, {\n  name: \"Michigan\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mi_michigan_zip_codes_geo.min.json\"\n}, {\n  name: \"Minnesota\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mn_minnesota_zip_codes_geo.min.json\"\n}, {\n  name: \"Mississippi\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ms_mississippi_zip_codes_geo.min.json\"\n}, {\n  name: \"Missouri\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mo_missouri_zip_codes_geo.min.json\"\n}, {\n  name: \"Montana\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mt_montana_zip_codes_geo.min.json\"\n}, {\n  name: \"Nebraska\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ne_nebraska_zip_codes_geo.min.json\"\n}, {\n  name: \"Nevada\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nv_nevada_zip_codes_geo.min.json\"\n}, {\n  name: \"New Hampshire\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nh_new_hampshire_zip_codes_geo.min.json\"\n}, {\n  name: \"New Jersey\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nj_new_jersey_zip_codes_geo.min.json\"\n}, {\n  name: \"New Mexico\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nm_new_mexico_zip_codes_geo.min.json\"\n}, {\n  name: \"New York\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ny_new_york_zip_codes_geo.min.json\"\n}, {\n  name: \"North Carolina\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nc_north_carolina_zip_codes_geo.min.json\"\n}, {\n  name: \"North Dakota\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nd_north_dakota_zip_codes_geo.min.json\"\n}, {\n  name: \"Ohio\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/oh_ohio_zip_codes_geo.min.json\"\n}, {\n  name: \"Oklahoma\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ok_oklahoma_zip_codes_geo.min.json\"\n}, {\n  name: \"Oregon\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/or_oregon_zip_codes_geo.min.json\"\n}, {\n  name: \"Rhode Island\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ri_rhode_island_zip_codes_geo.min.json\"\n}, {\n  name: \"South Carolina\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sc_south_carolina_zip_codes_geo.min.json\"\n}, {\n  name: \"South Dakota\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sd_south_dakota_zip_codes_geo.min.json\"\n}, {\n  name: \"Tennessee\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tn_tennessee_zip_codes_geo.min.json\"\n}, {\n  name: \"Texas\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tx_texas_zip_codes_geo.min.json\"\n}, {\n  name: \"Utah\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ut_utah_zip_codes_geo.min.json\"\n}, {\n  name: \"Vermont\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/vt_vermont_zip_codes_geo.min.json\"\n}, {\n  name: \"Virginia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/va_virginia_zip_codes_geo.min.json\"\n}, {\n  name: \"Washington\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wa_washington_zip_codes_geo.min.json\"\n}, {\n  name: \"West Virginia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wv_west_virginia_zip_codes_geo.min.json\"\n}, {\n  name: \"Wisconsin\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wi_wisconsin_zip_codes_geo.min.json\"\n}, {\n  name: \"Wyoming\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wy_wyoming_zip_codes_geo.min.json\"\n}];\nfunction ZipOverlay() {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    const url = \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\";\n    fetch(url).then(res => res.json()).then(geoData => {\n      const layer = L.geoJSON(geoData, {\n        style: {\n          color: \"#ff7800\",\n          weight: 1,\n          fillColor: \"#ffeda0\",\n          fillOpacity: 0.4\n        },\n        onEachFeature: (feature, layerInstance) => {\n          const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n          layerInstance.bindPopup(\"ZIP Code: \".concat(zip));\n        }\n      });\n      layer.addTo(map);\n    }).catch(err => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n  }, [map]);\n  return null;\n}\n_s(ZipOverlay, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = ZipOverlay;\nfunction DrawHandler(_ref) {\n  _s2();\n  let {\n    setShapeFilteredData,\n    pricingDataRef,\n    locationsRef,\n    setDeleteFunction\n  } = _ref;\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n  const handleShapeDrawn = layer => {\n    shapesArrayRef.current.push(layer);\n\n    // Attach click event to set this shape as selected\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n    const pricingData = pricingDataRef.current;\n    const locations = locationsRef.current;\n    const filteredPricing = pricingData.filter(p => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const filteredComps = locations.filter(loc => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const combinedData = [...filteredPricing.map(item => ({\n      type: \"pricing\",\n      apn: item.apn,\n      lotAcreage: item.lotAcreage,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    })), ...filteredComps.map(item => ({\n      type: \"comps\",\n      price: item.details.PRICE,\n      acres: item.details.ACRES,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    }))];\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: {\n            shapeOptions: {\n              color: \"#ff0000\"\n            },\n            showRadius: true\n          },\n          circlemarker: false,\n          polygon: {\n            shapeOptions: {\n              color: \"#0000ff\"\n            },\n            showArea: true\n          },\n          rectangle: {\n            shapeOptions: {\n              color: \"#00ff00\"\n            }\n          }\n        },\n        edit: {\n          featureGroup: drawnItems\n        }\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n      map.on(\"draw:created\", e => {\n        const {\n          layer\n        } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n      setDeleteFunction(() => {\n        // Delete selected shape if exists, otherwise delete last shape\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(shape => shape !== selectedShapeRef.current);\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [map, controlAdded, pricingDataRef, locationsRef, setShapeFilteredData, setDeleteFunction]);\n  return null;\n}\n_s2(DrawHandler, \"0Vjk56DwBpY3/aOwBBcB/RsDvz4=\", false, function () {\n  return [useMap];\n});\n_c2 = DrawHandler;\nfunction App() {\n  _s3();\n  const [locations, setLocations] = useState([]);\n  const [pricingData, setPricingData] = useState([]);\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]);\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n  const handleMainCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        const parsedData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng);\n        }).map(row => ({\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          details: row\n        }));\n        setLocations(parsedData);\n      },\n      error: err => console.error(\"PapaParse Error (Main CSV):\", err)\n    });\n  };\n  const handlePricingCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 500,\n      chunk: results => {\n        const chunkData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng) && row[\"APN - FORMATTED\"];\n        }).map(row => ({\n          apn: row[\"APN - FORMATTED\"],\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          lotAcreage: row[\"LOT ACREAGE\"] ? parseFloat(row[\"LOT ACREAGE\"]) : null\n        }));\n        setPricingData(prev => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: err => console.error(\"PapaParse Error (Pricing CSV):\", err)\n    });\n  };\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter(pd => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(item => item.type === \"pricing\");\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n    const pricingDataTab = filteredPricingData.map(item => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude\n    }));\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n    const exportedAPNs = new Set(filteredPricingData.map(item => item.apn));\n    setLocations(prev => prev.filter(loc => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"])));\n    setPricingData(prev => prev.filter(pt => !exportedAPNs.has(pt.apn)));\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 1000,\n        top: 10,\n        right: 10,\n        background: \"#f8f9fa\",\n        padding: \"12px 15px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n        width: \"250px\",\n        fontFamily: \"Arial, sans-serif\",\n        maxHeight: \"90vh\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0,\n          marginBottom: \"10px\"\n        },\n        children: \"Data Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Main CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleMainCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Pricing CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handlePricingCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"6px\",\n          padding: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Acreage Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"4px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Min Acreage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: minAcreage,\n              onChange: e => setMinAcreage(e.target.value),\n              style: {\n                width: \"60px\",\n                marginLeft: \"15px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Max Acreage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxAcreage,\n              onChange: e => setMaxAcreage(e.target.value),\n              style: {\n                width: \"60px\",\n                marginLeft: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: applyAcreageFilter,\n          style: {\n            marginTop: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#17a2b8\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Apply Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilters,\n          style: {\n            marginTop: \"10px\",\n            marginLeft: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#6c757d\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Clear Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadFilteredDataToExcel,\n        style: {\n          marginTop: \"5px\",\n          padding: \"8px 12px\",\n          background: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"Download Filtered Data (Excel)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteLastShapeRef.current(),\n        style: {\n          marginTop: \"10px\",\n          padding: \"8px 12px\",\n          background: \"#dc3545\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"\\uD83D\\uDDD1\\uFE0F Delete Selected Shape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [41.2033, -77.1945],\n      zoom: 7,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZipOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawHandler, {\n        setShapeFilteredData: setShapeFilteredData,\n        pricingDataRef: pricingDataRef,\n        locationsRef: locationsRef,\n        setDeleteFunction: fn => {\n          deleteLastShapeRef.current = fn;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), locations.filter(loc => Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1])).map((loc, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: loc.coords,\n        icon: CustomMarkerIcon,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          direction: \"top\",\n          offset: [0, -10],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PRICE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 19\n            }, this), \" \", loc.details.PRICE, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ACRES:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 19\n            }, this), \" \", loc.details.ACRES]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 15\n        }, this)\n      }, \"main-\".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 13\n      }, this)), markersToDisplay.filter(item => item.coords && Number.isFinite(item.coords[0]) && Number.isFinite(item.coords[1]) || Number.isFinite(item.latitude) && Number.isFinite(item.longitude)).map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: point.coords && Number.isFinite(point.coords[0]) && Number.isFinite(point.coords[1]) ? point.coords : [point.latitude, point.longitude],\n        icon: DotIcon,\n        children: point.lotAcreage !== null && /*#__PURE__*/_jsxDEV(Tooltip, {\n          direction: \"top\",\n          offset: [0, -10],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"LOT ACREAGE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 21\n            }, this), \" \", point.lotAcreage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 17\n        }, this)\n      }, \"pricing-\".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"Lr2TmOgiuSnemaWjb5ZshrwQ/T8=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ZipOverlay\");\n$RefreshReg$(_c2, \"DrawHandler\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Tooltip","useMap","Papa","L","booleanPointInPolygon","point","polygon","XLSX","CustomMarkerIconImage","DotIconImage","jsxDEV","_jsxDEV","CustomMarkerIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","DotIcon","states","name","url","ZipOverlay","_s","map","fetch","then","res","json","geoData","layer","geoJSON","style","color","weight","fillColor","fillOpacity","onEachFeature","feature","layerInstance","zip","properties","ZCTA5CE10","bindPopup","concat","addTo","catch","err","console","error","_c","DrawHandler","_ref","_s2","setShapeFilteredData","pricingDataRef","locationsRef","setDeleteFunction","controlAdded","setControlAdded","drawnItemsRef","shapesArrayRef","selectedShapeRef","isPointInShape","lat","lng","Circle","CircleMarker","center","getLatLng","radius","getRadius","distance","latLng","shapeGeoJSON","toGeoJSON","polygonGeometry","geometry","coordinates","handleShapeDrawn","current","push","on","pricingData","locations","filteredPricing","filter","p","coords","filteredComps","loc","combinedData","item","type","apn","lotAcreage","latitude","longitude","price","details","PRICE","acres","ACRES","log","drawnItems","FeatureGroup","addLayer","drawControl","Control","Draw","draw","marker","polyline","circle","shapeOptions","showRadius","circlemarker","showArea","rectangle","edit","featureGroup","addControl","e","removeLayer","shape","length","lastShape","pop","_c2","App","_s3","setLocations","setPricingData","shapeFilteredData","acreageFilteredData","setAcreageFilteredData","minAcreage","setMinAcreage","maxAcreage","setMaxAcreage","mapRef","deleteLastShapeRef","handleMainCSVUpload","event","file","target","files","parse","header","skipEmptyLines","complete","results","parsedData","data","row","parseFloat","LATITUDE","LONGITUDE","Number","isFinite","handlePricingCSVUpload","chunkSize","chunk","chunkData","prev","applyAcreageFilter","minVal","maxVal","isNaN","alert","filtered","pd","clearFilters","downloadFilteredDataToExcel","filteredPricingData","pricingDataTab","APN","Latitude","Longitude","workbook","utils","book_new","pricingSheet","json_to_sheet","book_append_sheet","writeFile","exportedAPNs","Set","has","pt","markersToDisplay","height","width","position","children","zIndex","top","right","background","padding","borderRadius","boxShadow","fontFamily","maxHeight","overflowY","marginTop","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","fontWeight","accept","onChange","border","value","marginLeft","onClick","cursor","zoom","ref","attribution","fn","index","direction","offset","textAlign","_c3","$RefreshReg$"],"sources":["C:/Users/CREATIVE_SOLUTIONS/Desktop/bolt/bolt codesandbox/src/App.js"],"sourcesContent":["// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Tooltip,\n  useMap,\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40],\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5],\n});\nconst states = [\n  { name: \"Pennsylvania\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\" },\n  { name: \"Alabama\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\" },\n  { name: \"Alaska\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ak_alaska_zip_codes_geo.min.json\" },\n  { name: \"Arizona\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/az_arizona_zip_codes_geo.min.json\" },\n  { name: \"Arkansas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ar_arkansas_zip_codes_geo.min.json\" },\n  { name: \"California\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ca_california_zip_codes_geo.min.json\" },\n  { name: \"Colorado\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/co_colorado_zip_codes_geo.min.json\" },\n  { name: \"Connecticut\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ct_connecticut_zip_codes_geo.min.json\" },\n  { name: \"Delaware\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/de_delaware_zip_codes_geo.min.json\" },\n  { name: \"District of Columbia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/dc_district_of_columbia_zip_codes_geo.min.json\" },\n  { name: \"Florida\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/fl_florida_zip_codes_geo.min.json\" },\n  { name: \"Georgia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ga_georgia_zip_codes_geo.min.json\" },\n  { name: \"Hawaii\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/hi_hawaii_zip_codes_geo.min.json\" },\n  { name: \"Idaho\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/id_idaho_zip_codes_geo.min.json\" },\n  { name: \"Illinois\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/il_illinois_zip_codes_geo.min.json\" },\n  { name: \"Indiana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/in_indiana_zip_codes_geo.min.json\" },\n  { name: \"Iowa\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ia_iowa_zip_codes_geo.min.json\" },\n  { name: \"Kansas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ks_kansas_zip_codes_geo.min.json\" },\n  { name: \"Kentucky\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ky_kentucky_zip_codes_geo.min.json\" },\n  { name: \"Louisiana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/la_louisiana_zip_codes_geo.min.json\" },\n  { name: \"Maine\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/me_maine_zip_codes_geo.min.json\" },\n  { name: \"Maryland\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/md_maryland_zip_codes_geo.min.json\" },\n  { name: \"Massachusetts\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ma_massachusetts_zip_codes_geo.min.json\" },\n  { name: \"Michigan\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mi_michigan_zip_codes_geo.min.json\" },\n  { name: \"Minnesota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mn_minnesota_zip_codes_geo.min.json\" },\n  { name: \"Mississippi\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ms_mississippi_zip_codes_geo.min.json\" },\n  { name: \"Missouri\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mo_missouri_zip_codes_geo.min.json\" },\n  { name: \"Montana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mt_montana_zip_codes_geo.min.json\" },\n  { name: \"Nebraska\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ne_nebraska_zip_codes_geo.min.json\" },\n  { name: \"Nevada\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nv_nevada_zip_codes_geo.min.json\" },\n  { name: \"New Hampshire\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nh_new_hampshire_zip_codes_geo.min.json\" },\n  { name: \"New Jersey\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nj_new_jersey_zip_codes_geo.min.json\" },\n  { name: \"New Mexico\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nm_new_mexico_zip_codes_geo.min.json\" },\n  { name: \"New York\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ny_new_york_zip_codes_geo.min.json\" },\n  { name: \"North Carolina\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nc_north_carolina_zip_codes_geo.min.json\" },\n  { name: \"North Dakota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nd_north_dakota_zip_codes_geo.min.json\" },\n  { name: \"Ohio\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/oh_ohio_zip_codes_geo.min.json\" },\n  { name: \"Oklahoma\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ok_oklahoma_zip_codes_geo.min.json\" },\n  { name: \"Oregon\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/or_oregon_zip_codes_geo.min.json\" },\n  { name: \"Rhode Island\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ri_rhode_island_zip_codes_geo.min.json\" },\n  { name: \"South Carolina\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sc_south_carolina_zip_codes_geo.min.json\" },\n  { name: \"South Dakota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sd_south_dakota_zip_codes_geo.min.json\" },\n  { name: \"Tennessee\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tn_tennessee_zip_codes_geo.min.json\" },\n  { name: \"Texas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tx_texas_zip_codes_geo.min.json\" },\n  { name: \"Utah\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ut_utah_zip_codes_geo.min.json\" },\n  { name: \"Vermont\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/vt_vermont_zip_codes_geo.min.json\" },\n  { name: \"Virginia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/va_virginia_zip_codes_geo.min.json\" },\n  { name: \"Washington\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wa_washington_zip_codes_geo.min.json\" },\n  { name: \"West Virginia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wv_west_virginia_zip_codes_geo.min.json\" },\n  { name: \"Wisconsin\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wi_wisconsin_zip_codes_geo.min.json\" },\n  { name: \"Wyoming\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wy_wyoming_zip_codes_geo.min.json\" },\n];\nfunction ZipOverlay() {\n  const map = useMap();\n  useEffect(() => {\n    const url =\n      \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\";\n    fetch(url)\n      .then((res) => res.json())\n      .then((geoData) => {\n        const layer = L.geoJSON(geoData, {\n          style: {\n            color: \"#ff7800\",\n            weight: 1,\n            fillColor: \"#ffeda0\",\n            fillOpacity: 0.4,\n          },\n          onEachFeature: (feature, layerInstance) => {\n            const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n            layerInstance.bindPopup(`ZIP Code: ${zip}`);\n          },\n        });\n        layer.addTo(map);\n      })\n      .catch((err) => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n  }, [map]);\n  return null;\n}\n\nfunction DrawHandler({\n  setShapeFilteredData,\n  pricingDataRef,\n  locationsRef,\n  setDeleteFunction,\n}) {\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n\n  const handleShapeDrawn = (layer) => {\n    shapesArrayRef.current.push(layer);\n\n    // Attach click event to set this shape as selected\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n\n    const pricingData = pricingDataRef.current;\n    const locations = locationsRef.current;\n\n    const filteredPricing = pricingData.filter((p) => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const filteredComps = locations.filter((loc) => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const combinedData = [\n      ...filteredPricing.map((item) => ({\n        type: \"pricing\",\n        apn: item.apn,\n        lotAcreage: item.lotAcreage,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n      ...filteredComps.map((item) => ({\n        type: \"comps\",\n        price: item.details.PRICE,\n        acres: item.details.ACRES,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n    ];\n\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: { shapeOptions: { color: \"#ff0000\" }, showRadius: true },\n          circlemarker: false,\n          polygon: { shapeOptions: { color: \"#0000ff\" }, showArea: true },\n          rectangle: { shapeOptions: { color: \"#00ff00\" } },\n        },\n        edit: { featureGroup: drawnItems },\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n\n      map.on(\"draw:created\", (e) => {\n        const { layer } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n\n      setDeleteFunction(() => {\n        // Delete selected shape if exists, otherwise delete last shape\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(\n            (shape) => shape !== selectedShapeRef.current\n          );\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [\n    map,\n    controlAdded,\n    pricingDataRef,\n    locationsRef,\n    setShapeFilteredData,\n    setDeleteFunction,\n  ]);\n\n  return null;\n}\n\nfunction App() {\n  const [locations, setLocations] = useState([]); \n  const [pricingData, setPricingData] = useState([]); \n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]); \n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n\n  useEffect(() => { pricingDataRef.current = pricingData; }, [pricingData]);\n  useEffect(() => { locationsRef.current = locations; }, [locations]);\n\n  const handleMainCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        const parsedData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return Number.isFinite(lat) && Number.isFinite(lng);\n          })\n          .map((row) => ({\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            details: row,\n          }));\n        setLocations(parsedData);\n      },\n      error: (err) => console.error(\"PapaParse Error (Main CSV):\", err),\n    });\n  };\n\n  const handlePricingCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 500,\n      chunk: (results) => {\n        const chunkData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return (\n              Number.isFinite(lat) &&\n              Number.isFinite(lng) &&\n              row[\"APN - FORMATTED\"]\n            );\n          })\n          .map((row) => ({\n            apn: row[\"APN - FORMATTED\"],\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            lotAcreage: row[\"LOT ACREAGE\"]\n              ? parseFloat(row[\"LOT ACREAGE\"])\n              : null,\n          }));\n        setPricingData((prev) => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: (err) => console.error(\"PapaParse Error (Pricing CSV):\", err),\n    });\n  };\n\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter((pd) => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(\n      (item) => item.type === \"pricing\"\n    );\n\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n\n    const pricingDataTab = filteredPricingData.map((item) => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude,\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n\n    const exportedAPNs = new Set(filteredPricingData.map((item) => item.apn));\n    setLocations((prev) =>\n      prev.filter((loc) => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"]))\n    );\n    setPricingData((prev) => prev.filter((pt) => !exportedAPNs.has(pt.apn)));\n\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n      {/* Control Panel */}\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1000,\n          top: 10,\n          right: 10,\n          background: \"#f8f9fa\",\n          padding: \"12px 15px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n          width: \"250px\",\n          fontFamily: \"Arial, sans-serif\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n        }}\n      >\n        <h3 style={{ marginTop: 0, marginBottom: \"10px\" }}>Data Controls</h3>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Main CSV:\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleMainCSVUpload}\n            style={{ width: \"100%\", marginTop: \"5px\" }}\n          />\n        </div>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Pricing CSV:\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handlePricingCSVUpload}\n            style={{ width: \"100%\", marginTop: \"5px\" }}\n          />\n        </div>\n        <div\n          style={{\n            marginBottom: \"15px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"6px\",\n            padding: \"8px\",\n          }}\n        >\n          <label style={{ fontWeight: \"bold\" }}>Acreage Filter</label>\n          <div style={{ marginTop: \"8px\" }}>\n          <div style={{ marginBottom: \"4px\" }}>\n            <label>Min Acreage:</label>\n            <input\n              type=\"number\"\n              value={minAcreage}\n              onChange={(e) => setMinAcreage(e.target.value)}\n              style={{ width: \"60px\", marginLeft: \"15px\"}}\n            />\n            </div>\n            <div style={{ marginBottom: \"15px\" }}>\n\n            <label>Max Acreage:</label>\n            <input\n              type=\"number\"\n              value={maxAcreage}\n              onChange={(e) => setMaxAcreage(e.target.value)}\n              style={{ width: \"60px\", marginLeft: \"10px\" }}\n              />\n              </div>\n          </div>\n          <button\n            onClick={applyAcreageFilter}\n            style={{\n              marginTop: \"10px\",\n              padding: \"6px 12px\",\n              background: \"#17a2b8\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Apply Filter\n          </button>\n          <button\n            onClick={clearFilters}\n            style={{\n              marginTop: \"10px\",\n              marginLeft: \"10px\",\n              padding: \"6px 12px\",\n              background: \"#6c757d\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Clear Filter\n          </button>\n        </div>\n        <button\n          onClick={downloadFilteredDataToExcel}\n          style={{\n            marginTop: \"5px\",\n            padding: \"8px 12px\",\n            background: \"#007bff\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          Download Filtered Data (Excel)\n        </button>\n        <button\n          onClick={() => deleteLastShapeRef.current()}\n          style={{\n            marginTop: \"10px\",\n            padding: \"8px 12px\",\n            background: \"#dc3545\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          🗑️ Delete Selected Shape\n        </button>\n      </div>\n      <MapContainer\n        center={[41.2033, -77.1945]}\n        zoom={7}\n        style={{ height: \"100%\", width: \"100%\" }}\n        ref={mapRef}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n        <ZipOverlay />\n        <DrawHandler\n          setShapeFilteredData={setShapeFilteredData}\n          pricingDataRef={pricingDataRef}\n          locationsRef={locationsRef}\n          setDeleteFunction={(fn) => {\n            deleteLastShapeRef.current = fn;\n          }}\n        />\n        {locations\n          .filter(\n            (loc) =>\n              Number.isFinite(loc.coords[0]) &&\n              Number.isFinite(loc.coords[1])\n          )\n          .map((loc, index) => (\n            <Marker\n              key={`main-${index}`}\n              position={loc.coords}\n              icon={CustomMarkerIcon}\n            >\n              <Tooltip direction=\"top\" offset={[0, -10]}>\n                <div style={{ textAlign: \"left\" }}>\n                  <strong>PRICE:</strong> {loc.details.PRICE}\n                  <br />\n                  <strong>ACRES:</strong> {loc.details.ACRES}\n                </div>\n              </Tooltip>\n            </Marker>\n          ))}\n        {markersToDisplay\n          .filter(\n            (item) =>\n              (item.coords &&\n                Number.isFinite(item.coords[0]) &&\n                Number.isFinite(item.coords[1])) ||\n              (Number.isFinite(item.latitude) &&\n                Number.isFinite(item.longitude))\n          )\n          .map((point, index) => (\n            <Marker\n              key={`pricing-${index}`}\n              position={\n                point.coords &&\n                Number.isFinite(point.coords[0]) &&\n                Number.isFinite(point.coords[1])\n                  ? point.coords\n                  : [point.latitude, point.longitude]\n              }\n              icon={DotIcon}\n            >\n              {point.lotAcreage !== null && (\n                <Tooltip direction=\"top\" offset={[0, -10]}>\n                  <div>\n                    <strong>LOT ACREAGE:</strong> {point.lotAcreage}\n                  </div>\n                </Tooltip>\n              )}\n            </Marker>\n          ))}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}