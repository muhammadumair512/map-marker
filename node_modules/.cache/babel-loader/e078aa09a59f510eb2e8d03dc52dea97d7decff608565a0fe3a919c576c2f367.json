{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE_SOLUTIONS\\\\Desktop\\\\bolt\\\\bolt codesandbox\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Tooltip, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40]\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5]\n});\nconst states = [{\n  name: \"Pennsylvania\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\"\n}, {\n  name: \"Alabama\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\"\n}, {\n  name: \"Alaska\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ak_alaska_zip_codes_geo.min.json\"\n}, {\n  name: \"Arizona\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/az_arizona_zip_codes_geo.min.json\"\n}, {\n  name: \"Arkansas\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ar_arkansas_zip_codes_geo.min.json\"\n}, {\n  name: \"California\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ca_california_zip_codes_geo.min.json\"\n}, {\n  name: \"Colorado\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/co_colorado_zip_codes_geo.min.json\"\n}, {\n  name: \"Connecticut\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ct_connecticut_zip_codes_geo.min.json\"\n}, {\n  name: \"Delaware\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/de_delaware_zip_codes_geo.min.json\"\n}, {\n  name: \"District of Columbia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/dc_district_of_columbia_zip_codes_geo.min.json\"\n}, {\n  name: \"Florida\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/fl_florida_zip_codes_geo.min.json\"\n}, {\n  name: \"Georgia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ga_georgia_zip_codes_geo.min.json\"\n}, {\n  name: \"Hawaii\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/hi_hawaii_zip_codes_geo.min.json\"\n}, {\n  name: \"Idaho\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/id_idaho_zip_codes_geo.min.json\"\n}, {\n  name: \"Illinois\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/il_illinois_zip_codes_geo.min.json\"\n}, {\n  name: \"Indiana\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/in_indiana_zip_codes_geo.min.json\"\n}, {\n  name: \"Iowa\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ia_iowa_zip_codes_geo.min.json\"\n}, {\n  name: \"Kansas\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ks_kansas_zip_codes_geo.min.json\"\n}, {\n  name: \"Kentucky\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ky_kentucky_zip_codes_geo.min.json\"\n}, {\n  name: \"Louisiana\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/la_louisiana_zip_codes_geo.min.json\"\n}, {\n  name: \"Maine\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/me_maine_zip_codes_geo.min.json\"\n}, {\n  name: \"Maryland\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/md_maryland_zip_codes_geo.min.json\"\n}, {\n  name: \"Massachusetts\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ma_massachusetts_zip_codes_geo.min.json\"\n}, {\n  name: \"Michigan\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mi_michigan_zip_codes_geo.min.json\"\n}, {\n  name: \"Minnesota\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mn_minnesota_zip_codes_geo.min.json\"\n}, {\n  name: \"Mississippi\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ms_mississippi_zip_codes_geo.min.json\"\n}, {\n  name: \"Missouri\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mo_missouri_zip_codes_geo.min.json\"\n}, {\n  name: \"Montana\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mt_montana_zip_codes_geo.min.json\"\n}, {\n  name: \"Nebraska\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ne_nebraska_zip_codes_geo.min.json\"\n}, {\n  name: \"Nevada\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nv_nevada_zip_codes_geo.min.json\"\n}, {\n  name: \"New Hampshire\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nh_new_hampshire_zip_codes_geo.min.json\"\n}, {\n  name: \"New Jersey\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nj_new_jersey_zip_codes_geo.min.json\"\n}, {\n  name: \"New Mexico\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nm_new_mexico_zip_codes_geo.min.json\"\n}, {\n  name: \"New York\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ny_new_york_zip_codes_geo.min.json\"\n}, {\n  name: \"North Carolina\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nc_north_carolina_zip_codes_geo.min.json\"\n}, {\n  name: \"North Dakota\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nd_north_dakota_zip_codes_geo.min.json\"\n}, {\n  name: \"Ohio\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/oh_ohio_zip_codes_geo.min.json\"\n}, {\n  name: \"Oklahoma\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ok_oklahoma_zip_codes_geo.min.json\"\n}, {\n  name: \"Oregon\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/or_oregon_zip_codes_geo.min.json\"\n}, {\n  name: \"Rhode Island\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ri_rhode_island_zip_codes_geo.min.json\"\n}, {\n  name: \"South Carolina\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sc_south_carolina_zip_codes_geo.min.json\"\n}, {\n  name: \"South Dakota\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sd_south_dakota_zip_codes_geo.min.json\"\n}, {\n  name: \"Tennessee\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tn_tennessee_zip_codes_geo.min.json\"\n}, {\n  name: \"Texas\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tx_texas_zip_codes_geo.min.json\"\n}, {\n  name: \"Utah\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ut_utah_zip_codes_geo.min.json\"\n}, {\n  name: \"Vermont\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/vt_vermont_zip_codes_geo.min.json\"\n}, {\n  name: \"Virginia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/va_virginia_zip_codes_geo.min.json\"\n}, {\n  name: \"Washington\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wa_washington_zip_codes_geo.min.json\"\n}, {\n  name: \"West Virginia\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wv_west_virginia_zip_codes_geo.min.json\"\n}, {\n  name: \"Wisconsin\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wi_wisconsin_zip_codes_geo.min.json\"\n}, {\n  name: \"Wyoming\",\n  url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wy_wyoming_zip_codes_geo.min.json\"\n}\n\n// ... include all other states similarly ...\n];\nfunction ZipOverlay(_ref) {\n  _s();\n  let {\n    zipUrl\n  } = _ref;\n  const map = useMap();\n  useEffect(() => {\n    if (!zipUrl) return;\n    let layer;\n    fetch(zipUrl).then(res => res.json()).then(geoData => {\n      layer = L.geoJSON(geoData, {\n        style: {\n          color: \"#ff7800\",\n          weight: 1,\n          fillColor: \"#ffeda0\",\n          fillOpacity: 0.4\n        },\n        onEachFeature: (feature, layerInstance) => {\n          const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n          layerInstance.bindPopup(\"ZIP Code: \".concat(zip));\n        }\n      });\n      layer.addTo(map);\n    }).catch(err => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n    return () => {\n      if (layer) map.removeLayer(layer);\n    };\n  }, [map, zipUrl]);\n  return null;\n}\n_s(ZipOverlay, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = ZipOverlay;\nfunction DrawHandler(_ref2) {\n  _s2();\n  let {\n    setShapeFilteredData,\n    pricingDataRef,\n    locationsRef,\n    setDeleteFunction\n  } = _ref2;\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n  const handleShapeDrawn = layer => {\n    shapesArrayRef.current.push(layer);\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n    const pricingData = pricingDataRef.current;\n    const locations = locationsRef.current;\n    const filteredPricing = pricingData.filter(p => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const filteredComps = locations.filter(loc => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n    const combinedData = [...filteredPricing.map(item => ({\n      type: \"pricing\",\n      apn: item.apn,\n      lotAcreage: item.lotAcreage,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    })), ...filteredComps.map(item => ({\n      type: \"comps\",\n      price: item.details.PRICE,\n      acres: item.details.ACRES,\n      latitude: item.coords[0],\n      longitude: item.coords[1]\n    }))];\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: {\n            shapeOptions: {\n              color: \"#ff0000\"\n            },\n            showRadius: true\n          },\n          circlemarker: false,\n          polygon: {\n            shapeOptions: {\n              color: \"#0000ff\"\n            },\n            showArea: true\n          },\n          rectangle: {\n            shapeOptions: {\n              color: \"#00ff00\"\n            }\n          }\n        },\n        edit: {\n          featureGroup: drawnItems\n        }\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n      map.on(\"draw:created\", e => {\n        const {\n          layer\n        } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n      setDeleteFunction(() => {\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(shape => shape !== selectedShapeRef.current);\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [map, controlAdded, pricingDataRef, locationsRef, setShapeFilteredData, setDeleteFunction]);\n  return null;\n}\n_s2(DrawHandler, \"0Vjk56DwBpY3/aOwBBcB/RsDvz4=\", false, function () {\n  return [useMap];\n});\n_c2 = DrawHandler;\nfunction App() {\n  _s3();\n  const [selectedStateUrl, setSelectedStateUrl] = useState(states[0].url);\n  const [locations, setLocations] = useState([]);\n  const [pricingData, setPricingData] = useState([]);\n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]);\n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n  useEffect(() => {\n    pricingDataRef.current = pricingData;\n  }, [pricingData]);\n  useEffect(() => {\n    locationsRef.current = locations;\n  }, [locations]);\n  const handleMainCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        const parsedData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng);\n        }).map(row => ({\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          details: row\n        }));\n        setLocations(parsedData);\n      },\n      error: err => console.error(\"PapaParse Error (Main CSV):\", err)\n    });\n  };\n  const handlePricingCSVUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 500,\n      chunk: results => {\n        const chunkData = results.data.filter(row => {\n          const lat = parseFloat(row.LATITUDE);\n          const lng = parseFloat(row.LONGITUDE);\n          return Number.isFinite(lat) && Number.isFinite(lng) && row[\"APN - FORMATTED\"];\n        }).map(row => ({\n          apn: row[\"APN - FORMATTED\"],\n          coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n          lotAcreage: row[\"LOT ACREAGE\"] ? parseFloat(row[\"LOT ACREAGE\"]) : null\n        }));\n        setPricingData(prev => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: err => console.error(\"PapaParse Error (Pricing CSV):\", err)\n    });\n  };\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter(pd => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(item => item.type === \"pricing\");\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n    const pricingDataTab = filteredPricingData.map(item => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude\n    }));\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n    const exportedAPNs = new Set(filteredPricingData.map(item => item.apn));\n    setLocations(prev => prev.filter(loc => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"])));\n    setPricingData(prev => prev.filter(pt => !exportedAPNs.has(pt.apn)));\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 1000,\n        top: 10,\n        right: 10,\n        background: \"#f8f9fa\",\n        padding: \"12px 15px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n        width: \"250px\",\n        fontFamily: \"Arial, sans-serif\",\n        maxHeight: \"90vh\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: \"Select State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedStateUrl,\n        onChange: e => setSelectedStateUrl(e.target.value),\n        style: {\n          width: \"100%\",\n          marginBottom: \"10px\"\n        },\n        children: states.map(st => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: st.url,\n          children: st.name\n        }, st.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0,\n          marginBottom: \"10px\"\n        },\n        children: \"Data Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Main CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleMainCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontWeight: \"bold\"\n          },\n          children: \"Upload Pricing CSV:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handlePricingCSVUpload,\n          style: {\n            width: \"100%\",\n            marginTop: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"6px\",\n          padding: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Acreage Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"4px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Min Acreage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: minAcreage,\n              onChange: e => setMinAcreage(e.target.value),\n              style: {\n                width: \"60px\",\n                marginLeft: \"15px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Max Acreage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxAcreage,\n              onChange: e => setMaxAcreage(e.target.value),\n              style: {\n                width: \"60px\",\n                marginLeft: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: applyAcreageFilter,\n          style: {\n            marginTop: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#17a2b8\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Apply Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilters,\n          style: {\n            marginTop: \"10px\",\n            marginLeft: \"10px\",\n            padding: \"6px 12px\",\n            background: \"#6c757d\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Clear Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadFilteredDataToExcel,\n        style: {\n          marginTop: \"5px\",\n          padding: \"8px 12px\",\n          background: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"Download Filtered Data (Excel)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteLastShapeRef.current(),\n        style: {\n          marginTop: \"10px\",\n          padding: \"8px 12px\",\n          background: \"#dc3545\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          width: \"100%\"\n        },\n        children: \"\\uD83D\\uDDD1\\uFE0F Delete Selected Shape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [41.2033, -77.1945],\n      zoom: 7,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZipOverlay, {\n        zipUrl: selectedStateUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawHandler, {\n        setShapeFilteredData: setShapeFilteredData,\n        pricingDataRef: pricingDataRef,\n        locationsRef: locationsRef,\n        setDeleteFunction: fn => {\n          deleteLastShapeRef.current = fn;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), locations.filter(loc => Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1])).map((loc, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: loc.coords,\n        icon: CustomMarkerIcon,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          direction: \"top\",\n          offset: [0, -10],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PRICE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 19\n            }, this), \" \", loc.details.PRICE, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ACRES:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 19\n            }, this), \" \", loc.details.ACRES]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 15\n        }, this)\n      }, \"main-\".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }, this)), markersToDisplay.filter(item => item.coords && Number.isFinite(item.coords[0]) && Number.isFinite(item.coords[1]) || Number.isFinite(item.latitude) && Number.isFinite(item.longitude)).map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: point.coords && Number.isFinite(point.coords[0]) && Number.isFinite(point.coords[1]) ? point.coords : [point.latitude, point.longitude],\n        icon: DotIcon,\n        children: point.lotAcreage !== null && /*#__PURE__*/_jsxDEV(Tooltip, {\n          direction: \"top\",\n          offset: [0, -10],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"LOT ACREAGE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 21\n            }, this), \" \", point.lotAcreage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 17\n        }, this)\n      }, \"pricing-\".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"bMavGhwwojxbzU4JP28j0i7KSb8=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ZipOverlay\");\n$RefreshReg$(_c2, \"DrawHandler\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Tooltip","useMap","Papa","L","booleanPointInPolygon","point","polygon","XLSX","CustomMarkerIconImage","DotIconImage","jsxDEV","_jsxDEV","CustomMarkerIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","DotIcon","states","name","url","ZipOverlay","_ref","_s","zipUrl","map","layer","fetch","then","res","json","geoData","geoJSON","style","color","weight","fillColor","fillOpacity","onEachFeature","feature","layerInstance","zip","properties","ZCTA5CE10","bindPopup","concat","addTo","catch","err","console","error","removeLayer","_c","DrawHandler","_ref2","_s2","setShapeFilteredData","pricingDataRef","locationsRef","setDeleteFunction","controlAdded","setControlAdded","drawnItemsRef","shapesArrayRef","selectedShapeRef","isPointInShape","lat","lng","Circle","CircleMarker","center","getLatLng","radius","getRadius","distance","latLng","shapeGeoJSON","toGeoJSON","polygonGeometry","geometry","coordinates","handleShapeDrawn","current","push","on","pricingData","locations","filteredPricing","filter","p","coords","filteredComps","loc","combinedData","item","type","apn","lotAcreage","latitude","longitude","price","details","PRICE","acres","ACRES","log","drawnItems","FeatureGroup","addLayer","drawControl","Control","Draw","draw","marker","polyline","circle","shapeOptions","showRadius","circlemarker","showArea","rectangle","edit","featureGroup","addControl","e","shape","length","lastShape","pop","_c2","App","_s3","selectedStateUrl","setSelectedStateUrl","setLocations","setPricingData","shapeFilteredData","acreageFilteredData","setAcreageFilteredData","minAcreage","setMinAcreage","maxAcreage","setMaxAcreage","mapRef","deleteLastShapeRef","handleMainCSVUpload","event","file","target","files","parse","header","skipEmptyLines","complete","results","parsedData","data","row","parseFloat","LATITUDE","LONGITUDE","Number","isFinite","handlePricingCSVUpload","chunkSize","chunk","chunkData","prev","applyAcreageFilter","minVal","maxVal","isNaN","alert","filtered","pd","clearFilters","downloadFilteredDataToExcel","filteredPricingData","pricingDataTab","APN","Latitude","Longitude","workbook","utils","book_new","pricingSheet","json_to_sheet","book_append_sheet","writeFile","exportedAPNs","Set","has","pt","markersToDisplay","height","width","position","children","zIndex","top","right","background","padding","borderRadius","boxShadow","fontFamily","maxHeight","overflowY","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","marginBottom","st","marginTop","display","accept","border","marginLeft","onClick","cursor","zoom","ref","attribution","fn","index","direction","offset","textAlign","_c3","$RefreshReg$"],"sources":["C:/Users/CREATIVE_SOLUTIONS/Desktop/bolt/bolt codesandbox/src/App.js"],"sourcesContent":["// App.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Tooltip,\n  useMap,\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Papa from \"papaparse\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point, polygon } from \"@turf/helpers\";\nimport * as XLSX from \"xlsx\";\n\n// Custom icons\nimport CustomMarkerIconImage from \"./custom-marker.png\";\nimport DotIconImage from \"./small-dot.png\";\n\n// Marker icons\nconst CustomMarkerIcon = L.icon({\n  iconUrl: CustomMarkerIconImage,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n  popupAnchor: [0, -40],\n});\nconst DotIcon = L.icon({\n  iconUrl: DotIconImage,\n  iconSize: [10, 10],\n  iconAnchor: [5, 5],\n});\n\nconst states = [\n  { name: \"Pennsylvania\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/master/pa_pennsylvania_zip_codes_geo.min.json\" },\n  { name: \"Alabama\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/al_alabama_zip_codes_geo.min.json\" },\n  { name: \"Alaska\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ak_alaska_zip_codes_geo.min.json\" },\n  { name: \"Arizona\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/az_arizona_zip_codes_geo.min.json\" },\n  { name: \"Arkansas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ar_arkansas_zip_codes_geo.min.json\" },\n  { name: \"California\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ca_california_zip_codes_geo.min.json\" },\n  { name: \"Colorado\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/co_colorado_zip_codes_geo.min.json\" },\n  { name: \"Connecticut\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ct_connecticut_zip_codes_geo.min.json\" },\n  { name: \"Delaware\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/de_delaware_zip_codes_geo.min.json\" },\n  { name: \"District of Columbia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/dc_district_of_columbia_zip_codes_geo.min.json\" },\n  { name: \"Florida\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/fl_florida_zip_codes_geo.min.json\" },\n  { name: \"Georgia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ga_georgia_zip_codes_geo.min.json\" },\n  { name: \"Hawaii\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/hi_hawaii_zip_codes_geo.min.json\" },\n  { name: \"Idaho\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/id_idaho_zip_codes_geo.min.json\" },\n  { name: \"Illinois\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/il_illinois_zip_codes_geo.min.json\" },\n  { name: \"Indiana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/in_indiana_zip_codes_geo.min.json\" },\n  { name: \"Iowa\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ia_iowa_zip_codes_geo.min.json\" },\n  { name: \"Kansas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ks_kansas_zip_codes_geo.min.json\" },\n  { name: \"Kentucky\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ky_kentucky_zip_codes_geo.min.json\" },\n  { name: \"Louisiana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/la_louisiana_zip_codes_geo.min.json\" },\n  { name: \"Maine\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/me_maine_zip_codes_geo.min.json\" },\n  { name: \"Maryland\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/md_maryland_zip_codes_geo.min.json\" },\n  { name: \"Massachusetts\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ma_massachusetts_zip_codes_geo.min.json\" },\n  { name: \"Michigan\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mi_michigan_zip_codes_geo.min.json\" },\n  { name: \"Minnesota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mn_minnesota_zip_codes_geo.min.json\" },\n  { name: \"Mississippi\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ms_mississippi_zip_codes_geo.min.json\" },\n  { name: \"Missouri\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mo_missouri_zip_codes_geo.min.json\" },\n  { name: \"Montana\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/mt_montana_zip_codes_geo.min.json\" },\n  { name: \"Nebraska\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ne_nebraska_zip_codes_geo.min.json\" },\n  { name: \"Nevada\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nv_nevada_zip_codes_geo.min.json\" },\n  { name: \"New Hampshire\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nh_new_hampshire_zip_codes_geo.min.json\" },\n  { name: \"New Jersey\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nj_new_jersey_zip_codes_geo.min.json\" },\n  { name: \"New Mexico\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nm_new_mexico_zip_codes_geo.min.json\" },\n  { name: \"New York\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ny_new_york_zip_codes_geo.min.json\" },\n  { name: \"North Carolina\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nc_north_carolina_zip_codes_geo.min.json\" },\n  { name: \"North Dakota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/nd_north_dakota_zip_codes_geo.min.json\" },\n  { name: \"Ohio\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/oh_ohio_zip_codes_geo.min.json\" },\n  { name: \"Oklahoma\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ok_oklahoma_zip_codes_geo.min.json\" },\n  { name: \"Oregon\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/or_oregon_zip_codes_geo.min.json\" },\n  { name: \"Rhode Island\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ri_rhode_island_zip_codes_geo.min.json\" },\n  { name: \"South Carolina\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sc_south_carolina_zip_codes_geo.min.json\" },\n  { name: \"South Dakota\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/sd_south_dakota_zip_codes_geo.min.json\" },\n  { name: \"Tennessee\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tn_tennessee_zip_codes_geo.min.json\" },\n  { name: \"Texas\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/tx_texas_zip_codes_geo.min.json\" },\n  { name: \"Utah\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/ut_utah_zip_codes_geo.min.json\" },\n  { name: \"Vermont\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/vt_vermont_zip_codes_geo.min.json\" },\n  { name: \"Virginia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/va_virginia_zip_codes_geo.min.json\" },\n  { name: \"Washington\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wa_washington_zip_codes_geo.min.json\" },\n  { name: \"West Virginia\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wv_west_virginia_zip_codes_geo.min.json\" },\n  { name: \"Wisconsin\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wi_wisconsin_zip_codes_geo.min.json\" },\n  { name: \"Wyoming\", url: \"https://raw.githubusercontent.com/OpenDataDE/State-zip-code-GeoJSON/refs/heads/master/wy_wyoming_zip_codes_geo.min.json\" },\n\n  // ... include all other states similarly ...\n];\n\nfunction ZipOverlay({ zipUrl }) {\n  const map = useMap();\n  useEffect(() => {\n    if(!zipUrl) return;\n    let layer;\n    fetch(zipUrl)\n      .then((res) => res.json())\n      .then((geoData) => {\n        layer = L.geoJSON(geoData, {\n          style: {\n            color: \"#ff7800\",\n            weight: 1,\n            fillColor: \"#ffeda0\",\n            fillOpacity: 0.4,\n          },\n          onEachFeature: (feature, layerInstance) => {\n            const zip = feature.properties.ZCTA5CE10 || \"Unknown ZIP\";\n            layerInstance.bindPopup(`ZIP Code: ${zip}`);\n          },\n        });\n        layer.addTo(map);\n      })\n      .catch((err) => console.error(\"Error fetching ZIP code GeoJSON:\", err));\n    return () => {\n      if(layer) map.removeLayer(layer);\n    };\n  }, [map, zipUrl]);\n  return null;\n}\n\nfunction DrawHandler({\n  setShapeFilteredData,\n  pricingDataRef,\n  locationsRef,\n  setDeleteFunction,\n}) {\n  const map = useMap();\n  const [controlAdded, setControlAdded] = useState(false);\n  const drawnItemsRef = useRef(null);\n  const shapesArrayRef = useRef([]);\n  const selectedShapeRef = useRef(null);\n\n  const isPointInShape = (lat, lng, layer) => {\n    if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\n      const center = layer.getLatLng();\n      const radius = layer.getRadius();\n      return map.distance(center, L.latLng(lat, lng)) <= radius;\n    }\n    const shapeGeoJSON = layer.toGeoJSON();\n    const polygonGeometry = polygon(shapeGeoJSON.geometry.coordinates);\n    return booleanPointInPolygon(point([lng, lat]), polygonGeometry);\n  };\n\n  const handleShapeDrawn = (layer) => {\n    shapesArrayRef.current.push(layer);\n    layer.on(\"click\", () => {\n      selectedShapeRef.current = layer;\n    });\n\n    const pricingData = pricingDataRef.current;\n    const locations = locationsRef.current;\n\n    const filteredPricing = pricingData.filter((p) => {\n      const [lat, lng] = p.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const filteredComps = locations.filter((loc) => {\n      const [lat, lng] = loc.coords;\n      return isPointInShape(lat, lng, layer);\n    });\n\n    const combinedData = [\n      ...filteredPricing.map((item) => ({\n        type: \"pricing\",\n        apn: item.apn,\n        lotAcreage: item.lotAcreage,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n      ...filteredComps.map((item) => ({\n        type: \"comps\",\n        price: item.details.PRICE,\n        acres: item.details.ACRES,\n        latitude: item.coords[0],\n        longitude: item.coords[1],\n      })),\n    ];\n\n    setShapeFilteredData(combinedData);\n    console.log(\"Shape Filtered Data:\", combinedData);\n  };\n\n  useEffect(() => {\n    if (!controlAdded) {\n      const drawnItems = new L.FeatureGroup();\n      drawnItemsRef.current = drawnItems;\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        draw: {\n          marker: false,\n          polyline: false,\n          circle: { shapeOptions: { color: \"#ff0000\" }, showRadius: true },\n          circlemarker: false,\n          polygon: { shapeOptions: { color: \"#0000ff\" }, showArea: true },\n          rectangle: { shapeOptions: { color: \"#00ff00\" } },\n        },\n        edit: { featureGroup: drawnItems },\n      });\n      map.addControl(drawControl);\n      setControlAdded(true);\n\n      map.on(\"draw:created\", (e) => {\n        const { layer } = e;\n        drawnItems.addLayer(layer);\n        handleShapeDrawn(layer);\n      });\n\n      setDeleteFunction(() => {\n        if (selectedShapeRef.current && drawnItemsRef.current) {\n          drawnItemsRef.current.removeLayer(selectedShapeRef.current);\n          shapesArrayRef.current = shapesArrayRef.current.filter(\n            (shape) => shape !== selectedShapeRef.current\n          );\n          selectedShapeRef.current = null;\n        } else if (shapesArrayRef.current.length > 0) {\n          const lastShape = shapesArrayRef.current.pop();\n          if (lastShape && drawnItemsRef.current) {\n            drawnItemsRef.current.removeLayer(lastShape);\n          }\n        }\n      });\n    }\n  }, [\n    map,\n    controlAdded,\n    pricingDataRef,\n    locationsRef,\n    setShapeFilteredData,\n    setDeleteFunction,\n  ]);\n\n  return null;\n}\n\nfunction App() {\n  const [selectedStateUrl, setSelectedStateUrl] = useState(states[0].url);\n  const [locations, setLocations] = useState([]); \n  const [pricingData, setPricingData] = useState([]); \n  const pricingDataRef = useRef(pricingData);\n  const locationsRef = useRef(locations);\n  const [shapeFilteredData, setShapeFilteredData] = useState([]); \n  const [acreageFilteredData, setAcreageFilteredData] = useState([]);\n  const [minAcreage, setMinAcreage] = useState(\"\");\n  const [maxAcreage, setMaxAcreage] = useState(\"\");\n  const mapRef = useRef(null);\n  const deleteLastShapeRef = useRef(() => {});\n\n  useEffect(() => { pricingDataRef.current = pricingData; }, [pricingData]);\n  useEffect(() => { locationsRef.current = locations; }, [locations]);\n\n  const handleMainCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        const parsedData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return Number.isFinite(lat) && Number.isFinite(lng);\n          })\n          .map((row) => ({\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            details: row,\n          }));\n        setLocations(parsedData);\n      },\n      error: (err) => console.error(\"PapaParse Error (Main CSV):\", err),\n    });\n  };\n\n  const handlePricingCSVUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      chunkSize: 500,\n      chunk: (results) => {\n        const chunkData = results.data\n          .filter((row) => {\n            const lat = parseFloat(row.LATITUDE);\n            const lng = parseFloat(row.LONGITUDE);\n            return (\n              Number.isFinite(lat) &&\n              Number.isFinite(lng) &&\n              row[\"APN - FORMATTED\"]\n            );\n          })\n          .map((row) => ({\n            apn: row[\"APN - FORMATTED\"],\n            coords: [parseFloat(row.LATITUDE), parseFloat(row.LONGITUDE)],\n            lotAcreage: row[\"LOT ACREAGE\"]\n              ? parseFloat(row[\"LOT ACREAGE\"])\n              : null,\n          }));\n        setPricingData((prev) => [...prev, ...chunkData]);\n      },\n      complete: () => console.log(\"Pricing CSV parsing complete!\"),\n      error: (err) => console.error(\"PapaParse Error (Pricing CSV):\", err),\n    });\n  };\n\n  const applyAcreageFilter = () => {\n    const minVal = parseFloat(minAcreage);\n    const maxVal = parseFloat(maxAcreage);\n    if (isNaN(minVal) || isNaN(maxVal)) {\n      alert(\"Please enter valid numeric values for both min and max acreage.\");\n      return;\n    }\n    const filtered = pricingData.filter((pd) => {\n      if (pd.lotAcreage == null) return false;\n      return pd.lotAcreage >= minVal && pd.lotAcreage <= maxVal;\n    });\n    setAcreageFilteredData(filtered);\n  };\n\n  const clearFilters = () => {\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n    setMinAcreage(\"\");\n    setMaxAcreage(\"\");\n  };\n\n  const downloadFilteredDataToExcel = () => {\n    const filteredPricingData = shapeFilteredData.filter(\n      (item) => item.type === \"pricing\"\n    );\n\n    if (filteredPricingData.length === 0) {\n      alert(\"No data points within the drawn shape to download.\");\n      return;\n    }\n\n    const pricingDataTab = filteredPricingData.map((item) => ({\n      APN: item.apn,\n      \"LOT ACREAGE\": item.lotAcreage,\n      Latitude: item.latitude,\n      Longitude: item.longitude,\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    const pricingSheet = XLSX.utils.json_to_sheet(pricingDataTab);\n    XLSX.utils.book_append_sheet(workbook, pricingSheet, \"Pricing Data\");\n    XLSX.writeFile(workbook, \"filtered_data.xlsx\");\n\n    const exportedAPNs = new Set(filteredPricingData.map((item) => item.apn));\n    setLocations((prev) =>\n      prev.filter((loc) => !exportedAPNs.has(loc.details[\"APN - FORMATTED\"]))\n    );\n    setPricingData((prev) => prev.filter((pt) => !exportedAPNs.has(pt.apn)));\n\n    setShapeFilteredData([]);\n    setAcreageFilteredData([]);\n\n    alert(\"Filtered data downloaded and removed from the map.\");\n  };\n\n  const markersToDisplay = acreageFilteredData.length ? acreageFilteredData : pricingData;\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n      {/* Control Panel */}\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1000,\n          top: 10,\n          right: 10,\n          background: \"#f8f9fa\",\n          padding: \"12px 15px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 3px 8px rgba(0,0,0,0.15)\",\n          width: \"250px\",\n          fontFamily: \"Arial, sans-serif\",\n          maxHeight: \"90vh\",\n          overflowY: \"auto\",\n        }}\n      >\n        <label style={{ fontWeight: \"bold\" }}>Select State:</label>\n        <select\n          value={selectedStateUrl}\n          onChange={(e) => setSelectedStateUrl(e.target.value)}\n          style={{ width: \"100%\", marginBottom: \"10px\" }}\n        >\n          {states.map((st) => (\n            <option key={st.name} value={st.url}>{st.name}</option>\n          ))}\n        </select>\n        <h3 style={{ marginTop: 0, marginBottom: \"10px\" }}>Data Controls</h3>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Main CSV:\n          </label>\n          <input type=\"file\" accept=\".csv\" onChange={handleMainCSVUpload} style={{ width: \"100%\", marginTop: \"5px\" }} />\n        </div>\n        <div style={{ marginBottom: \"15px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\" }}>\n            Upload Pricing CSV:\n          </label>\n          <input type=\"file\" accept=\".csv\" onChange={handlePricingCSVUpload} style={{ width: \"100%\", marginTop: \"5px\" }} />\n        </div>\n        <div style={{ marginBottom: \"15px\", border: \"1px solid #ccc\", borderRadius: \"6px\", padding: \"8px\" }}>\n          <label style={{ fontWeight: \"bold\" }}>Acreage Filter</label>\n          <div style={{ marginTop: \"8px\" }}>\n            <div style={{ marginBottom: \"4px\" }}>\n              <label>Min Acreage:</label>\n              <input type=\"number\" value={minAcreage} onChange={(e) => setMinAcreage(e.target.value)} style={{ width: \"60px\", marginLeft: \"15px\" }} />\n            </div>\n            <div style={{ marginBottom: \"15px\" }}>\n              <label>Max Acreage:</label>\n              <input type=\"number\" value={maxAcreage} onChange={(e) => setMaxAcreage(e.target.value)} style={{ width: \"60px\", marginLeft: \"10px\" }} />\n            </div>\n          </div>\n          <button onClick={applyAcreageFilter} style={{ marginTop: \"10px\", padding: \"6px 12px\", background: \"#17a2b8\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\" }}>\n            Apply Filter\n          </button>\n          <button onClick={clearFilters} style={{ marginTop: \"10px\", marginLeft: \"10px\", padding: \"6px 12px\", background: \"#6c757d\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\" }}>\n            Clear Filter\n          </button>\n        </div>\n        <button onClick={downloadFilteredDataToExcel} style={{ marginTop: \"5px\", padding: \"8px 12px\", background: \"#007bff\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", width: \"100%\" }}>\n          Download Filtered Data (Excel)\n        </button>\n        <button onClick={() => deleteLastShapeRef.current()} style={{ marginTop: \"10px\", padding: \"8px 12px\", background: \"#dc3545\", color: \"white\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", width: \"100%\" }}>\n          🗑️ Delete Selected Shape\n        </button>\n      </div>\n      <MapContainer center={[41.2033, -77.1945]} zoom={7} style={{ height: \"100%\", width: \"100%\" }} ref={mapRef}>\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; OpenStreetMap contributors\" />\n        <ZipOverlay zipUrl={selectedStateUrl} />\n        <DrawHandler\n          setShapeFilteredData={setShapeFilteredData}\n          pricingDataRef={pricingDataRef}\n          locationsRef={locationsRef}\n          setDeleteFunction={(fn) => { deleteLastShapeRef.current = fn; }}\n        />\n        {locations\n          .filter((loc) => Number.isFinite(loc.coords[0]) && Number.isFinite(loc.coords[1]))\n          .map((loc, index) => (\n            <Marker key={`main-${index}`} position={loc.coords} icon={CustomMarkerIcon}>\n              <Tooltip direction=\"top\" offset={[0, -10]}>\n                <div style={{ textAlign: \"left\" }}>\n                  <strong>PRICE:</strong> {loc.details.PRICE}\n                  <br />\n                  <strong>ACRES:</strong> {loc.details.ACRES}\n                </div>\n              </Tooltip>\n            </Marker>\n          ))}\n        {markersToDisplay\n          .filter(\n            (item) =>\n              (item.coords &&\n                Number.isFinite(item.coords[0]) &&\n                Number.isFinite(item.coords[1])) ||\n              (Number.isFinite(item.latitude) && Number.isFinite(item.longitude))\n          )\n          .map((point, index) => (\n            <Marker\n              key={`pricing-${index}`}\n              position={\n                point.coords &&\n                Number.isFinite(point.coords[0]) &&\n                Number.isFinite(point.coords[1])\n                  ? point.coords\n                  : [point.latitude, point.longitude]\n              }\n              icon={DotIcon}\n            >\n              {point.lotAcreage !== null && (\n                <Tooltip direction=\"top\" offset={[0, -10]}>\n                  <div>\n                    <strong>LOT ACREAGE:</strong> {point.lotAcreage}\n                  </div>\n                </Tooltip>\n              )}\n            </Marker>\n          ))}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}